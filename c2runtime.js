// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.nextHighestPowerOfTwo = function(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		if (x >= 0)
			return x | 0;
		else
			return (x | 0) - 1;		// correctly round down when negative
	};
	cr.ceil = function (x)
	{
		var f = x | 0;
		return (f === x ? f : f + 1);
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		var max_ax, min_ax, max_ay, min_ay, max_bx, min_bx, max_by, min_by;
		if (a1x < a2x)
		{
			min_ax = a1x;
			max_ax = a2x;
		}
		else
		{
			min_ax = a2x;
			max_ax = a1x;
		}
		if (b1x < b2x)
		{
			min_bx = b1x;
			max_bx = b2x;
		}
		else
		{
			min_bx = b2x;
			max_bx = b1x;
		}
		if (max_ax < min_bx || min_ax > max_bx)
			return false;
		if (a1y < a2y)
		{
			min_ay = a1y;
			max_ay = a2y;
		}
		else
		{
			min_ay = a2y;
			max_ay = a1y;
		}
		if (b1y < b2y)
		{
			min_by = b1y;
			max_by = b2y;
		}
		else
		{
			min_by = b2y;
			max_by = b1y;
		}
		if (max_ay < min_by || min_ay > max_by)
			return false;
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		if (cr.abs(la) > d)
			return false;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.copy = function (r)
	{
		this.left = r.left;
		this.top = r.top;
		this.right = r.right;
		this.bottom = r.bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.normalize = function ()
	{
		var temp = 0;
		if (this.left > this.right)
		{
			temp = this.left;
			this.left = this.right;
			this.right = temp;
		}
		if (this.top > this.bottom)
		{
			temp = this.top;
			this.top = this.bottom;
			this.bottom = temp;
		}
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.intersects_rect_off = function (rc, ox, oy)
	{
		return !(rc.right + ox < this.left || rc.bottom + oy < this.top || rc.left + ox > this.right || rc.top + oy > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	Rect.prototype.equals = function (r)
	{
		return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	var minresult = 0;
	var maxresult = 0;
	function minmax4(a, b, c, d)
	{
		if (a < b)
		{
			if (c < d)
			{
				if (a < c)
					minresult = a;
				else
					minresult = c;
				if (b > d)
					maxresult = b;
				else
					maxresult = d;
			}
			else
			{
				if (a < d)
					minresult = a;
				else
					minresult = d;
				if (b > c)
					maxresult = b;
				else
					maxresult = c;
			}
		}
		else
		{
			if (c < d)
			{
				if (b < c)
					minresult = b;
				else
					minresult = c;
				if (a > d)
					maxresult = a;
				else
					maxresult = d;
			}
			else
			{
				if (b < d)
					minresult = b;
				else
					minresult = d;
				if (a > c)
					maxresult = a;
				else
					maxresult = c;
			}
		}
	};
	Quad.prototype.bounding_box = function (rc)
	{
		minmax4(this.tlx, this.trx, this.brx, this.blx);
		rc.left = minresult;
		rc.right = maxresult;
		minmax4(this.tly, this.try_, this.bry, this.bly);
		rc.top = minresult;
		rc.bottom = maxresult;
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		if (xory)
		{
			switch (i)
			{
				case 0: return this.tlx;
				case 1: return this.trx;
				case 2: return this.brx;
				case 3: return this.blx;
				case 4: return this.tlx;
				default: return this.tlx;
			}
		}
		else
		{
			switch (i)
			{
				case 0: return this.tly;
				case 1: return this.try_;
				case 2: return this.bry;
				case 3: return this.bly;
				case 4: return this.tly;
				default: return this.tly;
			}
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		if (index === 0)					// removing first item
			arr.shift();
		else if (index === arr.length - 1)	// removing last item
			arr.pop();
		else
		{
			for (i = index, len = arr.length - 1; i < len; i++)
				arr[i] = arr[i + 1];
			arr.length = len;
		}
	};
	cr.shallowAssignArray = function (dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.appendArray = function (a, b)
	{
		a.push.apply(a, b);
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = arr.indexOf(item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["mozNow"] !== "undefined")
				return winperf["mozNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var supports_set = (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined");
	function ObjectSet_()
	{
		this.s = null;
		this.items = null;
		this.item_count = 0;
		if (supports_set)
		{
			this.s = new Set();
		}
		else
		{
			this.items = {};
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (supports_set)
			return this.s["has"](x);
		else
			return this.items.hasOwnProperty(x.toString());
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (!this.items.hasOwnProperty(str))
			{
				this.items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (this.items.hasOwnProperty(str))
			{
				delete this.items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.clear = function ()
	{
		if (supports_set)
		{
			this.s["clear"]();
		}
		else
		{
			this.items = {};
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
		return this;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		if (supports_set)
			return this.s["size"] === 0;
		else
			return this.item_count === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			this.values_cache.length = this.item_count;
			var p, n = 0;
			for (p in this.items)
			{
				if (this.items.hasOwnProperty(p))
					this.values_cache[n++] = this.items[p];
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.values = function ()
	{
		this.update_cache();
		return this.values_cache.slice(0);
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.bboxLeft = 0;
		this.bboxTop = 0;
		this.bboxRight = 0;
		this.bboxBottom = 0;
		this.convexpolys = null;		// for physics behavior to cache separated polys
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.update_bbox = function ()
	{
		var myptscache = this.pts_cache;
		var bboxLeft_ = myptscache[0];
		var bboxRight_ = bboxLeft_;
		var bboxTop_ = myptscache[1];
		var bboxBottom_ = bboxTop_;
		var x, y, i = 1, i2, len = this.pts_count;
		for ( ; i < len; ++i)
		{
			i2 = i*2;
			x = myptscache[i2];
			y = myptscache[i2+1];
			if (x < bboxLeft_)
				bboxLeft_ = x;
			if (x > bboxRight_)
				bboxRight_ = x;
			if (y < bboxTop_)
				bboxTop_ = y;
			if (y > bboxBottom_)
				bboxBottom_ = y;
		}
		this.bboxLeft = bboxLeft_;
		this.bboxRight = bboxRight_;
		this.bboxTop = bboxTop_;
		this.bboxBottom = bboxBottom_;
	};
	CollisionPoly_.prototype.set_from_rect = function(rc, offx, offy)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = rc.left - offx;
		myptscache[1] = rc.top - offy;
		myptscache[2] = rc.right - offx;
		myptscache[3] = rc.top - offy;
		myptscache[4] = rc.right - offx;
		myptscache[5] = rc.bottom - offy;
		myptscache[6] = rc.left - offx;
		myptscache[7] = rc.bottom - offy;
		this.cache_width = rc.right - rc.left;
		this.cache_height = rc.bottom - rc.top;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
		this.bboxLeft = r.bboxLeft;
		this.bboxTop - r.bboxTop;
		this.bboxRight = r.bboxRight;
		this.bboxBottom = r.bboxBottom;
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, i2, i21, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			i2 = i*2;
			i21 = i2+1;
			x = myptsarray[i2] * w;
			y = myptsarray[i21] * h;
			myptscache[i2] = (x * cosa) - (y * sina);
			myptscache[i21] = (y * cosa) + (x * sina);
		}
		this.update_bbox();
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, i2, imod, len = this.pts_count;
		var a1x = this.bboxLeft - 110;
		var a1y = this.bboxTop - 101;
		var a3x = this.bboxRight + 131
		var a3y = this.bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			i2 = i*2;
			imod = ((i+1)%len)*2;
			b1x = myptscache[i2];
			b1y = myptscache[i2+1];
			b2x = myptscache[imod];
			b2y = myptscache[imod+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, i2, imod, leni, j, j2, jmod, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2];
			a1y = mypts[i2+1];
			a2x = mypts[imod];
			a2y = mypts[imod+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				j2 = j*2;
				jmod = ((j+1)%lenj)*2;
				b1x = rhspts[j2] + offx;
				b1y = rhspts[j2+1] + offy;
				b2x = rhspts[jmod] + offx;
				b2y = rhspts[jmod+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni, i2, imod;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2] + offx;
			a1y = mypts[i2+1] + offy;
			a2x = mypts[imod] + offx;
			a2y = mypts[imod+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	CollisionPoly_.prototype.mirror = function (px)
	{
		var i, leni, i2;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			this.pts_cache[i2] = px * 2 - this.pts_cache[i2];
		}
	};
	CollisionPoly_.prototype.flip = function (py)
	{
		var i, leni, i21;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i21 = i*2+1;
			this.pts_cache[i21] = py * 2 - this.pts_cache[i21];
		}
	};
	CollisionPoly_.prototype.diag = function ()
	{
		var i, leni, i2, i21, temp;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			i21 = i2+1;
			temp = this.pts_cache[i2];
			this.pts_cache[i2] = this.pts_cache[i21];
			this.pts_cache[i21] = temp;
		}
	};
	cr.CollisionPoly = CollisionPoly_;
	function SparseGrid_(cellwidth_, cellheight_)
	{
		this.cellwidth = cellwidth_;
		this.cellheight = cellheight_;
		this.cells = {};
	};
	SparseGrid_.prototype.totalCellCount = 0;
	SparseGrid_.prototype.getCell = function (x_, y_, create_if_missing)
	{
		var ret;
		var col = this.cells[x_];
		if (!col)
		{
			if (create_if_missing)
			{
				ret = allocGridCell(this, x_, y_);
				this.cells[x_] = {};
				this.cells[x_][y_] = ret;
				return ret;
			}
			else
				return null;
		}
		ret = col[y_];
		if (ret)
			return ret;
		else if (create_if_missing)
		{
			ret = allocGridCell(this, x_, y_);
			this.cells[x_][y_] = ret;
			return ret;
		}
		else
			return null;
	};
	SparseGrid_.prototype.XToCell = function (x_)
	{
		return cr.floor(x_ / this.cellwidth);
	};
	SparseGrid_.prototype.YToCell = function (y_)
	{
		return cr.floor(y_ / this.cellheight);
	};
	SparseGrid_.prototype.update = function (inst, oldrange, newrange)
	{
		var x, lenx, y, leny, cell;
		if (oldrange)
		{
			for (x = oldrange.left, lenx = oldrange.right; x <= lenx; ++x)
			{
				for (y = oldrange.top, leny = oldrange.bottom; y <= leny; ++y)
				{
					if (newrange && newrange.contains_pt(x, y))
						continue;	// is still in this cell
					cell = this.getCell(x, y, false);	// don't create if missing
					if (!cell)
						continue;	// cell does not exist yet
					cell.remove(inst);
					if (cell.isEmpty())
					{
						freeGridCell(cell);
						this.cells[x][y] = null;
					}
				}
			}
		}
		if (newrange)
		{
			for (x = newrange.left, lenx = newrange.right; x <= lenx; ++x)
			{
				for (y = newrange.top, leny = newrange.bottom; y <= leny; ++y)
				{
					if (oldrange && oldrange.contains_pt(x, y))
						continue;	// is still in this cell
					this.getCell(x, y, true).insert(inst);
				}
			}
		}
	};
	SparseGrid_.prototype.queryRange = function (rc, result)
	{
		var x, lenx, ystart, y, leny, cell;
		x = this.XToCell(rc.left);
		ystart = this.YToCell(rc.top);
		lenx = this.XToCell(rc.right);
		leny = this.YToCell(rc.bottom);
		for ( ; x <= lenx; ++x)
		{
			for (y = ystart; y <= leny; ++y)
			{
				cell = this.getCell(x, y, false);
				if (!cell)
					continue;
				cell.dump(result);
			}
		}
	};
	cr.SparseGrid = SparseGrid_;
	var gridcellcache = [];
	function allocGridCell(grid_, x_, y_)
	{
		var ret;
		SparseGrid_.prototype.totalCellCount++;
		if (gridcellcache.length)
		{
			ret = gridcellcache.pop();
			ret.grid = grid_;
			ret.x = x_;
			ret.y = y_;
			return ret;
		}
		else
			return new cr.GridCell(grid_, x_, y_);
	};
	function freeGridCell(c)
	{
		SparseGrid_.prototype.totalCellCount--;
		c.objects.clear();
		if (gridcellcache.length < 1000)
			gridcellcache.push(c);
	};
	function GridCell_(grid_, x_, y_)
	{
		this.grid = grid_;
		this.x = x_;
		this.y = y_;
		this.objects = new cr.ObjectSet();
	};
	GridCell_.prototype.isEmpty = function ()
	{
		return this.objects.isEmpty();
	};
	GridCell_.prototype.insert = function (inst)
	{
		this.objects.add(inst);
	};
	GridCell_.prototype.remove = function (inst)
	{
		this.objects.remove(inst);
	};
	GridCell_.prototype.dump = function (result)
	{
		cr.appendArray(result, this.objects.valuesRef());
	};
	cr.GridCell = GridCell_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return cr.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	var BATCH_SETTEXTURE1 = 11;
	function GLWrap_(gl, isMobile)
	{
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture0 = null;			// last bound to TEXTURE0
		this.lastTexture1 = null;			// last bound to TEXTURE1
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
;
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*this.width;
		out[1]=(fTempo[5]*0.5+0.5)*this.height;
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE1);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.lastTexture0 = null;
		this.lastTexture1 = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetTexture1 = function ()
	{
		var gl = this.gl;
		gl.activeTexture(gl.TEXTURE1);
		gl.bindTexture(gl.TEXTURE_2D, this.texParam);
		gl.activeTexture(gl.TEXTURE0);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity)
			this.gl.uniform1f(curProg.locOpacity, o);
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				this.gl.uniformMatrix4fv(s.locMatMV, false, this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			if (glwrap.lastTexture1 === this.texParam)
			{
				gl.activeTexture(gl.TEXTURE1);
				gl.bindTexture(gl.TEXTURE_2D, null);
				glwrap.lastTexture1 = null;
				gl.activeTexture(gl.TEXTURE0);
			}
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity)
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		if (s.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			this.glwrap.lastTexture1 = this.texParam;
			gl.activeTexture(gl.TEXTURE0);
		}
		if (s.locPixelWidth)
			gl.uniform1f(s.locPixelWidth, this.mat4param[0]);
		if (s.locPixelHeight)
			gl.uniform1f(s.locPixelHeight, this.mat4param[1]);
		if (s.locDestStart)
			gl.uniform2f(s.locDestStart, this.mat4param[2], this.mat4param[3]);
		if (s.locDestEnd)
			gl.uniform2f(s.locDestEnd, this.mat4param[4], this.mat4param[5]);
		if (s.locLayerScale)
			gl.uniform1f(s.locLayerScale, this.mat4param[6]);
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				gl.uniform1f(s.parameters[i][1], this.shaderParams[i]);
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case BATCH_QUAD:
				b.doQuad();
				break;
			case BATCH_SETTEXTURE:
				b.doSetTexture();
				break;
			case BATCH_SETOPACITY:
				b.doSetOpacity();
				break;
			case BATCH_SETBLEND:
				b.doSetBlend();
				break;
			case BATCH_UPDATEMODELVIEW:
				b.doUpdateModelView();
				break;
			case BATCH_RENDERTOTEXTURE:
				b.doRenderToTexture();
				break;
			case BATCH_CLEAR:
				b.doClear();
				break;
			case BATCH_POINTS:
				b.doPoints();
				break;
			case BATCH_SETPROGRAM:
				b.doSetProgram();
				break;
			case BATCH_SETPROGRAMPARAMETERS:
				b.doSetProgramParameters();
				break;
			case BATCH_SETTEXTURE1:
				b.doSetTexture1();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture0)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture0 = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		var rc_left = rcTex.left;
		var rc_top = rcTex.top;
		var rc_right = rcTex.right;
		var rc_bottom = rcTex.bottom;
		vd[v] = tlx;
		td[v++] = rc_left;
		vd[v] = tly;
		td[v++] = rc_top;
		vd[v] = trx;
		td[v++] = rc_right;
		vd[v] = try_;
		td[v++] = rc_top;
		vd[v] = brx;
		td[v++] = rc_right;
		vd[v] = bry;
		td[v++] = rc_bottom;
		vd[v] = blx;
		td[v++] = rc_left;
		vd[v] = bly;
		td[v++] = rc_bottom;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTexUV = function(tlx, tly, trx, try_, brx, bry, blx, bly, tlu, tlv, tru, trv, bru, brv, blu, blv)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = tlu;
		vd[v] = tly;
		td[v++] = tlv;
		vd[v] = trx;
		td[v++] = tru;
		vd[v] = try_;
		td[v++] = trv;
		vd[v] = brx;
		td[v++] = bru;
		vd[v] = bry;
		td[v++] = brv;
		vd[v] = blx;
		td[v++] = blu;
		vd[v] = bly;
		td[v++] = blv;
		this.vertexPtr = v;
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd || s.crossSampling);
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, params)
	{
		var i, len, s = this.shaderPrograms[this.lastProgram];
		if (s.locPixelWidth || s.locPixelHeight || s.locSeconds || s.locSamplerBack ||
			s.locDestStart || s.locDestEnd || s.locLayerScale || params.length)
		{
			var b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			b.mat4param[0] = pixelWidth;
			b.mat4param[1] = pixelHeight;
			b.mat4param[2] = destStartX;
			b.mat4param[3] = destStartY;
			b.mat4param[4] = destEndX;
			b.mat4param[5] = destEndY;
			b.mat4param[6] = layerScale;
			if (s.locSamplerBack)
			{
;
				b.texParam = backTex;
			}
			else
				b.texParam = null;
			if (params.length)
			{
				b.shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					b.shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var textures_by_src = {};
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype)
	{
		tiling = !!tiling;
		linearsampling = !!linearsampling;
		var tex_key = img.src + "," + tiling + "," + linearsampling + (tiling ? ("," + tiletype) : "");
		var webGL_texture = null;
		if (typeof img.src !== "undefined" && textures_by_src.hasOwnProperty(tex_key))
		{
			webGL_texture = textures_by_src[tex_key];
			webGL_texture.c2refcount++;
			return webGL_texture;
		}
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat && !this.isIE)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = cr.nextHighestPowerOfTwo(img.width);
			canvas.height = cr.nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		webGL_texture.c2refcount = 1;
		webGL_texture.c2texkey = tex_key;
		all_textures.push(webGL_texture);
		textures_by_src[tex_key] = webGL_texture;
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit, tiling)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		if (tiling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		if (typeof tex.c2refcount !== "undefined" && tex.c2refcount > 1)
		{
			tex.c2refcount--;
			return;
		}
		this.endBatch();
		if (tex === this.lastTexture0)
		{
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.lastTexture0 = null;
		}
		if (tex === this.lastTexture1)
		{
			this.gl.activeTexture(this.gl.TEXTURE1);
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.gl.activeTexture(this.gl.TEXTURE0);
			this.lastTexture1 = null;
		}
		cr.arrayFindRemove(all_textures, tex);
		if (typeof tex.c2texkey !== "undefined")
			delete textures_by_src[tex.c2texkey];
		this.gl.deleteTexture(tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = this.width * this.height * 4 * 2;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !!(typeof window["c2isCrosswalk"] !== "undefined" && window["c2isCrosswalk"]);
		this.isPhoneGap = (!this.isCrosswalk && (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined")));
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		this.isDomFree = this.isDirectCanvas || this.isCocoonJs;
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen;		// tizen says "like Android"
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.isiPhone = /iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent);	// treat ipod as an iphone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad;
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent);
		this.isFirefox = /firefox/i.test(navigator.userAgent);
		this.isSafari = !this.isChrome && /safari/i.test(navigator.userAgent);		// Chrome includes Safari in UA
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined" || /nodewebkit/i.test(navigator.userAgent));
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.isAndroidStockBrowser = (this.isAndroid && !this.isChrome && !this.isFirefox && !this.isAmazonWebApp && !this.isDomFree);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isBlackberry10 || this.isTizen);
		if (!this.isMobile)
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet)/i.test(navigator.userAgent);
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1)
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.fullscreenOldMarginCss = "";
		this.firstInFullscreen = false;
		this.oldWidth = 0;		// for restoring non-fullscreen canvas after fullscreen
		this.oldHeight = 0;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window.ondragover = function(e) { e.preventDefault(); return false; };
			window.ondrop = function(e) { e.preventDefault(); return false; };
			require("nw.gui")["App"]["clearCache"]();
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.draw_width = this.width;
		this.draw_height = this.height;
		this.cssWidth = this.width;
		this.cssHeight = this.height;
		this.lastWindowWidth = window.innerWidth;
		this.lastWindowHeight = window.innerHeight;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.solidBehavior = null;
		this.jumpthruBehavior = null;
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = 0;
		this.timeout_id = 0;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.halfFramerateMode = false;
		this.lastRafTime = 0;		// time of last requestAnimationFrame call
		this.ranLastRaf = false;	// false if last requestAnimationFrame was skipped for half framerate mode
		this.had_a_click = false;
		this.isInUserInputEvent = false;
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.activeGroups = {};				// event group activation states
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.layout_canvas = null;
		this.layout_ctx = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = (!this.isDomFree && this.useHighDpi && !this.isAndroidStockBrowser);
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || window["webkitDevicePixelRatio"] || window["mozDevicePixelRatio"] || window["msDevicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		var alpha_canvas = this.alphaBackground && !(this.isNodeWebkit || this.isWindows8App || this.isWindowsPhone8);
		if (this.fullscreen_mode > 0)
			this["setSize"](window.innerWidth, window.innerHeight, true);
		try {
			if (this.enableWebGL && (this.isCocoonJs || !this.isDomFree))
			{
				attribs = {
					"alpha": alpha_canvas,
					"depth": false,
					"antialias": false,
					"failIfMajorPerformanceCaveat": true
				};
				this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = this.cssWidth;
				this.overlay_canvas.height = this.cssHeight;
				jQuery(this.overlay_canvas).css({"width": this.cssWidth + "px",
												"height": this.cssHeight + "px"});
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				console.log("[Construct 2] WebGL context lost");
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				console.log("[Construct 2] WebGL context restored");
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = {
						"antialias": !!this.linearSampling,
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
				{
					attribs = {
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(); };
		if (window != window.top && !this.isDomFree && !this.isWindows8App)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		if (this.fullscreen_mode === 0 && this.isRetina && this.devicePixelRatio > 1)
		{
			this["setSize"](this.original_width, this.original_height, true);
		}
		this.tryLockOrientation();
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h, force)
	{
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		if (this.lastWindowWidth === w && this.lastWindowHeight === h && !force)
			return;
		this.lastWindowWidth = w;
		this.lastWindowHeight = h;
		var mode = this.fullscreen_mode;
		var orig_aspect, cur_aspect;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.fullscreen_mode === 0 && !force)
			return;			// ignore size events when not fullscreen and not using a fullscreen-in-browser mode
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		if (mode >= 4)
		{
			orig_aspect = this.original_width / this.original_height;
			cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = neww / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = newh / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
			offx = Math.floor(offx);
			offy = Math.floor(offy);
			w = Math.floor(w);
			h = Math.floor(h);
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (mode < 2)
			this.aspect_scale = this.devicePixelRatio;
		if (this.isRetina && this.isiPad && this.devicePixelRatio > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		var multiplier = this.devicePixelRatio;
		this.cssWidth = w;
		this.cssHeight = h;
		this.width = Math.round(w * multiplier);
		this.height = Math.round(h * multiplier);
		this.redraw = true;
		if (this.wantFullscreenScalingQuality)
		{
			this.draw_width = this.width;
			this.draw_height = this.height;
			this.fullscreenScalingQuality = true;
		}
		else
		{
			if ((this.width < this.original_width && this.height < this.original_height) || mode === 1)
			{
				this.draw_width = this.width;
				this.draw_height = this.height;
				this.fullscreenScalingQuality = true;
			}
			else
			{
				this.draw_width = this.original_width;
				this.draw_height = this.original_height;
				this.fullscreenScalingQuality = false;
				/*var orig_aspect = this.original_width / this.original_height;
				var cur_aspect = this.width / this.height;
				if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
					this.aspect_scale = this.height / this.original_height;
				else
					this.aspect_scale = this.width / this.original_width;*/
				if (mode === 2)		// scale inner
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect < orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect > orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
				else if (mode === 3)
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect > orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect < orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
			}
		}
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": w + "px",
										"height": h + "px",
										"margin-left": offx,
										"margin-top": offy});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": w + "px",
											"height": h + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = Math.round(w * multiplier);
			this.canvas.height = Math.round(h * multiplier);
			if (this.isRetina)
			{
				jQuery(this.canvas).css({"width": w + "px",
										"height": h + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = w;
			this.overlay_canvas.height = h;
			jQuery(this.overlay_canvas).css({"width": w + "px",
											"height": h + "px"});
		}
		if (this.glwrap)
		{
			this.glwrap.setSize(Math.round(w * multiplier), Math.round(h * multiplier));
		}
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = w;
			this.ctx.height = h;
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		this.tryLockOrientation();
	};
	Runtime.prototype.tryLockOrientation = function ()
	{
		if (!this.autoLockOrientation || this.orientations === 0)
			return;
		var orientation = "portrait";
		if (this.orientations === 2)
			orientation = "landscape";
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== 0 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== 0)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick();						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[11];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[11];
		this.original_width = pm[9];
		this.original_height = pm[10];
		this.parallax_x_origin = this.original_width / 2;
		this.parallax_y_origin = this.original_height / 2;
		if (this.isDomFree && (pm[11] >= 4 || pm[11] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[17];
		this.loaderstyle = pm[18];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[20];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.getInstanceByIID = cr.type_getInstanceByIID;
			type_inst.collision_grid = new cr.SparseGrid(this.original_width, this.original_height);
			type_inst.any_bbox_changed = true;
			type_inst.any_instance_parallaxed = false;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_types = [];						// types using this behavior
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
					if (cr.behaviors.solid && behavior_plugin instanceof cr.behaviors.solid)
						this.solidBehavior = behavior_plugin;
					if (cr.behaviors.jumpthru && behavior_plugin instanceof cr.behaviors.jumpthru)
						this.jumpthruBehavior = behavior_plugin;
				}
				if (behavior_plugin.my_types.indexOf(type_inst) === -1)
					behavior_plugin.my_types.push(type_inst);
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			type_inst.tile_poly_data = m[13];
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[14];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[23].length; i < len; i++)
		{
			var containerdata = pm[23][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.files_subfolder = pm[7];
		this.pixel_rounding = pm[8];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[12];
		this.linearSampling = pm[13];
		this.alphaBackground = pm[14];
		this.versionstr = pm[15];
		this.useHighDpi = pm[16];
		this.orientations = pm[19];		// 0 = any, 1 = portrait, 2 = landscape
		this.autoLockOrientation = (this.orientations > 0);
		this.pauseOnBlur = pm[21];
		this.wantFullscreenScalingQuality = pm[22];		// false = low quality, true = high quality
		this.fullscreenScalingQuality = this.wantFullscreenScalingQuality;
		this.start_time = Date.now();
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	Runtime.prototype.areAllTexturesLoaded = function ()
	{
		var totalsize = 0;
		var completedsize = 0;
		var ret = true;
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			var filesize = this.wait_for_textures[i].cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if (this.wait_for_textures[i].complete || this.wait_for_textures[i]["loaded"])
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesLoaded())
			this.go_textures_done();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (ctx)
			{
				var overlay_width = this.width;
				var overlay_height = this.height;
				var multiplier = this.devicePixelRatio;
				if (this.overlay_canvas)
				{
					overlay_width = this.cssWidth;
					overlay_height = this.cssHeight;
					multiplier = 1;
				}
				if (this.loaderstyle !== 3 && ms_elapsed >= 500 && this.last_progress != this.progress)
				{
					ctx.clearRect(0, 0, overlay_width, overlay_height);
					var mx = overlay_width / 2;
					var my = overlay_height / 2;
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40 * multiplier;
					var hlh = 0;
					var logowidth = 80 * multiplier;
					var logoheight;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width * multiplier;
						logoheight = this.loaderlogo.height * multiplier;
						hlw = logowidth / 2;
						hlh = logoheight / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh), logowidth, logoheight);
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 * multiplier : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6 * multiplier);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6 * multiplier);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1 * multiplier, my - 1 * multiplier, logowidth + 2 * multiplier, 8 * multiplier);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = "12pt Arial";
						ctx.fillStyle = "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), 100);
		}
	};
	Runtime.prototype.go_textures_done = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		if (navigator["splashscreen"] && navigator["splashscreen"]["hide"])
			navigator["splashscreen"]["hide"]();
		this.tick();
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function ()
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (this.halfFramerateMode && this.ranLastRaf)
		{
			if (logic_start - this.lastRafTime < 29)
			{
				this.ranLastRaf = false;
				this.lastRafTime = logic_start;
				if (raf)
					this.raf_id = raf(this.tickFunc, this.canvas);
				else	// no idea if this works without raf/hi res timers but let's hope for the best
					this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
				return;		// skipped this frame
			}
		}
		this.ranLastRaf = true;
		this.lastRafTime = logic_start;
		var fsmode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"]);
		if ((isfullscreen || this.isNodeFullscreen) && this.fullscreen_scaling > 0)
			fsmode = this.fullscreen_scaling;
		if (fsmode > 0)
		{
			var curwidth = window.innerWidth;
			var curheight = window.innerHeight;
			if (this.lastWindowWidth !== curwidth || this.lastWindowHeight !== curheight)
			{
				this["setSize"](curwidth, curheight);
			}
		}
		if (!this.isDomFree)
		{
			if (isfullscreen)
			{
				if (!this.firstInFullscreen)
				{
					this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0";
					this.firstInFullscreen = true;
				}
				if (!this.isChrome && !this.isNodeWebkit)
				{
					jQuery(this.canvas).css({
						"margin-left": "" + Math.floor((screen.width - (this.width / this.devicePixelRatio)) / 2) + "px",
						"margin-top": "" + Math.floor((screen.height - (this.height / this.devicePixelRatio)) / 2) + "px"
					});
				}
			}
			else
			{
				if (this.firstInFullscreen)
				{
					if (!this.isChrome && !this.isNodeWebkit)
					{
						jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss);
					}
					this.fullscreenOldMarginCss = "";
					this.firstInFullscreen = false;
					if (this.fullscreen_mode === 0)
					{
						this["setSize"](Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), true);
					}
				}
				else
				{
					this.oldWidth = this.width;
					this.oldHeight = this.height;
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = (this.isRetina ? this.devicePixelRatio : 1);
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        var tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		return this.objectsByUid[uid_.toString()];
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (instances.length === 0)
				type.any_instance_parallaxed = false;
			if (inst.collcells)
			{
				type.collision_grid.update(inst, inst.collcells, null);
			}
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.collcells.set(0, 0, -1, -1);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.collcells = new cr.rect(0, 0, -1, -1);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.get_zindex = cr.inst_get_zindex;
			}
			inst.tilemap_exists = false;
			inst.tilemap_width = 0;
			inst.tilemap_height = 0;
			inst.tilemap_data = null;
			if (wm.length === 14)
			{
				inst.tilemap_exists = true;
				inst.tilemap_width = wm[13][0];
				inst.tilemap_height = wm[13][1];
				inst.tilemap_data = wm[13][2];
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			type.any_bbox_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
			if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
				type.any_instance_parallaxed = true;
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.updateAllBBoxes = function (type)
	{
		if (!type.any_bbox_changed)
			return;		// all instances must already be up-to-date
		var i, len, instances = type.instances;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			instances[i].update_bbox();
		}
		type.any_bbox_changed = false;
	};
	Runtime.prototype.getCollisionCandidates = function (layer, rtype, bbox, candidates)
	{
		var i, len, t;
		var is_parallaxed = (layer ? (layer.parallaxX !== 1 || layer.parallaxY !== 1) : false);
		if (rtype.is_family)
		{
			for (i = 0, len = rtype.members.length; i < len; ++i)
			{
				t = rtype.members[i];
				if (is_parallaxed || t.any_instance_parallaxed)
				{
					cr.appendArray(candidates, t.instances);
				}
				else
				{
					this.updateAllBBoxes(t);
					t.collision_grid.queryRange(bbox, candidates);
				}
			}
		}
		else
		{
			if (is_parallaxed || rtype.any_instance_parallaxed)
			{
				cr.appendArray(candidates, rtype.instances);
			}
			else
			{
				this.updateAllBBoxes(rtype);
				rtype.collision_grid.queryRange(bbox, candidates);
			}
		}
	};
	Runtime.prototype.getTypesCollisionCandidates = function (layer, types, bbox, candidates)
	{
		var i, len;
		for (i = 0, len = types.length; i < len; ++i)
		{
			this.getCollisionCandidates(layer, types[i], bbox, candidates);
		}
	};
	Runtime.prototype.getSolidCollisionCandidates = function (layer, bbox, candidates)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		this.getTypesCollisionCandidates(layer, solid.my_types, bbox, candidates);
	};
	Runtime.prototype.getJumpthruCollisionCandidates = function (layer, bbox, candidates)
	{
		var jumpthru = this.getJumpthruBehavior();
		if (!jumpthru)
			return null;
		this.getTypesCollisionCandidates(layer, jumpthru.my_types, bbox, candidates);
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, i2, i21, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			if (a.tilemap_exists && b.tilemap_exists)
				return false;
			if (a.tilemap_exists)
				return this.testTilemapOverlap(a, b);
			if (b.tilemap_exists)
				return this.testTilemapOverlap(b, a);
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polya.pts_cache[i2];
				y = polya.pts_cache[i21];
				polya.pts_cache[i2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i21] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			polya.update_bbox();
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polyb.pts_cache[i2];
				y = polyb.pts_cache[i21];
				polyb.pts_cache[i2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i21] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			polyb.update_bbox();
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	Runtime.prototype.testTilemapOverlap = function (tm, a)
	{
		var collrects = tm.collision_rects;
		var i, len, c, rc;
		var bbox = a.bbox;
		var tmx = tm.x;
		var tmy = tm.y;
		var haspolya = (a.collision_poly && !a.collision_poly.is_empty());
		for (i = 0, len = collrects.length; i < len; ++i)
		{
			c = collrects[i];
			rc = c.rc;
			if (bbox.intersects_rect_off(rc, tmx, tmy))
			{
				tmpQuad.set_from_rect(rc);
				tmpQuad.offset(tmx, tmy);
				if (tmpQuad.intersects_quad(a.bquad))
				{
					if (haspolya)
					{
						a.collision_poly.cache_poly(a.width, a.height, a.angle);
						if (c.poly)
						{
							if (c.poly.intersects_poly(a.collision_poly, a.x - (tmx + rc.left), a.y - (tmy + rc.top)))
							{
								return true;
							}
						}
						else
						{
							this.temp_poly.set_from_quad(tmpQuad, 0, 0, rc.right - rc.left, rc.bottom - rc.top);
							if (this.temp_poly.intersects_poly(a.collision_poly, a.x, a.y))
								return true;
						}
					}
					else
					{
						if (c.poly)
						{
							this.temp_poly.set_from_quad(a.bquad, 0, 0, a.width, a.height);
							if (c.poly.intersects_poly(this.temp_poly, -(tmx + rc.left), -(tmy + rc.top)))
							{
								return true;
							}
						}
						else
							return true;
					}
				}
			}
		}
		return false;
	};
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		if (b.tilemap_exists)
		{
			var collrects = b.collision_rects;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (r.intersects_rect_off(tilerc, tmx, tmy))
				{
					if (c.poly)
					{
						this.temp_poly.set_from_rect(r, 0, 0);
						if (c.poly.intersects_poly(this.temp_poly, -(tmx + tilerc.left), -(tmy + tilerc.top)))
							return true;
					}
					else
						return true;
				}
			}
			return false;
		}
		else
		{
			tmpQuad.set_from_rect(r);
			if (!b.bquad.intersects_quad(tmpQuad))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			tmpQuad.offset(-r.left, -r.top);
			this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
			return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
		}
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (b.tilemap_exists)
		{
			var collrects = b.collision_rects;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (tmpRect.intersects_rect_off(tilerc, tmx, tmy))
				{
					tmpQuad.set_from_rect(tilerc);
					tmpQuad.offset(tmx, tmy);
					if (tmpQuad.intersects_segment(x1, y1, x2, y2))
					{
						if (c.poly)
						{
							if (c.poly.intersects_segment(tmx + tilerc.left, tmy + tilerc.top, x1, y1, x2, y2))
							{
								return true;
							}
						}
						else
							return true;
					}
				}
			}
			return false;
		}
		else
		{
			if (!b.bquad.intersects_segment(x1, y1, x2, y2))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
		}
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		return this.solidBehavior;
	};
	Runtime.prototype.getJumpthruBehavior = function ()
	{
		return this.jumpthruBehavior;
	};
	var candidates = [];
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var i, len, s;
		inst.update_bbox();
		this.getSolidCollisionCandidates(inst.layer, inst.bbox, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var i, len, s;
		this.getSolidCollisionCandidates(null, r, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		inst.update_bbox();
		this.getJumpthruCollisionCandidates(inst.layer, inst.bbox, candidates);
		var i, len, j;
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			j = candidates[i];
			if (!j.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, j))
			{
				if (all)
					ret.push(j);
				else
				{
					candidates.length = 0;
					return j;
				}
			}
		}
		candidates.length = 0;
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetStack = [];
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		triggerSheetIndex++;
		if (triggerSheetIndex === triggerSheetStack.length)
			triggerSheetStack.push(new cr.ObjectSet());
		else
			triggerSheetStack[triggerSheetIndex].clear();
        var ret = this.triggerOnSheet(method, inst, sheet, value);
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
		var alreadyTriggeredSheets = triggerSheetStack[triggerSheetIndex];
        if (alreadyTriggeredSheets.contains(sheet))
            return false;
        alreadyTriggeredSheets.add(sheet);
        var includes = sheet.includes.valuesRef();
        var ret = false;
		var i, leni, r;
        for (i = 0, leni = includes.length; i < leni; i++)
        {
			if (includes[i].isActive())
			{
				r = this.triggerOnSheet(method, inst, includes[i].include_sheet, value);
				ret = ret || r;
			}
        }
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			for (i = 0, leni = inst.type.families.length; i < leni; i++)
			{
				r = this.triggerOnSheetForTypeName(method, inst, inst.type.families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; i++)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (extra[p] && typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = !!this.activeGroups[g.group_name];
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.execcount = rt["execcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g)
					this.activeGroups[g.group_name] = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst, state_only)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {};
		if (state_only)
			o["c2"] = true;		// mark as known json data from Construct 2
		else
			o["uid"] = inst.uid;
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o, state_only)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		if (state_only)
		{
			if (!o["c2"])
				return;
		}
		else
			inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		canvas.screencanvas = true;
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true, true);
			var py = layer.canvasToLayer(0, 0, false, true);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		var layout_canvas;
		var layout_ctx = ctx;
		var ctx_changed = false;
		var render_offscreen = !this.runtime.fullscreenScalingQuality;
		if (render_offscreen)
		{
			if (!this.runtime.layout_canvas)
			{
				this.runtime.layout_canvas = document.createElement("canvas");
				layout_canvas = this.runtime.layout_canvas;
				layout_canvas.width = this.runtime.draw_width;
				layout_canvas.height = this.runtime.draw_height;
				this.runtime.layout_ctx = layout_canvas.getContext("2d");
				ctx_changed = true;
			}
			layout_canvas = this.runtime.layout_canvas;
			layout_ctx = this.runtime.layout_ctx;
			if (layout_canvas.width !== this.runtime.draw_width)
			{
				layout_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layout_canvas.height !== this.runtime.draw_height)
			{
				layout_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layout_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
		}
		layout_ctx.globalAlpha = 1;
		layout_ctx.globalCompositeOperation = "source-over";
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			layout_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(layout_ctx);
		}
		if (render_offscreen)
		{
			ctx.drawImage(layout_canvas, 0, 0, this.runtime.width, this.runtime.height);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 ||
								 this.runtime.uses_background_blending ||
								 !this.runtime.fullscreenScalingQuality);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
			if (!this.runtime.fullscreenScalingQuality)
			{
				glw.setSize(this.runtime.draw_width, this.runtime.draw_height);
			}
		}
		else
		{
			if (this.runtime.layout_tex)
			{
				glw.setRenderingToTexture(null);
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = null;
			}
		}
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length === 0 ||
				(this.active_effect_types.length === 1 && this.runtime.fullscreenScalingQuality))
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
				}
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 ||
				this.runtime.uses_background_blending ||
				!this.runtime.fullscreenScalingQuality) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = inst ? inst.layer.getScale() :
							layer ? layer.getScale() : 1;
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false, true);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false, true);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false, true);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false, true);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = cr.floor(screenleft);
			cleartop = screentop = cr.floor(screentop);
			clearright = screenright = cr.ceil(screenright);
			clearbottom = screenbottom = cr.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex) ||
						(!layer && !inst && !this.runtime.fullscreenScalingQuality);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				glw.setTexture(null);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			else
			{
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
					halfw = this.runtime.width / 2;
					halfh = this.runtime.height / 2;
					screenleft = 0;
					screentop = 0;
					screenright = this.runtime.width;
					screenbottom = this.runtime.height;
				}
			}
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function (include_aspect)
	{
		return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || include_aspect ? this.runtime.aspect_scale : 1);
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		var ctx_changed = false;
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.draw_width;
				layer_canvas.height = this.runtime.draw_height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
				ctx_changed = true;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.draw_width)
			{
				layer_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layer_canvas.height !== this.runtime.draw_height)
			{
				layer_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layer_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.draw_width * (1 / myscale));
		this.viewBottom = py + (this.runtime.draw_height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false, true);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false, true);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.draw_width / 2;
				var halfh = this.runtime.draw_height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx, using_draw_area)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx, using_draw_area)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); // all event sheets included by this sheet, at first-level indirection only
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.runtime.allGroups.push(this);
            this.runtime.activeGroups[(/*this.sheet.name + "|" + */this.group_name).toLowerCase()] = this.initially_activated;
        }
		else
		{
			this.group_name = "";
			this.group = false;
			this.initially_activated = false;
		}
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	window["_c2hh_"] = "E5D05C49F5F4E74DAD4CA5F1BEE3A71B60AD2375";
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	}
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (this.conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (this.conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
						this.runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
			this.runtime.getCurrentEventStack().last_event_true = true;
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get(i);
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, leni, lenj, ret, met, inst, s, sol2;
		var sol = this.type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = this.type.is_contained;
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			for (i = 0, leni = this.type.instances.length; i < leni; i++)
			{
				inst = this.type.instances[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				met = cr.xor(ret, this.inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (this.type.finish)
				this.type.finish(true);
			sol.select_all = false;
			this.type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			var k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			var arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; i++)
			{
				inst = arr[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				if (cr.xor(ret, this.inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				for (i = 0, leni = this.type.container.length; i < leni; i++)
				{
					sol2 = this.type.container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					for (j = 0, lenj = this.parameters.length; j < lenj; j++)
						this.results[j] = this.parameters[j].get(i);
					if (this.beh_index > -1)
						ret = this.func.apply(inst.behavior_insts[this.beh_index], this.results);
					else
						ret = this.func.apply(inst, this.results);
					if (cr.xor(ret, this.inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (this.type.finish)
				this.type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var i, j, leni, lenj, inst;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			inst = instances[i];
			for (j = 0, lenj = this.parameters.length; j < lenj; j++)
				this.results[j] = this.parameters[j].get(i);    // pass i to use as default SOL index
			if (this.beh_index > -1)
			{
				var offset = 0;
				if (this.type.is_family)
				{
					offset = inst.type.family_beh_map[this.type.family_index];
				}
				this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
			}
			else
				this.func.apply(inst, this.results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
					this.get = this.get_familyvar;
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex)
	{
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else
		{
;
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		}
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.isActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group)
			{
				if (!this.runtime.activeGroups[p.group_name.toLowerCase()])
					return false;
			}
			p = p.parent;
		}
		return true;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + this_seconds)
				cnd.extra.Every_lastTime = cur_time;
			cnd.extra.Every_seconds = seconds;
            return true;
        }
        else
            return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
        return this.runtime.activeGroups[(/*this.runtime.getCurrentCondition().sheet.name + "|" + */group).toLowerCase()];
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isCrosswalk && !rt.isWindows8App && !rt.isWindowsPhone8 && !rt.isBlackberry10 && !rt.isAmazonWebApp;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// CocoonJS
			return rt.isCocoonJs;
		case 8:		// PhoneGap
			return rt.isPhoneGap;
		case 9:	// Scirra Arcade
			return rt.isArcade;
		case 10:	// node-webkit
			return rt.isNodeWebkit;
		case 11:	// crosswalk
			return rt.isCrosswalk;
		case 12:	// amazon webapp
			return rt.isAmazonWebApp;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var activeGroups = this.runtime.activeGroups;
		var groupkey = (/*this.runtime.getCurrentAction().sheet.name + "|" + */group).toLowerCase();
		switch (active) {
		case 0:
			activeGroups[groupkey] = false;
			break;
		case 1:
			activeGroups[groupkey] = true;
			break;
		case 2:
			activeGroups[groupkey] = !activeGroups[groupkey];
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
		if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
		{
			var i, len, instances = layer.instances;
			for (i = 0, len = instances.length; i < len; ++i)
			{
				instances[i].type.any_instance_parallaxed = true;
			}
		}
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			this.runtime.activeGroups[g.group_name.toLowerCase()] = g.initially_activated;
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		var mode = this.runtime.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
		if (isfullscreen && this.runtime.fullscreen_scaling > 0)
			mode = this.runtime.fullscreen_scaling;
		if (mode === 0)
		{
			this.runtime["setSize"](w, h, true);
		}
		else
		{
			this.runtime.original_width = w;
			this.runtime.original_height = h;
			this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
		}
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	SysActs.prototype.SetHalfFramerateMode = function (set_)
	{
		this.runtime.halfFramerateMode = (set_ !== 0);
	};
	SysActs.prototype.SetFullscreenQuality = function (q)
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.runtime.fullscreen_mode === 0)
			return;
		this.runtime.wantFullscreenScalingQuality = (q !== 0);
		this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float((y - a) / (b - a));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
(function () {
	cr.add_common_aces = function (m)
	{
		var pluginProto = m[0].prototype;
		var singleglobal_ = m[1];
		var position_aces = m[3];
		var size_aces = m[4];
		var angle_aces = m[5];
		var appearance_aces = m[6];
		var zorder_aces = m[7];
		var effects_aces = m[8];
		if (!pluginProto.cnds)
			pluginProto.cnds = {};
		if (!pluginProto.acts)
			pluginProto.acts = {};
		if (!pluginProto.exps)
			pluginProto.exps = {};
		var cnds = pluginProto.cnds;
		var acts = pluginProto.acts;
		var exps = pluginProto.exps;
		if (position_aces)
		{
			cnds.CompareX = function (cmp, x)
			{
				return cr.do_cmp(this.x, cmp, x);
			};
			cnds.CompareY = function (cmp, y)
			{
				return cr.do_cmp(this.y, cmp, y);
			};
			cnds.IsOnScreen = function ()
			{
				var layer = this.layer;
				this.update_bbox();
				var bbox = this.bbox;
				return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
			};
			cnds.IsOutsideLayout = function ()
			{
				this.update_bbox();
				var bbox = this.bbox;
				var layout = this.runtime.running_layout;
				return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
			};
			cnds.PickDistance = function (which, x, y)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var dist = cr.distanceTo(inst.x, inst.y, x, y);
				var i, len, d;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					d = cr.distanceTo(inst.x, inst.y, x, y);
					if ((which === 0 && d < dist) || (which === 1 && d > dist))
					{
						dist = d;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.SetX = function (x)
			{
				if (this.x !== x)
				{
					this.x = x;
					this.set_bbox_changed();
				}
			};
			acts.SetY = function (y)
			{
				if (this.y !== y)
				{
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPos = function (x, y)
			{
				if (this.x !== x || this.y !== y)
				{
					this.x = x;
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPosToObject = function (obj, imgpt)
			{
				var inst = obj.getPairedInstance(this);
				if (!inst)
					return;
				var newx, newy;
				if (inst.getImagePoint)
				{
					newx = inst.getImagePoint(imgpt, true);
					newy = inst.getImagePoint(imgpt, false);
				}
				else
				{
					newx = inst.x;
					newy = inst.y;
				}
				if (this.x !== newx || this.y !== newy)
				{
					this.x = newx;
					this.y = newy;
					this.set_bbox_changed();
				}
			};
			acts.MoveForward = function (dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(this.angle) * dist;
					this.y += Math.sin(this.angle) * dist;
					this.set_bbox_changed();
				}
			};
			acts.MoveAtAngle = function (a, dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(cr.to_radians(a)) * dist;
					this.y += Math.sin(cr.to_radians(a)) * dist;
					this.set_bbox_changed();
				}
			};
			exps.X = function (ret)
			{
				ret.set_float(this.x);
			};
			exps.Y = function (ret)
			{
				ret.set_float(this.y);
			};
			exps.dt = function (ret)
			{
				ret.set_float(this.runtime.getDt(this));
			};
		}
		if (size_aces)
		{
			cnds.CompareWidth = function (cmp, w)
			{
				return cr.do_cmp(this.width, cmp, w);
			};
			cnds.CompareHeight = function (cmp, h)
			{
				return cr.do_cmp(this.height, cmp, h);
			};
			acts.SetWidth = function (w)
			{
				if (this.width !== w)
				{
					this.width = w;
					this.set_bbox_changed();
				}
			};
			acts.SetHeight = function (h)
			{
				if (this.height !== h)
				{
					this.height = h;
					this.set_bbox_changed();
				}
			};
			acts.SetSize = function (w, h)
			{
				if (this.width !== w || this.height !== h)
				{
					this.width = w;
					this.height = h;
					this.set_bbox_changed();
				}
			};
			exps.Width = function (ret)
			{
				ret.set_float(this.width);
			};
			exps.Height = function (ret)
			{
				ret.set_float(this.height);
			};
			exps.BBoxLeft = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.left);
			};
			exps.BBoxTop = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.top);
			};
			exps.BBoxRight = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.right);
			};
			exps.BBoxBottom = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.bottom);
			};
		}
		if (angle_aces)
		{
			cnds.AngleWithin = function (within, a)
			{
				return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
			};
			cnds.IsClockwiseFrom = function (a)
			{
				return cr.angleClockwise(this.angle, cr.to_radians(a));
			};
			cnds.IsBetweenAngles = function (a, b)
			{
				var lower = cr.to_clamped_radians(a);
				var upper = cr.to_clamped_radians(b);
				var angle = cr.clamp_angle(this.angle);
				var obtuse = (!cr.angleClockwise(upper, lower));
				if (obtuse)
					return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
				else
					return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
			};
			acts.SetAngle = function (a)
			{
				var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateClockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle += cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateCounterclockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle -= cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardAngle = function (amt, target)
			{
				var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardPosition = function (amt, x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var target = Math.atan2(dy, dx);
				var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.SetTowardPosition = function (x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var newangle = Math.atan2(dy, dx);
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			exps.Angle = function (ret)
			{
				ret.set_float(cr.to_clamped_degrees(this.angle));
			};
		}
		if (!singleglobal_)
		{
			cnds.CompareInstanceVar = function (iv, cmp, val)
			{
				return cr.do_cmp(this.instance_vars[iv], cmp, val);
			};
			cnds.IsBoolInstanceVarSet = function (iv)
			{
				return this.instance_vars[iv];
			};
			cnds.PickInstVarHiLow = function (which, iv)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var val = inst.instance_vars[iv];
				var i, len, v;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					v = inst.instance_vars[iv];
					if ((which === 0 && v < val) || (which === 1 && v > val))
					{
						val = v;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			cnds.PickByUID = function (u)
			{
				var i, len, j, inst, families, instances, sol;
				var cnd = this.runtime.getCurrentCondition();
				if (cnd.inverted)
				{
					sol = this.getCurrentSol();
					if (sol.select_all)
					{
						sol.select_all = false;
						sol.instances.length = 0;
						sol.else_instances.length = 0;
						instances = this.instances;
						for (i = 0, len = instances.length; i < len; i++)
						{
							inst = instances[i];
							if (inst.uid === u)
								sol.else_instances.push(inst);
							else
								sol.instances.push(inst);
						}
						this.applySolToContainer();
						return !!sol.instances.length;
					}
					else
					{
						for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
						{
							inst = sol.instances[i];
							sol.instances[j] = inst;
							if (inst.uid === u)
							{
								sol.else_instances.push(inst);
							}
							else
								j++;
						}
						sol.instances.length = j;
						this.applySolToContainer();
						return !!sol.instances.length;
					}
				}
				else
				{
					inst = this.runtime.getObjectByUID(u);
					if (!inst)
						return false;
					sol = this.getCurrentSol();
					if (!sol.select_all && sol.instances.indexOf(inst) === -1)
						return false;		// not picked
					if (this.is_family)
					{
						families = inst.type.families;
						for (i = 0, len = families.length; i < len; i++)
						{
							if (families[i] === this)
							{
								sol.pick_one(inst);
								this.applySolToContainer();
								return true;
							}
						}
					}
					else if (inst.type === this)
					{
						sol.pick_one(inst);
						this.applySolToContainer();
						return true;
					}
					return false;
				}
			};
			cnds.OnCreated = function ()
			{
				return true;
			};
			cnds.OnDestroyed = function ()
			{
				return true;
			};
			acts.SetInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = val.toString();
				}
				else
;
			};
			acts.AddInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += val.toString();
				}
				else
;
			};
			acts.SubInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] -= val;
					else
						myinstvars[iv] -= parseFloat(val);
				}
				else
;
			};
			acts.SetBoolInstanceVar = function (iv, val)
			{
				this.instance_vars[iv] = val ? 1 : 0;
			};
			acts.ToggleBoolInstanceVar = function (iv)
			{
				this.instance_vars[iv] = 1 - this.instance_vars[iv];
			};
			acts.Destroy = function ()
			{
				this.runtime.DestroyInstance(this);
			};
			if (!acts.LoadFromJsonString)
			{
				acts.LoadFromJsonString = function (str_)
				{
					var o, i, len, binst;
					try {
						o = JSON.parse(str_);
					}
					catch (e) {
						return;
					}
					this.runtime.loadInstanceFromJSON(this, o, true);
					if (this.afterLoad)
						this.afterLoad();
					if (this.behavior_insts)
					{
						for (i = 0, len = this.behavior_insts.length; i < len; ++i)
						{
							binst = this.behavior_insts[i];
							if (binst.afterLoad)
								binst.afterLoad();
						}
					}
				};
			}
			exps.Count = function (ret)
			{
				var count = ret.object_class.instances.length;
				var i, len, inst;
				for (i = 0, len = this.runtime.createRow.length; i < len; i++)
				{
					inst = this.runtime.createRow[i];
					if (ret.object_class.is_family)
					{
						if (inst.type.families.indexOf(ret.object_class) >= 0)
							count++;
					}
					else
					{
						if (inst.type === ret.object_class)
							count++;
					}
				}
				ret.set_int(count);
			};
			exps.PickedCount = function (ret)
			{
				ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
			};
			exps.UID = function (ret)
			{
				ret.set_int(this.uid);
			};
			exps.IID = function (ret)
			{
				ret.set_int(this.get_iid());
			};
			if (!exps.AsJSON)
			{
				exps.AsJSON = function (ret)
				{
					ret.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, true)));
				};
			}
		}
		if (appearance_aces)
		{
			cnds.IsVisible = function ()
			{
				return this.visible;
			};
			acts.SetVisible = function (v)
			{
				if (!v !== !this.visible)
				{
					this.visible = v;
					this.runtime.redraw = true;
				}
			};
			cnds.CompareOpacity = function (cmp, x)
			{
				return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
			};
			acts.SetOpacity = function (x)
			{
				var new_opacity = x / 100.0;
				if (new_opacity < 0)
					new_opacity = 0;
				else if (new_opacity > 1)
					new_opacity = 1;
				if (new_opacity !== this.opacity)
				{
					this.opacity = new_opacity;
					this.runtime.redraw = true;
				}
			};
			exps.Opacity = function (ret)
			{
				ret.set_float(cr.round6dp(this.opacity * 100.0));
			};
		}
		if (zorder_aces)
		{
			cnds.IsOnLayer = function (layer_)
			{
				if (!layer_)
					return false;
				return this.layer === layer_;
			};
			cnds.PickTopBottom = function (which_)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var i, len;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					if (which_ === 0)
					{
						if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
					else
					{
						if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.MoveToTop = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === this.layer.instances.length - 1)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.push(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToBottom = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === 0)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.unshift(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToLayer = function (layerMove)
			{
				if (!layerMove || layerMove == this.layer)
					return;
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = layerMove;
				this.zindex = layerMove.instances.length;
				layerMove.instances.push(this);
				this.runtime.redraw = true;
			};
			acts.ZMoveToObject = function (where_, obj_)
			{
				var isafter = (where_ === 0);
				if (!obj_)
					return;
				var other = obj_.getFirstPicked(this);
				if (!other || other.uid === this.uid)
					return;
				if (this.layer.index !== other.layer.index)
				{
					cr.arrayRemove(this.layer.instances, this.get_zindex());
					this.layer.zindices_stale = true;
					this.layer = other.layer;
					this.zindex = other.layer.instances.length;
					other.layer.instances.push(this);
				}
				var myZ = this.get_zindex();
				var insertZ = other.get_zindex();
				cr.arrayRemove(this.layer.instances, myZ);
				if (myZ < insertZ)
					insertZ--;
				if (isafter)
					insertZ++;
				if (insertZ === this.layer.instances.length)
					this.layer.instances.push(this);
				else
					this.layer.instances.splice(insertZ, 0, this);
				this.layer.zindices_stale = true;
				this.runtime.redraw = true;
			};
			exps.LayerNumber = function (ret)
			{
				ret.set_int(this.layer.number);
			};
			exps.LayerName = function (ret)
			{
				ret.set_string(this.layer.name);
			};
			exps.ZIndex = function (ret)
			{
				ret.set_int(this.get_zindex());
			};
		}
		if (effects_aces)
		{
			acts.SetEffectEnabled = function (enable_, effectname_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var enable = (enable_ === 1);
				if (this.active_effect_flags[i] === enable)
					return;		// no change
				this.active_effect_flags[i] = enable;
				this.updateActiveEffects();
				this.runtime.redraw = true;
			};
			acts.SetEffectParam = function (effectname_, index_, value_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var et = this.type.effect_types[i];
				var params = this.effect_params[i];
				index_ = Math.floor(index_);
				if (index_ < 0 || index_ >= params.length)
					return;		// effect index out of bounds
				if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
					value_ /= 100.0;
				if (params[index_] === value_)
					return;		// no change
				params[index_] = value_;
				if (et.active)
					this.runtime.redraw = true;
			};
		}
	};
	cr.set_bbox_changed = function ()
	{
		this.bbox_changed = true;      		// will recreate next time box requested
		this.type.any_bbox_changed = true;	// avoid unnecessary updateAllBBox() calls
		this.runtime.redraw = true;     	// assume runtime needs to redraw
		var i, len, callbacks = this.bbox_changed_callbacks;
		for (i = 0, len = callbacks.length; i < len; ++i)
		{
			callbacks[i](this);
		}
	};
	cr.add_bbox_changed_callback = function (f)
	{
		if (f)
		{
			this.bbox_changed_callbacks.push(f);
		}
	};
	var tmprc = new cr.rect(0, 0, 0, 0);
	cr.update_bbox = function ()
	{
		if (!this.bbox_changed)
			return;                 // bounding box not changed
		var bbox = this.bbox;
		var bquad = this.bquad;
		bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
		bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
		if (!this.angle)
		{
			bquad.set_from_rect(bbox);    // make bounding quad from box
		}
		else
		{
			bbox.offset(-this.x, -this.y);       			// translate to origin
			bquad.set_from_rotated_rect(bbox, this.angle);	// rotate around origin
			bquad.offset(this.x, this.y);      				// translate back to original position
			bquad.bounding_box(bbox);
		}
		bbox.normalize();
		this.bbox_changed = false;  // bounding box up to date
		if (this.collisionsEnabled)
		{
			var mygrid = this.type.collision_grid;
			var collcells = this.collcells;
			tmprc.set(mygrid.XToCell(bbox.left), mygrid.YToCell(bbox.top), mygrid.XToCell(bbox.right), mygrid.YToCell(bbox.bottom));
			if (!collcells.equals(tmprc))
			{
				if (collcells.right < collcells.left)
					mygrid.update(this, null, tmprc);		// first insertion with invalid rect: don't provide old range
				else
					mygrid.update(this, collcells, tmprc);
				collcells.copy(tmprc);
			}
		}
	};
	cr.inst_contains_pt = function (x, y)
	{
		if (!this.bbox.contains_pt(x, y))
			return false;
		if (!this.bquad.contains_pt(x, y))
			return false;
		if (this.collision_poly && !this.collision_poly.is_empty())
		{
			this.collision_poly.cache_poly(this.width, this.height, this.angle);
			return this.collision_poly.contains_pt(x - this.x, y - this.y);
		}
		else
			return true;
	};
	cr.inst_get_iid = function ()
	{
		this.type.updateIIDs();
		return this.iid;
	};
	cr.inst_get_zindex = function ()
	{
		this.layer.updateZIndices();
		return this.zindex;
	};
	cr.inst_updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et, inst;
		for (i = 0, len = this.active_effect_flags.length; i < len; i++)
		{
			if (this.active_effect_flags[i])
				this.active_effect_types.push(this.type.effect_types[i]);
		}
		this.uses_shaders = !!this.active_effect_types.length;
	};
	cr.inst_toString = function ()
	{
		return "Inst" + this.puid;
	};
	cr.type_getFirstPicked = function (frominst)
	{
		if (frominst && frominst.is_contained && frominst.type != this)
		{
			var i, len, s;
			for (i = 0, len = frominst.siblings.length; i < len; i++)
			{
				s = frominst.siblings[i];
				if (s.type == this)
					return s;
			}
		}
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[0];
		else
			return null;
	};
	cr.type_getPairedInstance = function (inst)
	{
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[inst.get_iid() % instances.length];
		else
			return null;
	};
	cr.type_updateIIDs = function ()
	{
		if (!this.stale_iids || this.is_family)
			return;		// up to date or is family - don't want family to overwrite IIDs
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].iid = i;
		var next_iid = i;
		var createRow = this.runtime.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === this)
				createRow[i].iid = next_iid++;
		}
		this.stale_iids = false;
	};
	cr.type_getInstanceByIID = function (i)
	{
		if (i < this.instances.length)
			return this.instances[i];
		i -= this.instances.length;
		var createRow = this.runtime.createRow;
		var j, lenj;
		for (j = 0, lenj = createRow.length; j < lenj; ++j)
		{
			if (createRow[j].type === this)
			{
				if (i === 0)
					return createRow[j];
				--i;
			}
		}
;
		return null;
	};
	cr.type_getCurrentSol = function ()
	{
		return this.solstack[this.cur_sol];
	};
	cr.type_pushCleanSol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		else
			this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
	};
	cr.type_pushCopySol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		var clonesol = this.solstack[this.cur_sol];
		var prevsol = this.solstack[this.cur_sol - 1];
		if (prevsol.select_all)
			clonesol.select_all = true;
		else
		{
			clonesol.select_all = false;
			cr.shallowAssignArray(clonesol.instances, prevsol.instances);
			cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
		}
	};
	cr.type_popSol = function ()
	{
;
		this.cur_sol--;
	};
	cr.type_getBehaviorByName = function (behname)
	{
		var i, len, j, lenj, f, index = 0;
		if (!this.is_family)
		{
			for (i = 0, len = this.families.length; i < len; i++)
			{
				f = this.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (behname === f.behaviors[j].name)
					{
						this.extra.lastBehIndex = index;
						return f.behaviors[j];
					}
					index++;
				}
			}
		}
		for (i = 0, len = this.behaviors.length; i < len; i++) {
			if (behname === this.behaviors[i].name)
			{
				this.extra.lastBehIndex = index;
				return this.behaviors[i];
			}
			index++;
		}
		return null;
	};
	cr.type_getBehaviorIndexByName = function (behname)
	{
		var b = this.getBehaviorByName(behname);
		if (b)
			return this.extra.lastBehIndex;
		else
			return -1;
	};
	cr.type_getEffectIndexByName = function (name_)
	{
		var i, len;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			if (this.effect_types[i].name === name_)
				return i;
		}
		return -1;
	};
	cr.type_applySolToContainer = function ()
	{
		if (!this.is_contained || this.is_family)
			return;
		var i, len, j, lenj, t, sol, sol2;
		this.updateIIDs();
		sol = this.getCurrentSol();
		var select_all = sol.select_all;
		var es = this.runtime.getCurrentEventStack();
		var orblock = es && es.current_event && es.current_event.orblock;
		for (i = 0, len = this.container.length; i < len; i++)
		{
			t = this.container[i];
			if (t === this)
				continue;
			t.updateIIDs();
			sol2 = t.getCurrentSol();
			sol2.select_all = select_all;
			if (!select_all)
			{
				sol2.instances.length = sol.instances.length;
				for (j = 0, lenj = sol.instances.length; j < lenj; j++)
					sol2.instances[j] = t.getInstanceByIID(sol.instances[j].iid);
				if (orblock)
				{
					sol2.else_instances.length = sol.else_instances.length;
					for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
						sol2.else_instances[j] = t.getInstanceByIID(sol.else_instances[j].iid);
				}
			}
		}
	};
	cr.type_toString = function ()
	{
		return "Type" + this.sid;
	};
	cr.do_cmp = function (x, cmp, y)
	{
		if (typeof x === "undefined" || typeof y === "undefined")
			return false;
		switch (cmp)
		{
			case 0:     // equal
				return x === y;
			case 1:     // not equal
				return x !== y;
			case 2:     // less
				return x < y;
			case 3:     // less/equal
				return x <= y;
			case 4:     // greater
				return x > y;
			case 5:     // greater/equal
				return x >= y;
			default:
;
				return false;
		}
	};
})();
cr.shaders = {};
;
;
cr.plugins_.AJAX = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var isNodeWebkit = false;
	var path = null;
	var fs = null;
	var nw_appfolder = "";
	var pluginProto = cr.plugins_.AJAX.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.lastData = "";
		this.curTag = "";
		this.progress = 0;
		isNodeWebkit = this.runtime.isNodeWebkit;
		if (isNodeWebkit)
		{
			path = require("path");
			fs = require("fs");
			nw_appfolder = path["dirname"](process["execPath"]) + "\\";
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	var theInstance = null;
	window["C2_AJAX_DCSide"] = function (event_, tag_, param_)
	{
		if (!theInstance)
			return;
		if (event_ === "success")
		{
			theInstance.curTag = tag_;
			theInstance.lastData = param_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, theInstance);
		}
		else if (event_ === "error")
		{
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, theInstance);
		}
		else if (event_ === "progress")
		{
			theInstance.progress = param_;
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, theInstance);
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
	};
	instanceProto.saveToJSON = function ()
	{
		return { "lastData": this.lastData };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.lastData = o["lastData"];
		this.curTag = "";
		this.progress = 0;
	};
	instanceProto.doRequest = function (tag_, url_, method_, data_)
	{
		if (this.runtime.isDirectCanvas)
		{
			AppMobi["webview"]["execute"]('C2_AJAX_WebSide("' + tag_ + '", "' + url_ + '", "' + method_ + '", ' + (data_ ? '"' + data_ + '"' : "null") + ');');
			return;
		}
		var self = this;
		var request = null;
		var doErrorFunc = function ()
		{
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
		};
		var errorFunc = function ()
		{
			if (isNodeWebkit)
			{
				var filepath = nw_appfolder + url_;
				if (fs["existsSync"](filepath))
				{
					fs["readFile"](filepath, {"encoding": "utf8"}, function (err, data) {
						if (err)
						{
							doErrorFunc();
							return;
						}
						self.lastData = data.replace(/\r\n/g, "\n")
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					});
				}
				else
					doErrorFunc();
			}
			else
				doErrorFunc();
		};
		var progressFunc = function (e)
		{
			if (!e["lengthComputable"])
				return;
			self.progress = e.loaded / e.total;
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, self);
		};
		try
		{
			request = new XMLHttpRequest();
			request.onreadystatechange = function()
			{
				if (request.readyState === 4)
				{
					self.curTag = tag_;
					if (request.responseText)
						self.lastData = request.responseText.replace(/\r\n/g, "\n");		// fix windows style line endings
					else
						self.lastData = "";
					if (request.status >= 400)
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
					else
					{
						if (!isNodeWebkit || self.lastData.length)
							self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					}
				}
			};
			request.onerror = errorFunc;
			request.ontimeout = errorFunc;
			request.onabort = errorFunc;
			request["onprogress"] = progressFunc;
			request.open(method_, url_);
			try {
				request.responseType = "text";
			} catch (e) {}
			if (method_ === "POST" && data_)
			{
				if (request["setRequestHeader"])
				{
					request["setRequestHeader"]("Content-Type", "application/x-www-form-urlencoded");
				}
				request.send(data_);
			}
			else
				request.send();
		}
		catch (e)
		{
			errorFunc();
		}
	};
	function Cnds() {};
	Cnds.prototype.OnComplete = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnError = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnProgress = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Request = function (tag_, url_)
	{
		this.doRequest(tag_, url_, "GET");
	};
	Acts.prototype.RequestFile = function (tag_, file_)
	{
		this.doRequest(tag_, file_, "GET");
	};
	Acts.prototype.Post = function (tag_, url_, data_)
	{
		this.doRequest(tag_, url_, "POST", data_);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastData = function (ret)
	{
		ret.set_string(this.lastData);
	};
	Exps.prototype.Progress = function (ret)
	{
		ret.set_float(this.progress);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Arr = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Arr.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var arrCache = [];
	function allocArray()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [];
	};
	if (!Array.isArray)
	{
		Array.isArray = function (vArg) {
			return Object.prototype.toString.call(vArg) === "[object Array]";
		};
	}
	function freeArray(a)
	{
		var i, len;
		for (i = 0, len = a.length; i < len; i++)
		{
			if (Array.isArray(a[i]))
				freeArray(a[i]);
		}
		a.length = 0;
		arrCache.push(a);
	};
	instanceProto.onCreate = function()
	{
		this.cx = this.properties[0];
		this.cy = this.properties[1];
		this.cz = this.properties[2];
		if (!this.recycled)
			this.arr = allocArray();
		var a = this.arr;
		a.length = this.cx;
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			if (!a[x])
				a[x] = allocArray();
			a[x].length = this.cy;
			for (y = 0; y < this.cy; y++)
			{
				if (!a[x][y])
					a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = 0;
			}
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
	};
	instanceProto.onDestroy = function ()
	{
		var x;
		for (x = 0; x < this.cx; x++)
			freeArray(this.arr[x]);		// will recurse down and recycle other arrays
		this.arr.length = 0;
	};
	instanceProto.at = function (x, y, z)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return 0;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return 0;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return 0;
		return this.arr[x][y][z];
	};
	instanceProto.set = function (x, y, z, val)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return;
		this.arr[x][y][z] = val;
	};
	instanceProto.getAsJSON = function ()
	{
		return JSON.stringify({
			"c2array": true,
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		});
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	instanceProto.setSize = function (w, h, d)
	{
		if (w < 0) w = 0;
		if (h < 0) h = 0;
		if (d < 0) d = 0;
		if (this.cx === w && this.cy === h && this.cz === d)
			return;		// no change
		this.cx = w;
		this.cy = h;
		this.cz = d;
		var x, y, z;
		var a = this.arr;
		a.length = w;
		for (x = 0; x < this.cx; x++)
		{
			if (cr.is_undefined(a[x]))
				a[x] = allocArray();
			a[x].length = h;
			for (y = 0; y < this.cy; y++)
			{
				if (cr.is_undefined(a[x][y]))
					a[x][y] = allocArray();
				a[x][y].length = d;
				for (z = 0; z < this.cz; z++)
				{
					if (cr.is_undefined(a[x][y][z]))
						a[x][y][z] = 0;
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareX = function (x, cmp, val)
	{
		return cr.do_cmp(this.at(x, 0, 0), cmp, val);
	};
	Cnds.prototype.CompareXY = function (x, y, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, 0), cmp, val);
	};
	Cnds.prototype.CompareXYZ = function (x, y, z, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, z), cmp, val);
	};
	instanceProto.doForEachTrigger = function (current_event)
	{
		this.runtime.pushCopySol(current_event.solModifiers);
		current_event.retrigger();
		this.runtime.popSol(current_event.solModifiers);
	};
	Cnds.prototype.ArrForEach = function (dims)
	{
        var current_event = this.runtime.getCurrentEventStack().current_event;
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		switch (dims) {
		case 0:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					for (this.forZ = 0; this.forZ < this.cz; this.forZ++)
					{
						this.doForEachTrigger(current_event);
					}
				}
			}
			break;
		case 1:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					this.doForEachTrigger(current_event);
				}
			}
			break;
		case 2:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				this.doForEachTrigger(current_event);
			}
			break;
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		return false;
	};
	Cnds.prototype.CompareCurrent = function (cmp, val)
	{
		return cr.do_cmp(this.at(this.forX, this.forY, this.forZ), cmp, val);
	};
	Cnds.prototype.Contains = function(val)
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			for (y = 0; y < this.cy; y++)
			{
				for (z = 0; z < this.cz; z++)
				{
					if (this.arr[x][y][z] === val)
						return true;
				}
			}
		}
		return false;
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.cx === 0 || this.cy === 0 || this.cz === 0;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Clear = function ()
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
			for (y = 0; y < this.cy; y++)
				for (z = 0; z < this.cz; z++)
					this.arr[x][y][z] = 0;
	};
	Acts.prototype.SetSize = function (w, h, d)
	{
		this.setSize(w, h, d);
	};
	Acts.prototype.SetX = function (x, val)
	{
		this.set(x, 0, 0, val);
	};
	Acts.prototype.SetXY = function (x, y, val)
	{
		this.set(x, y, 0, val);
	};
	Acts.prototype.SetXYZ = function (x, y, z, val)
	{
		this.set(x, y, z, val);
	};
	Acts.prototype.Push = function (where, value, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (where === 0)	// back
			{
				x = a.length;
				a.push(allocArray());
			}
			else				// front
			{
				x = 0;
				a.unshift(allocArray());
			}
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					y = a[x].length;
					a[x].push(allocArray());
				}
				else				// front
				{
					y = 0;
					a[x].unshift(allocArray());
				}
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].push(value);
					}
					else				// front
					{
						a[x][y].unshift(value);
					}
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.Pop = function (where, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (this.cx === 0)
				break;
			if (where === 0)	// back
			{
				freeArray(a.pop());
			}
			else				// front
			{
				freeArray(a.shift());
			}
			this.cx--;
			break;
		case 1: // Y axis
			if (this.cy === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					freeArray(a[x].pop());
				}
				else				// front
				{
					freeArray(a[x].shift());
				}
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (this.cz === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].pop();
					}
					else				// front
					{
						a[x][y].shift();
					}
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Reverse = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point reversing empty array
		switch (axis) {
		case 0:	// X axis
			a.reverse();
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
				a[x].reverse();
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
				for (y = 0; y < this.cy; y++)
					a[x][y].reverse();
			this.cz--;
			break;
		}
	};
	function compareValues(va, vb)
	{
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			var sa = "" + va;
			var sb = "" + vb;
			if (sa < sb)
				return -1;
			else if (sa > sb)
				return 1;
			else
				return 0;
		}
	}
	Acts.prototype.Sort = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point sorting empty array
		switch (axis) {
		case 0:	// X axis
			a.sort(function (a, b) {
				return compareValues(a[0][0], b[0][0]);
			});
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				a[x].sort(function (a, b) {
					return compareValues(a[0], b[0]);
				});
			}
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].sort(compareValues);
				}
			}
			break;
		}
	};
	Acts.prototype.Delete = function (index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index >= this.cx)
				break;
			freeArray(a[index]);
			a.splice(index, 1);
			this.cx--;
			break;
		case 1: // Y axis
			if (index >= this.cy)
				break;
			for ( ; x < this.cx; x++)
			{
				freeArray(a[x][index]);
				a[x].splice(index, 1);
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (index >= this.cz)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 1);
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Insert = function (value, index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index > this.cx)
				return;
			x = index;
			a.splice(x, 0, allocArray());
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			if (index > this.cy)
				return;
			for ( ; x < this.cx; x++)
			{
				y = index;
				a[x].splice(y, 0, allocArray());
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			if (index > this.cz)
				return;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 0, value);
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2array"])		// presumably not a c2array object
			return;
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='" + filename + "' href=\"data:application/json,"
				+ encodeURIComponent(this.getAsJSON())
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(this.getAsJSON());
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.At = function (ret, x, y_, z_)
	{
		var y = y_ || 0;
		var z = z_ || 0;
		ret.set_any(this.at(x, y, z));
	};
	Exps.prototype.Width = function (ret)
	{
		ret.set_int(this.cx);
	};
	Exps.prototype.Height = function (ret)
	{
		ret.set_int(this.cy);
	};
	Exps.prototype.Depth = function (ret)
	{
		ret.set_int(this.cz);
	};
	Exps.prototype.CurX = function (ret)
	{
		ret.set_int(this.forX);
	};
	Exps.prototype.CurY = function (ret)
	{
		ret.set_int(this.forY);
	};
	Exps.prototype.CurZ = function (ret)
	{
		ret.set_int(this.forZ);
	};
	Exps.prototype.CurValue = function (ret)
	{
		ret.set_any(this.at(this.forX, this.forY, this.forZ));
	};
	Exps.prototype.Front = function (ret)
	{
		ret.set_any(this.at(0, 0, 0));
	};
	Exps.prototype.Back = function (ret)
	{
		ret.set_any(this.at(this.cx - 1, 0, 0));
	};
	Exps.prototype.IndexOf = function (ret, v)
	{
		for (var i = 0; i < this.cx; i++)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.LastIndexOf = function (ret, v)
	{
		for (var i = this.cx - 1; i >= 0; i--)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(this.getAsJSON());
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var listenerX = 0;
	var listenerY = 0;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	var isMusicWorkaround = false;
	var musicPlayNextTouch = [];
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		try {
			if (s["stop"])
				s["stop"](0);
			else
				s["noteOff"](0);
		}
		catch (e) {}
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[1] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[2] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[3] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[4] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		this.node["threshold"]["value"] = threshold;
		this.node["knee"]["value"] = knee;
		this.node["ratio"]["value"] = ratio;
		this.node["attack"]["value"] = attack;
		this.node["release"]["value"] = release;
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj || dt === 0)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		this.supportWebAudioAPI = false;
		if (api === API_WEBAUDIO && is_music)
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;			// actual audio object
		this.audioData = null;				// web audio api: ajax request result (compressed audio that needs decoding)
		var request;
		switch (this.myapi) {
		case API_HTML5:
			this.bufferObject = new Audio();
			if (api === API_WEBAUDIO && context["createMediaElementSource"] && !audRuntime.isFirefox)
			{
				this.supportWebAudioAPI = true;		// can be routed through web audio api
				this.bufferObject.addEventListener("canplay", function ()
				{
					if (!self.mediaSourceNode)		// protect against this event firing twice
					{
						self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
						self.mediaSourceNode["connect"](self.outNode);
					}
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				self.audioData = request.response;
				self.decodeAudioBuffer();
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.decodeAudioBuffer = function ()
	{
		if (this.bufferObject || !this.audioData)
			return;		// audio already decoded or AJAX request not yet complete
		var self = this;
		if (context["decodeAudioData"])
		{
			context["decodeAudioData"](this.audioData, function (buffer) {
					self.bufferObject = buffer;
					var p, i, len, a;
					if (!cr.is_undefined(self.playTagWhenReady) && !silent)
					{
						if (self.panWhenReady.length)
						{
							for (i = 0, len = self.panWhenReady.length; i < len; i++)
							{
								p = self.panWhenReady[i];
								a = new C2AudioInstance(self, p.thistag);
								a.setPannerEnabled(true);
								if (typeof p.objUid !== "undefined")
								{
									p.obj = audRuntime.getObjectByUID(p.objUid);
									if (!p.obj)
										continue;
								}
								if (p.obj)
								{
									var px = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, true);
									var py = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, false);
									a.setPan(px, py, cr.to_degrees(p.obj.angle - p.obj.layer.getAngle()), p.ia, p.oa, p.og);
									a.setObject(p.obj);
								}
								else
								{
									a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
								}
								a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
								if (self.pauseWhenReady)
									a.pause();
								audioInstances.push(a);
							}
							self.panWhenReady.length = 0;
						}
						else
						{
							a = new C2AudioInstance(self, self.playTagWhenReady);
							a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
							if (self.pauseWhenReady)
								a.pause();
							audioInstances.push(a);
						}
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = buffer;
					}
			});
		}
		else
		{
			this.bufferObject = context["createBuffer"](this.audioData, false);
			if (!cr.is_undefined(this.playTagWhenReady) && !silent)
			{
				var a = new C2AudioInstance(this, this.playTagWhenReady);
				a.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady);
				if (this.pauseWhenReady)
					a.pause();
				audioInstances.push(a);
			}
			else if (!cr.is_undefined(this.convolveWhenReady))
			{
				var convolveNode = this.convolveWhenReady.convolveNode;
				convolveNode["normalize"] = this.normalizeWhenReady;
				convolveNode["buffer"] = this.bufferObject;
			}
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] === 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData;			// null until AJAX request completes
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.mutevol = 1;
		this.startTime = audRuntime.kahanTime.sum;
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		if (this.myapi === API_WEBAUDIO && this.buffer.myapi === API_HTML5 && !this.buffer.supportWebAudioAPI)
			this.myapi = API_HTML5;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = false;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				return (audRuntime.kahanTime.sum - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.gainNode)
				return;
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			if (!this.gainNode)
				return;
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		var inst = this.objectTracker.obj;
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		this.pannerNode["setPosition"](px, py, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = inst.angle - inst.layer.getAngle();
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		this.pannerNode["setVelocity"](this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
				musicPlayNextTouch.push(this);
			else
				this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
					musicPlayNextTouch.push(this);
				else
					instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src, looping);
			else
				AppMobi["player"]["playSound"](this.src, looping);
			break;
		}
		this.playbackRate = 1;
		this.startTime = audRuntime.kahanTime.sum - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = audRuntime.kahanTime.sum - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["resumeSound"](this.src);
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["seekSound"](this.src, pos);
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				return AppMobi["context"]["getDurationSound"](this.src);
			else
				return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = audRuntime.kahanTime.sum - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				ret = AppMobi["context"]["getPlaybackTimeSound"](this.src);
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["setLoopingSound"](this.src, l);
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = audRuntime.kahanTime.sum - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		if ((this.runtime.isiOS || (this.runtime.isAndroid && (this.runtime.isChrome || this.runtime.isAndroidStockBrowser))) && !this.runtime.isCrosswalk && !this.runtime.isDomFree)
		{
			isMusicWorkaround = true;
		}
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if ((this.runtime.isiOS && api === API_WEBAUDIO) || isMusicWorkaround)
		{
			document.addEventListener("touchstart", function ()
			{
				var i, len, m;
				if (!iOShadtouch && context)
				{
					var buffer = context["createBuffer"](1, 1, 22050);
					var source = context["createBufferSource"]();
					source["buffer"] = buffer;
					source["connect"](context["destination"]);
					startSource(source);
					iOShadtouch = true;
				}
				if (isMusicWorkaround)
				{
					if (!silent)
					{
						for (i = 0, len = musicPlayNextTouch.length; i < len; ++i)
						{
							m = musicPlayNextTouch[i];
							if (!m.stopped && !m.is_paused)
								m.instanceObject.play();
						}
					}
					musicPlayNextTouch.length = 0;
				}
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap)
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		this.saveload = this.properties[1];		// 0 = all, 1 = sounds only, 2 = music only, 3 = none
		panningModel = this.properties[2];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[3];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[4];
		refDistance = this.properties[5];
		maxDistance = this.properties[6];
		rolloffFactor = this.properties[7];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[8];
			context["listener"]["dopplerFactor"] = this.properties[9];
			context["listener"]["setPosition"](this.runtime.draw_width / 2, this.runtime.draw_height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;				// no need to save stopped sounds
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			if (a.is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!a.is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		if (this.saveload !== 3)
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
			{
				a = audioInstances[i];
				if (a.is_music && this.saveload === 1)
					continue;		// only saving/loading sound: leave music playing
				if (!a.is_music && this.saveload === 2)
					continue;		// only saving/loading music: leave sound playing
				a.stop();
			}
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			if (is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.setMuted(true);
			a.doSetMuted(a.is_muted || a.is_silent);
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot, inst;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			inst = this.runtime.getObjectByUID(ot.loadUid);
			ot.setObject(inst);
			ot.loadUid = -1;
			if (inst)
			{
				listenerX = inst.x;
				listenerY = inst.y;
			}
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			listenerX = this.listenerTracker.obj.x;
			listenerY = this.listenerTracker.obj.y;
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a, ret = null, j, k, lenj, ai;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
			{
				ret = a;
				break;
			}
		}
		if (!ret)
		{
			ret = new C2AudioBuffer(src_, is_music);
			audioBuffers.push(ret);
		}
		return ret;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function getAudioByTag(tag)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (cr.equals_nocase(tag, a.tag))
				taggedAudio.push(a);
		}
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return cr.equals_nocase(audTag, t);
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoaded())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.StopAll = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
		listenerX = inst.x;
		listenerY = inst.y;
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Browser = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Browser.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		window.addEventListener("resize", function () {
			self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, self);
		});
		if (typeof navigator.onLine !== "undefined")
		{
			window.addEventListener("online", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, self);
			});
			window.addEventListener("offline", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, self);
			});
		}
		if (typeof window.applicationCache !== "undefined")
		{
			window.applicationCache.addEventListener('updateready', function() {
				self.runtime.loadingprogress = 1;
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			window.applicationCache.addEventListener('progress', function(e) {
				self.runtime.loadingprogress = e["loaded"] / e["total"];
			});
		}
		if (!this.runtime.isDirectCanvas)
		{
			document.addEventListener("appMobi.device.update.available", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			document.addEventListener("backbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
			});
			document.addEventListener("menubutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
			});
			document.addEventListener("searchbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, self);
			});
			document.addEventListener("tizenhwkey", function (e) {
				var ret;
				switch (e["keyName"]) {
				case "back":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
					if (!ret)
					{
						if (window["tizen"])
							window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
					}
					break;
				case "menu":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
					if (!ret)
						e.preventDefault();
					break;
				}
			});
		}
		this.runtime.addSuspendCallback(function(s) {
			if (s)
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, self);
			}
			else
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, self);
			}
		});
		this.is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	};
	function Cnds() {};
	Cnds.prototype.CookiesEnabled = function()
	{
		return navigator ? navigator.cookieEnabled : false;
	};
	Cnds.prototype.IsOnline = function()
	{
		return navigator ? navigator.onLine : false;
	};
	Cnds.prototype.HasJava = function()
	{
		return navigator ? navigator.javaEnabled() : false;
	};
	Cnds.prototype.OnOnline = function()
	{
		return true;
	};
	Cnds.prototype.OnOffline = function()
	{
		return true;
	};
	Cnds.prototype.IsDownloadingUpdate = function ()
	{
		if (typeof window["applicationCache"] === "undefined")
			return false;
		else
			return window["applicationCache"]["status"] === window["applicationCache"]["DOWNLOADING"];
	};
	Cnds.prototype.OnUpdateReady = function ()
	{
		return true;
	};
	Cnds.prototype.PageVisible = function ()
	{
		return !this.runtime.isSuspended;
	};
	Cnds.prototype.OnPageVisible = function ()
	{
		return true;
	};
	Cnds.prototype.OnPageHidden = function ()
	{
		return true;
	};
	Cnds.prototype.OnResize = function ()
	{
		return true;
	};
	Cnds.prototype.IsFullscreen = function ()
	{
		return !!(document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
	};
	Cnds.prototype.OnBackButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenuButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnSearchButton = function ()
	{
		return true;
	};
	Cnds.prototype.IsMetered = function ()
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			return false;
		return connection["metered"];
	};
	Cnds.prototype.IsCharging = function ()
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			return true;
		return battery["charging"];
	};
	Cnds.prototype.IsPortraitLandscape = function (p)
	{
		var current = (window.innerWidth <= window.innerHeight ? 0 : 1);
		return current === p;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Alert = function (msg)
	{
		if (!this.runtime.isDomFree)
			alert(msg.toString());
	};
	Acts.prototype.Close = function ()
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["forceToFinish"]();
		else if (window["tizen"])
			window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
		else if (navigator["app"] && navigator["app"]["exitApp"])
			navigator["app"]["exitApp"]();
		else if (navigator["device"] && navigator["device"]["exitApp"])
			navigator["device"]["exitApp"]();
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.close();
	};
	Acts.prototype.Focus = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["focus"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.focus();
	};
	Acts.prototype.Blur = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["blur"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.blur();
	};
	Acts.prototype.GoBack = function ()
	{
		if (navigator["app"] && navigator["app"]["backHistory"])
			navigator["app"]["backHistory"]();
		else if (!this.is_arcade && !this.runtime.isDomFree && window.back)
			window.back();
	};
	Acts.prototype.GoForward = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.forward)
			window.forward();
	};
	Acts.prototype.GoHome = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.home)
			window.home();
	};
	Acts.prototype.GoToURL = function (url)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.location = url;
	};
	Acts.prototype.GoToURLWindow = function (url, tag)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.open(url, tag);
	};
	Acts.prototype.Reload = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree)
			window.location.reload();
	};
	var firstRequestFullscreen = true;
	var crruntime = null;
	function onFullscreenError()
	{
		if (typeof jQuery !== "undefined")
		{
			crruntime["setSize"](jQuery(window).width(), jQuery(window).height());
		}
	};
	Acts.prototype.RequestFullScreen = function (stretchmode)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (stretchmode >= 2)
			stretchmode += 1;
		if (stretchmode === 6)
			stretchmode = 2;
		if (this.runtime.isNodeWebkit)
		{
			if (!this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["enterFullscreen"]();
				this.runtime.isNodeFullscreen = true;
			}
		}
		else
		{
			if (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"])
			{
				return;
			}
			this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			var elem = this.runtime.canvasdiv || this.runtime.canvas;
			if (firstRequestFullscreen)
			{
				firstRequestFullscreen = false;
				crruntime = this.runtime;
				elem.addEventListener("mozfullscreenerror", onFullscreenError);
				elem.addEventListener("webkitfullscreenerror", onFullscreenError);
				elem.addEventListener("msfullscreenerror", onFullscreenError);
				elem.addEventListener("fullscreenerror", onFullscreenError);
			}
			if (!cr.is_undefined(elem["requestFullscreen"]))
				elem["requestFullscreen"]();
			else if (!cr.is_undefined(elem["webkitRequestFullScreen"]))
			{
				if (typeof Element !== "undefined" && typeof Element["ALLOW_KEYBOARD_INPUT"] !== "undefined")
					elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
				else
					elem["webkitRequestFullScreen"]();
			}
			else if (!cr.is_undefined(elem["mozRequestFullScreen"]))
				elem["mozRequestFullScreen"]();
			else if (!cr.is_undefined(elem["msRequestFullscreen"]))
				elem["msRequestFullscreen"]();
		}
	};
	Acts.prototype.CancelFullScreen = function ()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (this.runtime.isNodeWebkit)
		{
			if (this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["leaveFullscreen"]();
				this.runtime.isNodeFullscreen = false;
			}
		}
		else
		{
			if (!cr.is_undefined(document["exitFullscreen"]))
				document["exitFullscreen"]();
			else if (!cr.is_undefined(document["webkitCancelFullScreen"]))
				document["webkitCancelFullScreen"]();
			else if (!cr.is_undefined(document["mozCancelFullScreen"]))
				document["mozCancelFullScreen"]();
			else if (!cr.is_undefined(document["msExitFullscreen"]))
				document["msExitFullscreen"]();
		}
	};
	Acts.prototype.Vibrate = function (pattern_)
	{
		try {
			var arr = pattern_.split(",");
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				arr[i] = parseInt(arr[i], 10);
			}
			if (navigator["vibrate"])
				navigator["vibrate"](arr);
			else if (navigator["mozVibrate"])
				navigator["mozVibrate"](arr);
			else if (navigator["webkitVibrate"])
				navigator["webkitVibrate"](arr);
			else if (navigator["msVibrate"])
				navigator["msVibrate"](arr);
		}
		catch (e) {}
	};
	Acts.prototype.InvokeDownload = function (url_, filename_)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			window.open(url_);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = url_;
			a.download = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.InvokeDownloadString = function (str_, mimetype_, filename_)
	{
		var datauri = "data:" + mimetype_ + "," + encodeURIComponent(str_);
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			window.open(datauri);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = datauri;
			a.download = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.ConsoleLog = function (type_, msg_)
	{
		if (typeof console === "undefined")
			return;
		if (type_ === 0 && console.log)
			console.log(msg_.toString());
		if (type_ === 1 && console.warn)
			console.warn(msg_.toString());
		if (type_ === 2 && console.error)
			console.error(msg_.toString());
	};
	Acts.prototype.ConsoleGroup = function (name_)
	{
		if (console && console.group)
			console.group(name_);
	};
	Acts.prototype.ConsoleGroupEnd = function ()
	{
		if (console && console.groupEnd)
			console.groupEnd();
	};
	Acts.prototype.ExecJs = function (js_)
	{
		if (eval)
			eval(js_);
	};
	var orientations = [
		"portrait",
		"landscape",
		"portrait-primary",
		"portrait-secondary",
		"landscape-primary",
		"landscape-secondary"
	];
	Acts.prototype.LockOrientation = function (o)
	{
		o = Math.floor(o);
		if (o < 0 || o >= orientations.length)
			return;
		this.runtime.autoLockOrientation = false;
		var orientation = orientations[o];
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Acts.prototype.UnlockOrientation = function ()
	{
		this.runtime.autoLockOrientation = false;
		if (screen["unlockOrientation"])
			screen["unlockOrientation"]();
		else if (screen["webkitUnlockOrientation"])
			screen["webkitUnlockOrientation"]();
		else if (screen["mozUnlockOrientation"])
			screen["mozUnlockOrientation"]();
		else if (screen["msUnlockOrientation"])
			screen["msUnlockOrientation"]();
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.URL = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.toString());
	};
	Exps.prototype.Protocol = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.protocol);
	};
	Exps.prototype.Domain = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hostname);
	};
	Exps.prototype.PathName = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.pathname);
	};
	Exps.prototype.Hash = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hash);
	};
	Exps.prototype.Referrer = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.referrer);
	};
	Exps.prototype.Title = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.title);
	};
	Exps.prototype.Name = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appName);
	};
	Exps.prototype.Version = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appVersion);
	};
	Exps.prototype.Language = function (ret)
	{
		if (navigator && navigator.language)
			ret.set_string(navigator.language);
		else
			ret.set_string("");
	};
	Exps.prototype.Platform = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.platform);
	};
	Exps.prototype.Product = function (ret)
	{
		if (navigator && navigator.product)
			ret.set_string(navigator.product);
		else
			ret.set_string("");
	};
	Exps.prototype.Vendor = function (ret)
	{
		if (navigator && navigator.vendor)
			ret.set_string(navigator.vendor);
		else
			ret.set_string("");
	};
	Exps.prototype.UserAgent = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.userAgent);
	};
	Exps.prototype.QueryString = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.search);
	};
	Exps.prototype.QueryParam = function (ret, paramname)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var match = RegExp('[?&]' + paramname + '=([^&]*)').exec(window.location.search);
		if (match)
			ret.set_string(decodeURIComponent(match[1].replace(/\+/g, ' ')));
		else
			ret.set_string("");
	};
	Exps.prototype.Bandwidth = function (ret)
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(connection["bandwidth"]);
	};
	Exps.prototype.BatteryLevel = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(1);
		else
			ret.set_float(battery["level"]);
	};
	Exps.prototype.BatteryTimeLeft = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(battery["dischargingTime"]);
	};
	Exps.prototype.ExecJS = function (ret, js_)
	{
		if (!eval)
		{
			ret.set_any(0);
			return;
		}
		var result = eval(js_);
		if (typeof result === "number")
			ret.set_any(result);
		else if (typeof result === "string")
			ret.set_any(result);
		else if (typeof result === "boolean")
			ret.set_any(result ? 1 : 0);
		else
			ret.set_any(0);
	};
	Exps.prototype.ScreenWidth = function (ret)
	{
		ret.set_int(screen.width);
	};
	Exps.prototype.ScreenHeight = function (ret)
	{
		ret.set_int(screen.height);
	};
	Exps.prototype.DevicePixelRatio = function (ret)
	{
		ret.set_float(this.runtime.devicePixelRatio);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Dictionary = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Dictionary.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.dictionary = {};
		this.cur_key = "";		// current key in for-each loop
		this.key_count = 0;
	};
	instanceProto.saveToJSON = function ()
	{
		return this.dictionary;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.dictionary = o;
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareValue = function (key_, cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[key_], cmp_, value_);
	};
	Cnds.prototype.ForEachKey = function ()
	{
		var current_event = this.runtime.getCurrentEventStack().current_event;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
			{
				this.cur_key = p;
				this.runtime.pushCopySol(current_event.solModifiers);
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		this.cur_key = "";
		return false;
	};
	Cnds.prototype.CompareCurrentValue = function (cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[this.cur_key], cmp_, value_);
	};
	Cnds.prototype.HasKey = function (key_)
	{
		return this.dictionary.hasOwnProperty(key_);
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.key_count === 0;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.AddKey = function (key_, value_)
	{
		if (!this.dictionary.hasOwnProperty(key_))
			this.key_count++;
		this.dictionary[key_] = value_;
	};
	Acts.prototype.SetKey = function (key_, value_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			this.dictionary[key_] = value_;
	};
	Acts.prototype.DeleteKey = function (key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
		{
			delete this.dictionary[key_];
			this.key_count--;
		}
	};
	Acts.prototype.Clear = function ()
	{
		cr.wipe(this.dictionary);		// avoid garbaging
		this.key_count = 0;
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2dictionary"])		// presumably not a c2dictionary object
			return;
		this.dictionary = o["data"];
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='data.json' href=\"data:application/json,"
				+ encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}))
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}));
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Get = function (ret, key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			ret.set_any(this.dictionary[key_]);
		else
			ret.set_int(0);
	};
	Exps.prototype.KeyCount = function (ret)
	{
		ret.set_int(this.key_count);
	};
	Exps.prototype.CurrentKey = function (ret)
	{
		ret.set_string(this.cur_key);
	};
	Exps.prototype.CurrentValue = function (ret)
	{
		if (this.dictionary.hasOwnProperty(this.cur_key))
			ret.set_any(this.dictionary[this.cur_key]);
		else
			ret.set_int(0);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": this.dictionary
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Function = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Function.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var funcStack = [];
	var funcStackPtr = -1;
	var isInPreview = false;	// set in onCreate
	function FuncStackEntry()
	{
		this.name = "";
		this.retVal = 0;
		this.params = [];
	};
	function pushFuncStack()
	{
		funcStackPtr++;
		if (funcStackPtr === funcStack.length)
			funcStack.push(new FuncStackEntry());
		return funcStack[funcStackPtr];
	};
	function getCurrentFuncStack()
	{
		if (funcStackPtr < 0)
			return null;
		return funcStack[funcStackPtr];
	};
	function getOneAboveFuncStack()
	{
		if (!funcStack.length)
			return null;
		var i = funcStackPtr + 1;
		if (i >= funcStack.length)
			i = funcStack.length - 1;
		return funcStack[i];
	};
	function popFuncStack()
	{
;
		funcStackPtr--;
	};
	instanceProto.onCreate = function()
	{
		isInPreview = (typeof cr_is_preview !== "undefined");
	};
	function Cnds() {};
	Cnds.prototype.OnFunction = function (name_)
	{
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		return cr.equals_nocase(name_, fs.name);
	};
	Cnds.prototype.CompareParam = function (index_, cmp_, value_)
	{
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		index_ = cr.floor(index_);
		if (index_ < 0 || index_ >= fs.params.length)
			return false;
		return cr.do_cmp(fs.params[index_], cmp_, value_);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.CallFunction = function (name_, params_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		cr.shallowAssignArray(fs.params, params_);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
	};
	Acts.prototype.SetReturnValue = function (value_)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			fs.retVal = value_;
		else
;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ReturnValue = function (ret)
	{
		var fs = getOneAboveFuncStack();
		if (fs)
			ret.set_any(fs.retVal);
		else
			ret.set_int(0);
	};
	Exps.prototype.ParamCount = function (ret)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			ret.set_int(fs.params.length);
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Param = function (ret, index_)
	{
		index_ = cr.floor(index_);
		var fs = getCurrentFuncStack();
		if (fs)
		{
			if (index_ >= 0 && index_ < fs.params.length)
			{
				ret.set_any(fs.params[index_]);
			}
			else
			{
;
				ret.set_int(0);
			}
		}
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Call = function (ret, name_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		fs.params.length = 0;
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
			fs.params.push(arguments[i]);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
		ret.set_any(fs.retVal);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.wait_for_textures.push(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		a[2] = 0;
		arrCache.push(a);
	};
	function makeCollKey(a, b)
	{
		if (a < b)
			return "" + a + "," + b;
		else
			return "" + b + "," + a;
	};
	function collmemory_add(collmemory, a, b, tickcount)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var key = makeCollKey(a_uid, b_uid);
		if (collmemory.hasOwnProperty(key))
		{
			collmemory[key][2] = tickcount;
			return;
		}
		var arr = allocArr();
		arr[0] = a_uid;
		arr[1] = b_uid;
		arr[2] = tickcount;
		collmemory[key] = arr;
	};
	function collmemory_remove(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			freeArr(collmemory[key]);
			delete collmemory[key];
		}
	};
	function collmemory_removeInstance(collmemory, inst)
	{
		var uid = inst.uid;
		var p, entry;
		for (p in collmemory)
		{
			if (collmemory.hasOwnProperty(p))
			{
				entry = collmemory[p];
				if (entry[0] === uid || entry[1] === uid)
				{
					freeArr(collmemory[p]);
					delete collmemory[p];
				}
			}
		}
	};
	var last_coll_tickcount = -2;
	function collmemory_has(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			last_coll_tickcount = collmemory[key][2];
			return true;
		}
		else
		{
			last_coll_tickcount = -2;
			return false;
		}
	};
	var candidates = [];
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = {};
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var collmemory = cnd.extra.collmemory;
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances;
		var l, linst, r, rinst;
		var curlsol, currsol;
		var tickcount = this.runtime.tickcount;
		var lasttickcount = tickcount - 1;
		var exists, run;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			if (rsol.select_all)
			{
				linst.update_bbox();
				this.runtime.getCollisionCandidates(linst.layer, rtype, linst.bbox, candidates);
				rinstances = candidates;
			}
			else
				rinstances = rsol.getObjects();
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					exists = collmemory_has(collmemory, linst, rinst);
					run = (!exists || (last_coll_tickcount < lasttickcount));
					collmemory_add(collmemory, linst, rinst, tickcount);
					if (run)
					{
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(collmemory, linst, rinst);
				}
			}
			candidates.length = 0;
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
		{
			this.update_bbox();
			this.runtime.getCollisionCandidates(this.layer, rtype, this.bbox, candidates);
			rinstances = candidates;
		}
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		candidates.length = 0;
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				if (orblock)
				{
					var initsize = sol.instances.length;
					sol.instances.length = initsize + topick.length;
					for (i = 0, len = topick.length; i < len; i++)
					{
						sol.instances[initsize + i] = topick[i];
						cr.arrayFindRemove(sol.else_instances, topick[i]);
					}
				}
				else
				{
					cr.shallowAssignArray(sol.instances, topick);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.CompareAnimSpeed = function (cmp, x)
	{
		var s = (this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
		return cr.do_cmp(s, cmp, x);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		if (this.collisionsEnabled === (set_ !== 0))
			return;		// no change
		this.collisionsEnabled = (set_ !== 0);
		if (this.collisionsEnabled)
			this.set_bbox_changed();		// needs to be added back to cells
		else
		{
			if (this.collcells.right >= this.collcells.left)
				this.type.collision_grid.update(this, this.collcells, null);
			this.collcells.set(0, 0, -1, -1);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.parseFont();
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.parseFont = function ()
	{
		var arr = this.font.split(" ");
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += this.line_height_offset;
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var halfw = this.runtime.draw_width / 2;
		var halfh = this.runtime.draw_height / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var old_dpr = this.runtime.devicePixelRatio;
		this.runtime.devicePixelRatio = 1;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false, true);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false, true);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false, true);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false, true);
		this.runtime.devicePixelRatio = old_dpr;
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * (this.pxHeight + this.line_height_offset) - this.line_height_offset);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["pointerEnabled"])
		{
			elem.addEventListener("pointerdown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("pointermove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("pointerup",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			elem2.addEventListener("pointercancel",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				this.runtime.canvas.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"];
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"];
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"];
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"];
					self.acc_y = eventData["acceleration"]["y"];
					self.acc_z = eventData["acceleration"]["z"];
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap)
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.lasttime = t.time;
			t.lastx = t.x;
			t.lasty = t.y;
			t.time = nowtime;
			t.x = info.pageX - offset.left;
			t.y = info.pageY - offset.top;
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push({ time: nowtime,
							x: touchx,
							y: touchy,
							lasttime: nowtime,
							lastx: touchx,
							lasty: touchy,
							"id": info["pointerId"],
							startindex: this.trigger_index
						});
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onPointerEnd = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		this.runtime.isInUserInputEvent = false;
		if (i >= 0)
		{
			this.touches.splice(i, 1);
		}
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.lasttime = u.time;
				u.lastx = u.x;
				u.lasty = u.y;
				u.time = nowtime;
				u.x = t.pageX - offset.left;
				u.y = t.pageY - offset.top;
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push({ time: nowtime,
								x: touchx,
								y: touchy,
								lasttime: nowtime,
								lastx: touchx,
								lasty: touchy,
								"id": t["identifier"],
								startindex: this.trigger_index
							});
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchEnd = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				this.touches.splice(j, 1);
			}
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var touching = [];
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			sol.instances = touching;
			type.applySolToContainer();
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxX = layer.parallaxX;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxX = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxX = oldParallaxX;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxY = layer.parallaxY;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxY = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxY = oldParallaxY;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.WebStorage = function(runtime)
{
	this.runtime = runtime;
};
(function()
{
	var pluginProto = cr.plugins_.WebStorage.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var prefix = "";
	var is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	if (is_arcade)
		prefix = "arcade" + window["scirra_arcade_id"];
	var logged_sessionnotsupported = false;
	function LogSessionNotSupported()
	{
		if (logged_sessionnotsupported)
			return;
		cr.logexport("[Construct 2] Webstorage plugin: session storage is not supported on this platform. Try using local storage or global variables instead.");
		logged_sessionnotsupported = true;
	};
	instanceProto.onCreate = function()
	{
	};
	function Cnds() {};
	Cnds.prototype.LocalStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.SessionStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.LocalStorageExists = function(key)
	{
		return localStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.SessionStorageExists = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return false;
		}
		return sessionStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.OnQuotaExceeded = function ()
	{
		return true;
	};
	Cnds.prototype.CompareKeyText = function (key, text_to_compare, case_sensitive)
	{
		var value = localStorage.getItem(prefix + key) || "";
		if (case_sensitive)
			return value == text_to_compare;
		else
			return cr.equals_nocase(value, text_to_compare);
	};
	Cnds.prototype.CompareKeyNumber = function (key, cmp, x)
	{
		var value = localStorage.getItem(prefix + key) || "";
		return cr.do_cmp(parseFloat(value), cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StoreLocal = function(key, data)
	{
		try {
			localStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.StoreSession = function(key,data)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		try {
			sessionStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.RemoveLocal = function(key)
	{
		localStorage.removeItem(prefix + key);
	};
	Acts.prototype.RemoveSession = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		sessionStorage.removeItem(prefix + key);
	};
	Acts.prototype.ClearLocal = function()
	{
		if (!is_arcade)
			localStorage.clear();
	};
	Acts.prototype.ClearSession = function()
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		if (!is_arcade)
			sessionStorage.clear();
	};
	Acts.prototype.JSONLoad = function (json_, mode_)
	{
		var d;
		try {
			d = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!d["c2dictionary"])			// presumably not a c2dictionary object
			return;
		var o = d["data"];
		if (mode_ === 0 && !is_arcade)	// 'set' mode: must clear webstorage first
			localStorage.clear();
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
			{
				try {
					localStorage.setItem(prefix + p, o[p]);
				}
				catch (e)
				{
					this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
					return;
				}
			}
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LocalValue = function(ret,key)
	{
		ret.set_string(localStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.SessionValue = function(ret,key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		ret.set_string(sessionStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.LocalCount = function(ret)
	{
		ret.set_int(is_arcade ? 0 : localStorage.length);
	};
	Exps.prototype.SessionCount = function(ret)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_int(0);
			return;
		}
		ret.set_int(is_arcade ? 0 : sessionStorage.length);
	};
	Exps.prototype.LocalAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.getItem(localStorage.key(n)) || "");
	};
	Exps.prototype.SessionAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.getItem(sessionStorage.key(n)) || "");
	};
	Exps.prototype.LocalKeyAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.key(n) || "");
	};
	Exps.prototype.SessionKeyAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.key(n) || "");
	};
	Exps.prototype.AsJSON = function (ret)
	{
		var o = {}, i, len, k;
		for (i = 0, len = localStorage.length; i < len; i++)
		{
			k = localStorage.key(i);
			if (is_arcade)
			{
				if (k.substr(0, prefix.length) === prefix)
				{
					o[k.substr(prefix.length)] = localStorage.getItem(k);
				}
			}
			else
				o[k] = localStorage.getItem(k);
		}
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": o
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.cjs = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.cjs.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.nameOfExternalScript = this.properties[0];
		this.returnValue= "";
		var myScriptTag=document.createElement('script');
		myScriptTag.setAttribute("type","text/javascript");
		myScriptTag.setAttribute("src", this.nameOfExternalScript);
		if (typeof myScriptTag != "undefined")
			document.getElementsByTagName("head")[0].appendChild(myScriptTag);
	};
	instanceProto.draw = function(ctx)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.ExecuteJS = function (myparam)
	{
		this.returnValue= "";
		try
		{
			this.returnValue= eval(myparam);
		} catch(err)
		{
			this.returnValue= err;
        }
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.ReadExecutionReturn = function (ret)
	{
		ret.set_string(this.returnValue);
	};
}());
;
;
cr.behaviors.Anchor = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Anchor.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.anch_left = this.properties[0];		// 0 = left, 1 = right
		this.anch_top = this.properties[1];			// 0 = top, 1 = bottom
		this.anch_right = this.properties[2];		// 0 = none, 1 = right
		this.anch_bottom = this.properties[3];		// 0 = none, 1 = bottom
		this.inst.update_bbox();
		this.xleft = this.inst.bbox.left;
		this.ytop = this.inst.bbox.top;
		this.xright = this.runtime.original_width - this.inst.bbox.left;
		this.ybottom = this.runtime.original_height - this.inst.bbox.top;
		this.rdiff = this.runtime.original_width - this.inst.bbox.right;
		this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
		this.enabled = (this.properties[4] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"xleft": this.xleft,
			"ytop": this.ytop,
			"xright": this.xright,
			"ybottom": this.ybottom,
			"rdiff": this.rdiff,
			"bdiff": this.bdiff,
			"enabled": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.xleft = o["xleft"];
		this.ytop = o["ytop"];
		this.xright = o["xright"];
		this.ybottom = o["ybottom"];
		this.rdiff = o["rdiff"];
		this.bdiff = o["bdiff"];
		this.enabled = o["enabled"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var n;
		var layer = this.inst.layer;
		var inst = this.inst;
		var bbox = this.inst.bbox;
		if (this.anch_left === 0)
		{
			inst.update_bbox();
			n = (layer.viewLeft + this.xleft) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_left === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.xright) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_top === 0)
		{
			inst.update_bbox();
			n = (layer.viewTop + this.ytop) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_top === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.ybottom) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_right === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.rdiff) - bbox.right;
			if (n !== 0)
			{
				inst.width += n;
				if (inst.width < 0)
					inst.width = 0;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_bottom === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.bdiff) - bbox.bottom;
			if (n !== 0)
			{
				inst.height += n;
				if (inst.height < 0)
					inst.height = 0;
				inst.set_bbox_changed();
			}
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		if (this.enabled && e === 0)
			this.enabled = false;
		else if (!this.enabled && e !== 0)
		{
			this.inst.update_bbox();
			this.xleft = this.inst.bbox.left;
			this.ytop = this.inst.bbox.top;
			this.xright = this.runtime.original_width - this.inst.bbox.left;
			this.ybottom = this.runtime.original_height - this.inst.bbox.top;
			this.rdiff = this.runtime.original_width - this.inst.bbox.right;
			this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
			this.enabled = true;
		}
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Bullet = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Bullet.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var speed = this.properties[0];
		this.acc = this.properties[1];
		this.g = this.properties[2];
		this.bounceOffSolid = (this.properties[3] !== 0);
		this.setAngle = (this.properties[4] !== 0);
		this.dx = Math.cos(this.inst.angle) * speed;
		this.dy = Math.sin(this.inst.angle) * speed;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		this.lastKnownAngle = this.inst.angle;
		this.travelled = 0;
		this.enabled = (this.properties[5] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"acc": this.acc,
			"g": this.g,
			"dx": this.dx,
			"dy": this.dy,
			"lx": this.lastx,
			"ly": this.lasty,
			"lka": this.lastKnownAngle,
			"t": this.travelled,
			"e": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.acc = o["acc"];
		this.g = o["g"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.lastx = o["lx"];
		this.lasty = o["ly"];
		this.lastKnownAngle = o["lka"];
		this.travelled = o["t"];
		this.enabled = o["e"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s, a;
		var bounceSolid, bounceAngle;
		if (this.inst.angle !== this.lastKnownAngle)
		{
			if (this.setAngle)
			{
				s = cr.distanceTo(0, 0, this.dx, this.dy);
				this.dx = Math.cos(this.inst.angle) * s;
				this.dy = Math.sin(this.inst.angle) * s;
			}
			this.lastKnownAngle = this.inst.angle;
		}
		if (this.acc !== 0)
		{
			s = cr.distanceTo(0, 0, this.dx, this.dy);
			if (this.dx === 0 && this.dy === 0)
				a = this.inst.angle;
			else
				a = cr.angleTo(0, 0, this.dx, this.dy);
			s += this.acc * dt;
			if (s < 0)
				s = 0;
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
		}
		if (this.g !== 0)
			this.dy += this.g * dt;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		if (this.dx !== 0 || this.dy !== 0)
		{
			this.inst.x += this.dx * dt;
			this.inst.y += this.dy * dt;
			this.travelled += cr.distanceTo(0, 0, this.dx * dt, this.dy * dt)
			if (this.setAngle)
			{
				this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy);
				this.inst.set_bbox_changed();
				this.lastKnownAngle = this.inst.angle;
			}
			this.inst.set_bbox_changed();
			if (this.bounceOffSolid)
			{
				bounceSolid = this.runtime.testOverlapSolid(this.inst);
				if (bounceSolid)
				{
					this.runtime.registerCollision(this.inst, bounceSolid);
					s = cr.distanceTo(0, 0, this.dx, this.dy);
					bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty);
					this.dx = Math.cos(bounceAngle) * s;
					this.dy = Math.sin(bounceAngle) * s;
					this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
					this.inst.y += this.dy * dt;
					this.inst.set_bbox_changed();
					if (this.setAngle)
					{
						this.inst.angle = bounceAngle;
						this.lastKnownAngle = bounceAngle;
						this.inst.set_bbox_changed();
					}
					if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
						this.runtime.pushOutSolidNearest(this.inst, 100);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), cmp, s);
	};
	Cnds.prototype.CompareTravelled = function (cmp, d)
	{
		return cr.do_cmp(this.travelled, cmp, d);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		var a = cr.angleTo(0, 0, this.dx, this.dy);
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	Acts.prototype.SetGravity = function (g)
	{
		this.g = g;
	};
	Acts.prototype.SetAngleOfMotion = function (a)
	{
		a = cr.to_radians(a);
		var s = cr.distanceTo(0, 0, this.dx, this.dy)
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.Bounce = function (objtype)
	{
		if (!objtype)
			return;
		var otherinst = objtype.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		var bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, otherinst);
		this.dx = Math.cos(bounceAngle) * s;
		this.dy = Math.sin(bounceAngle) * s;
		this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
		this.inst.y += this.dy * dt;
		this.inst.set_bbox_changed();
		if (this.setAngle)
		{
			this.inst.angle = bounceAngle;
			this.lastKnownAngle = bounceAngle;
			this.inst.set_bbox_changed();
		}
		if (this.bounceOffSolid)
		{
			if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
				this.runtime.pushOutSolidNearest(this.inst, 100);
		}
		else
		{
			this.runtime.pushOut(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30), otherinst)
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		s = cr.round6dp(s);
		ret.set_float(s);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.AngleOfMotion = function (ret)
	{
		ret.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)));
	};
	Exps.prototype.DistanceTravelled = function (ret)
	{
		ret.set_float(this.travelled);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.DragnDrop = function(runtime)
{
	this.runtime = runtime;
	var self = this;
	if (!this.runtime.isDomFree)
	{
		jQuery(document).mousemove(
			function(info) {
				self.onMouseMove(info);
			}
		);
		jQuery(document).mousedown(
			function(info) {
				self.onMouseDown(info);
			}
		);
		jQuery(document).mouseup(
			function(info) {
				self.onMouseUp(info);
			}
		);
	}
	var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
	if (this.runtime.isDirectCanvas)
		elem = window["Canvas"];
	else if (this.runtime.isCocoonJs)
		elem = window;
	if (window.navigator["pointerEnabled"])
	{
		elem.addEventListener("pointerdown",
			function(info) {
				self.onPointerStart(info);
			},
			false
		);
		elem.addEventListener("pointermove",
			function(info) {
				self.onPointerMove(info);
			},
			false
		);
		elem.addEventListener("pointerup",
			function(info) {
				self.onPointerEnd(info);
			},
			false
		);
		elem.addEventListener("pointercancel",
			function(info) {
				self.onPointerEnd(info);
			},
			false
		);
	}
	else if (window.navigator["msPointerEnabled"])
	{
		elem.addEventListener("MSPointerDown",
			function(info) {
				self.onPointerStart(info);
			},
			false
		);
		elem.addEventListener("MSPointerMove",
			function(info) {
				self.onPointerMove(info);
			},
			false
		);
		elem.addEventListener("MSPointerUp",
			function(info) {
				self.onPointerEnd(info);
			},
			false
		);
		elem.addEventListener("MSPointerCancel",
			function(info) {
				self.onPointerEnd(info);
			},
			false
		);
	}
	else
	{
		elem.addEventListener("touchstart",
			function(info) {
				self.onTouchStart(info);
			},
			false
		);
		elem.addEventListener("touchmove",
			function(info) {
				self.onTouchMove(info);
			},
			false
		);
		elem.addEventListener("touchend",
			function(info) {
				self.onTouchEnd(info);
			},
			false
		);
		elem.addEventListener("touchcancel",
			function(info) {
				self.onTouchEnd(info);
			},
			false
		);
	}
};
(function ()
{
	var behaviorProto = cr.behaviors.DragnDrop.prototype;
	var dummyoffset = {left: 0, top: 0};
	function GetDragDropBehavior(inst)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i] instanceof behaviorProto.Instance)
				return inst.behavior_insts[i];
		}
		return null;
	};
	behaviorProto.onMouseDown = function (info)
	{
		if (info.which !== 1)
			return;		// not left mouse button
		this.onInputDown("leftmouse", info.pageX, info.pageY);
	};
	behaviorProto.onMouseMove = function (info)
	{
		if (info.which !== 1)
			return;		// not left mouse button
		this.onInputMove("leftmouse", info.pageX, info.pageY);
	};
	behaviorProto.onMouseUp = function (info)
	{
		if (info.which !== 1)
			return;		// not left mouse button
		this.onInputUp("leftmouse");
	};
	behaviorProto.onTouchStart = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var i, len, t, id;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			id = t.identifier;
			this.onInputDown(id ? id.toString() : "<none>", t.pageX, t.pageY);
		}
	};
	behaviorProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var i, len, t, id;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			id = t.identifier;
			this.onInputMove(id ? id.toString() : "<none>", t.pageX, t.pageY);
		}
	};
	behaviorProto.onTouchEnd = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var i, len, t, id;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			id = t.identifier;
			this.onInputUp(id ? id.toString() : "<none>");
		}
	};
	behaviorProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		this.onInputDown(info["pointerId"].toString(), info.pageX, info.pageY);
	};
	behaviorProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		this.onInputMove(info["pointerId"].toString(), info.pageX, info.pageY);
	};
	behaviorProto.onPointerEnd = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		this.onInputUp(info["pointerId"].toString());
	};
	behaviorProto.onInputDown = function (src, pageX, pageY)
	{
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var x = pageX - offset.left;
		var y = pageY - offset.top;
		var lx, ly, topx, topy;
		var arr = this.my_instances.valuesRef();
		var i, len, b, inst, topmost = null;
		for (i = 0, len = arr.length; i < len; i++)
		{
			inst = arr[i];
			b = GetDragDropBehavior(inst);
			if (!b.enabled || b.dragging)
				continue;		// don't consider disabled or already-dragging instances
			lx = inst.layer.canvasToLayer(x, y, true);
			ly = inst.layer.canvasToLayer(x, y, false);
			inst.update_bbox();
			if (!inst.contains_pt(lx, ly))
				continue;		// don't consider instances not over this point
			if (!topmost)
			{
				topmost = inst;
				topx = lx;
				topy = ly;
				continue;
			}
			if (inst.layer.index > topmost.layer.index)
			{
				topmost = inst;
				topx = lx;
				topy = ly;
				continue;
			}
			if (inst.layer.index === topmost.layer.index && inst.get_zindex() > topmost.get_zindex())
			{
				topmost = inst;
				topx = lx;
				topy = ly;
				continue;
			}
		}
		if (topmost)
			GetDragDropBehavior(topmost).onDown(src, topx, topy);
	};
	behaviorProto.onInputMove = function (src, pageX, pageY)
	{
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var x = pageX - offset.left;
		var y = pageY - offset.top;
		var lx, ly;
		var arr = this.my_instances.valuesRef();
		var i, len, b, inst;
		for (i = 0, len = arr.length; i < len; i++)
		{
			inst = arr[i];
			b = GetDragDropBehavior(inst);
			if (!b.enabled || !b.dragging || (b.dragging && b.dragsource !== src))
				continue;		// don't consider disabled, not-dragging, or dragging by other sources
			lx = inst.layer.canvasToLayer(x, y, true);
			ly = inst.layer.canvasToLayer(x, y, false);
			b.onMove(lx, ly);
		}
	};
	behaviorProto.onInputUp = function (src)
	{
		var arr = this.my_instances.valuesRef();
		var i, len, b, inst;
		for (i = 0, len = arr.length; i < len; i++)
		{
			inst = arr[i];
			b = GetDragDropBehavior(inst);
			if (b.dragging && b.dragsource === src)
				b.onUp();
		}
	};
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.dragging = false;
		this.dx = 0;
		this.dy = 0;
		this.dragsource = "<none>";
		this.axes = this.properties[0];
		this.enabled = (this.properties[1] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return { "enabled": this.enabled };
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.enabled = o["enabled"];
		this.dragging = false;
	};
	behinstProto.onDown = function(src, x, y)
	{
		this.dx = x - this.inst.x;
		this.dy = y - this.inst.y;
		this.dragging = true;
		this.dragsource = src;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.behaviors.DragnDrop.prototype.cnds.OnDragStart, this.inst);
		this.runtime.isInUserInputEvent = false;
	};
	behinstProto.onMove = function(x, y)
	{
		var newx = x - this.dx;
		var newy = y - this.dy;
		if (this.axes === 0)		// both
		{
			if (this.inst.x !== newx || this.inst.y !== newy)
			{
				this.inst.x = newx;
				this.inst.y = newy;
				this.inst.set_bbox_changed();
			}
		}
		else if (this.axes === 1)	// horizontal
		{
			if (this.inst.x !== newx)
			{
				this.inst.x = newx;
				this.inst.set_bbox_changed();
			}
		}
		else if (this.axes === 2)	// vertical
		{
			if (this.inst.y !== newy)
			{
				this.inst.y = newy;
				this.inst.set_bbox_changed();
			}
		}
	};
	behinstProto.onUp = function()
	{
		this.dragging = false;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.behaviors.DragnDrop.prototype.cnds.OnDrop, this.inst);
		this.runtime.isInUserInputEvent = false;
	};
	behinstProto.tick = function ()
	{
	};
	function Cnds() {};
	Cnds.prototype.IsDragging = function ()
	{
		return this.dragging;
	};
	Cnds.prototype.OnDragStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnDrop = function ()
	{
		return true;
	};
	Cnds.prototype.IsEnabled = function ()
	{
		return !!this.enabled;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (s)
	{
		this.enabled = (s !== 0);
		if (!this.enabled)
			this.dragging = false;
	};
	Acts.prototype.Drop = function ()
	{
		if (this.dragging)
			this.onUp();
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Pin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Pin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.pinObject = null;
		this.pinObjectUid = -1;		// for loading
		this.pinAngle = 0;
		this.pinDist = 0;
		this.myStartAngle = 0;
		this.theirStartAngle = 0;
		this.lastKnownAngle = 0;
		this.mode = 0;				// 0 = position & angle; 1 = position; 2 = angle; 3 = rope; 4 = bar
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = (function(inst) {
													self.onInstanceDestroyed(inst);
												});
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"uid": this.pinObject ? this.pinObject.uid : -1,
			"pa": this.pinAngle,
			"pd": this.pinDist,
			"msa": this.myStartAngle,
			"tsa": this.theirStartAngle,
			"lka": this.lastKnownAngle,
			"m": this.mode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.pinObjectUid = o["uid"];		// wait until afterLoad to look up
		this.pinAngle = o["pa"];
		this.pinDist = o["pd"];
		this.myStartAngle = o["msa"];
		this.theirStartAngle = o["tsa"];
		this.lastKnownAngle = o["lka"];
		this.mode = o["m"];
	};
	behinstProto.afterLoad = function ()
	{
		if (this.pinObjectUid === -1)
			this.pinObject = null;
		else
		{
			this.pinObject = this.runtime.getObjectByUID(this.pinObjectUid);
;
		}
		this.pinObjectUid = -1;
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.pinObject == inst)
			this.pinObject = null;
	};
	behinstProto.onDestroy = function()
	{
		this.pinObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.pinObject)
			return;
		if (this.lastKnownAngle !== this.inst.angle)
			this.myStartAngle = cr.clamp_angle(this.myStartAngle + (this.inst.angle - this.lastKnownAngle));
		var newx = this.inst.x;
		var newy = this.inst.y;
		if (this.mode === 3 || this.mode === 4)		// rope mode or bar mode
		{
			var dist = cr.distanceTo(this.inst.x, this.inst.y, this.pinObject.x, this.pinObject.y);
			if ((dist > this.pinDist) || (this.mode === 4 && dist < this.pinDist))
			{
				var a = cr.angleTo(this.pinObject.x, this.pinObject.y, this.inst.x, this.inst.y);
				newx = this.pinObject.x + Math.cos(a) * this.pinDist;
				newy = this.pinObject.y + Math.sin(a) * this.pinDist;
			}
		}
		else
		{
			newx = this.pinObject.x + Math.cos(this.pinObject.angle + this.pinAngle) * this.pinDist;
			newy = this.pinObject.y + Math.sin(this.pinObject.angle + this.pinAngle) * this.pinDist;
		}
		var newangle = cr.clamp_angle(this.myStartAngle + (this.pinObject.angle - this.theirStartAngle));
		this.lastKnownAngle = newangle;
		if ((this.mode === 0 || this.mode === 1 || this.mode === 3 || this.mode === 4)
			&& (this.inst.x !== newx || this.inst.y !== newy))
		{
			this.inst.x = newx;
			this.inst.y = newy;
			this.inst.set_bbox_changed();
		}
		if ((this.mode === 0 || this.mode === 2) && (this.inst.angle !== newangle))
		{
			this.inst.angle = newangle;
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	Cnds.prototype.IsPinned = function ()
	{
		return !!this.pinObject;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Pin = function (obj, mode_)
	{
		if (!obj)
			return;
		var otherinst = obj.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		this.pinObject = otherinst;
		this.pinAngle = cr.angleTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y) - otherinst.angle;
		this.pinDist = cr.distanceTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y);
		this.myStartAngle = this.inst.angle;
		this.lastKnownAngle = this.inst.angle;
		this.theirStartAngle = otherinst.angle;
		this.mode = mode_;
	};
	Acts.prototype.Unpin = function ()
	{
		this.pinObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.PinnedUID = function (ret)
	{
		ret.set_int(this.pinObject ? this.pinObject.uid : -1);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Rotate = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Rotate.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.speed = cr.to_radians(this.properties[0]);
		this.acc = cr.to_radians(this.properties[1]);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"speed": this.speed,
			"acc": this.acc
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.speed = o["speed"];
		this.acc = o["acc"];
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		if (dt === 0)
			return;
		if (this.acc !== 0)
			this.speed += this.acc * dt;
		if (this.speed !== 0)
		{
			this.inst.angle = cr.clamp_angle(this.inst.angle + this.speed * dt);
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		this.speed = cr.to_radians(s);
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = cr.to_radians(a);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(cr.to_degrees(this.speed));
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(cr.to_degrees(this.acc));
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Sin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Sin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.i = 0;		// period offset (radians)
	};
	var behinstProto = behaviorProto.Instance.prototype;
	var _2pi = 2 * Math.PI;
	var _pi_2 = Math.PI / 2;
	var _3pi_2 = (3 * Math.PI) / 2;
	behinstProto.onCreate = function()
	{
		this.active = (this.properties[0] === 1);
		this.movement = this.properties[1]; // 0=Horizontal|1=Vertical|2=Size|3=Width|4=Height|5=Angle|6=Opacity|7=Value only
		this.wave = this.properties[2];		// 0=Sine|1=Triangle|2=Sawtooth|3=Reverse sawtooth|4=Square
		this.period = this.properties[3];
		this.period += Math.random() * this.properties[4];								// period random
		if (this.period === 0)
			this.i = 0;
		else
		{
			this.i = (this.properties[5] / this.period) * _2pi;								// period offset
			this.i += ((Math.random() * this.properties[6]) / this.period) * _2pi;			// period offset random
		}
		this.mag = this.properties[7];													// magnitude
		this.mag += Math.random() * this.properties[8];									// magnitude random
		this.initialValue = 0;
		this.initialValue2 = 0;
		this.ratio = 0;
		this.init();
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"i": this.i,
			"a": this.active,
			"mv": this.movement,
			"w": this.wave,
			"p": this.period,
			"mag": this.mag,
			"iv": this.initialValue,
			"iv2": this.initialValue2,
			"r": this.ratio,
			"lkv": this.lastKnownValue,
			"lkv2": this.lastKnownValue2
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.i = o["i"];
		this.active = o["a"];
		this.movement = o["mv"];
		this.wave = o["w"];
		this.period = o["p"];
		this.mag = o["mag"];
		this.initialValue = o["iv"];
		this.initialValue2 = o["iv2"] || 0;
		this.ratio = o["r"];
		this.lastKnownValue = o["lkv"];
		this.lastKnownValue2 = o["lkv2"] || 0;
	};
	behinstProto.init = function ()
	{
		switch (this.movement) {
		case 0:		// horizontal
			this.initialValue = this.inst.x;
			break;
		case 1:		// vertical
			this.initialValue = this.inst.y;
			break;
		case 2:		// size
			this.initialValue = this.inst.width;
			this.ratio = this.inst.height / this.inst.width;
			break;
		case 3:		// width
			this.initialValue = this.inst.width;
			break;
		case 4:		// height
			this.initialValue = this.inst.height;
			break;
		case 5:		// angle
			this.initialValue = this.inst.angle;
			this.mag = cr.to_radians(this.mag);		// convert magnitude from degrees to radians
			break;
		case 6:		// opacity
			this.initialValue = this.inst.opacity;
			break;
		case 7:
			this.initialValue = 0;
			break;
		case 8:		// forwards/backwards
			this.initialValue = this.inst.x;
			this.initialValue2 = this.inst.y;
			break;
		default:
;
		}
		this.lastKnownValue = this.initialValue;
		this.lastKnownValue2 = this.initialValue2;
	};
	behinstProto.waveFunc = function (x)
	{
		x = x % _2pi;
		switch (this.wave) {
		case 0:		// sine
			return Math.sin(x);
		case 1:		// triangle
			if (x <= _pi_2)
				return x / _pi_2;
			else if (x <= _3pi_2)
				return 1 - (2 * (x - _pi_2) / Math.PI);
			else
				return (x - _3pi_2) / _pi_2 - 1;
		case 2:		// sawtooth
			return 2 * x / _2pi - 1;
		case 3:		// reverse sawtooth
			return -2 * x / _2pi + 1;
		case 4:		// square
			return x < Math.PI ? -1 : 1;
		};
		return 0;
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		if (!this.active || dt === 0)
			return;
		if (this.period === 0)
			this.i = 0;
		else
		{
			this.i += (dt / this.period) * _2pi;
			this.i = this.i % _2pi;
		}
		switch (this.movement) {
		case 0:		// horizontal
			if (this.inst.x !== this.lastKnownValue)
				this.initialValue += this.inst.x - this.lastKnownValue;
			this.inst.x = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.x;
			break;
		case 1:		// vertical
			if (this.inst.y !== this.lastKnownValue)
				this.initialValue += this.inst.y - this.lastKnownValue;
			this.inst.y = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.y;
			break;
		case 2:		// size
			this.inst.width = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.inst.height = this.inst.width * this.ratio;
			break;
		case 3:		// width
			this.inst.width = this.initialValue + this.waveFunc(this.i) * this.mag;
			break;
		case 4:		// height
			this.inst.height = this.initialValue + this.waveFunc(this.i) * this.mag;
			break;
		case 5:		// angle
			if (this.inst.angle !== this.lastKnownValue)
				this.initialValue = cr.clamp_angle(this.initialValue + (this.inst.angle - this.lastKnownValue));
			this.inst.angle = cr.clamp_angle(this.initialValue + this.waveFunc(this.i) * this.mag);
			this.lastKnownValue = this.inst.angle;
			break;
		case 6:		// opacity
			this.inst.opacity = this.initialValue + (this.waveFunc(this.i) * this.mag) / 100;
			if (this.inst.opacity < 0)
				this.inst.opacity = 0;
			else if (this.inst.opacity > 1)
				this.inst.opacity = 1;
			break;
		case 8:		// forwards/backwards
			if (this.inst.x !== this.lastKnownValue)
				this.initialValue += this.inst.x - this.lastKnownValue;
			if (this.inst.y !== this.lastKnownValue2)
				this.initialValue2 += this.inst.y - this.lastKnownValue2;
			this.inst.x = this.initialValue + Math.cos(this.inst.angle) * this.waveFunc(this.i) * this.mag;
			this.inst.y = this.initialValue2 + Math.sin(this.inst.angle) * this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.x;
			this.lastKnownValue2 = this.inst.y;
			break;
		}
		this.inst.set_bbox_changed();
	};
	behinstProto.onSpriteFrameChanged = function (prev_frame, next_frame)
	{
		switch (this.movement) {
		case 2:	// size
			this.initialValue *= (next_frame.width / prev_frame.width);
			this.ratio = next_frame.height / next_frame.width;
			break;
		case 3:	// width
			this.initialValue *= (next_frame.width / prev_frame.width);
			break;
		case 4:	// height
			this.initialValue *= (next_frame.height / prev_frame.height);
			break;
		}
	};
	function Cnds() {};
	Cnds.prototype.IsActive = function ()
	{
		return this.active;
	};
	Cnds.prototype.CompareMovement = function (m)
	{
		return this.movement === m;
	};
	Cnds.prototype.ComparePeriod = function (cmp, v)
	{
		return cr.do_cmp(this.period, cmp, v);
	};
	Cnds.prototype.CompareMagnitude = function (cmp, v)
	{
		if (this.movement === 5)
			return cr.do_cmp(this.mag, cmp, cr.to_radians(v));
		else
			return cr.do_cmp(this.mag, cmp, v);
	};
	Cnds.prototype.CompareWave = function (w)
	{
		return this.wave === w;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetActive = function (a)
	{
		this.active = (a === 1);
	};
	Acts.prototype.SetPeriod = function (x)
	{
		this.period = x;
	};
	Acts.prototype.SetMagnitude = function (x)
	{
		this.mag = x;
		if (this.movement === 5)	// angle
			this.mag = cr.to_radians(this.mag);
	};
	Acts.prototype.SetMovement = function (m)
	{
		if (this.movement === 5)
			this.mag = cr.to_degrees(this.mag);
		this.movement = m;
		this.init();
	};
	Acts.prototype.SetWave = function (w)
	{
		this.wave = w;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.CyclePosition = function (ret)
	{
		ret.set_float(this.i / _2pi);
	};
	Exps.prototype.Period = function (ret)
	{
		ret.set_float(this.period);
	};
	Exps.prototype.Magnitude = function (ret)
	{
		if (this.movement === 5)	// angle
			ret.set_float(cr.to_degrees(this.mag));
		else
			ret.set_float(this.mag);
	};
	Exps.prototype.Value = function (ret)
	{
		ret.set_float(this.waveFunc(this.i) * this.mag);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.destroy = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.destroy.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
	};
	behinstProto.tick = function ()
	{
		this.inst.update_bbox();
		var bbox = this.inst.bbox;
		var layout = this.inst.layer.layout;
		if (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height)
			this.runtime.DestroyInstance(this.inst);
	};
}());
;
;
cr.behaviors.wrap = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.wrap.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.mode = this.properties[0];		// 0 = wrap to layout, 1 = wrap to viewport
	};
	behinstProto.tick = function ()
	{
		var inst = this.inst;
		inst.update_bbox();
		var bbox = inst.bbox;
		var layer = inst.layer;
		var layout = layer.layout;
		var lbound = 0, rbound = 0, tbound = 0, bbound = 0;
		if (this.mode === 0)
		{
			rbound = layout.width;
			bbound = layout.height;
		}
		else
		{
			lbound = layer.viewLeft;
			rbound = layer.viewRight;
			tbound = layer.viewTop;
			bbound = layer.viewBottom;
		}
		if (bbox.right < lbound)
		{
			inst.x = (rbound - 1) + (inst.x - bbox.left);
			inst.set_bbox_changed();
		}
		else if (bbox.left > rbound)
		{
			inst.x = (lbound + 1) - (bbox.right - inst.x);
			inst.set_bbox_changed();
		}
		else if (bbox.bottom < tbound)
		{
			inst.y = (bbound - 1) + (inst.y - bbox.top);
			inst.set_bbox_changed();
		}
		else if (bbox.top > bbound)
		{
			inst.y = (tbound + 1) - (bbox.bottom - inst.y);
			inst.set_bbox_changed();
		}
	};
}());
cr.getProjectModel = function() { return [
	null,
	"title",
	[
	[
		cr.plugins_.AJAX,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.cjs,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Arr,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Dictionary,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Browser,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Function,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.WebStorage,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3,
		[],
		null
		,[0,0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t1",
		cr.plugins_.Browser,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2,
		[],
		null
		,[]
	]
,	[
		"t2",
		cr.plugins_.WebStorage,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		0,
		[],
		null
		,[]
	]
,	[
		"t3",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1,
		[],
		null
		,[0]
	]
,	[
		"t4",
		cr.plugins_.Function,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		11088,
		[],
		null
		,[]
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			11023,
			[
				["images/denthan-sheet0.png", 20739, 0, 0, 260, 105, 1, 0.5, 0.5047619342803955,[],[-0.303846001625061,-0.01904794573783875,0,-0.2952379286289215,0.39615398645401,-0.2476189434528351,0.4807689785957336,-0.009523928165435791,0.3999999761581421,0.247619092464447,0,0.4000000357627869,-0.442307710647583,0.3523810505867004,-0.3846150040626526,-0.009523928165435791],0]
			]
			]
		],
		[
		],
		false,
		false,
		11022,
		[],
		null
	]
,	[
		"t6",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			true,
			1,
			0,
			false,
			11017,
			[
				["images/laod-sheet0.png", 41751, 1, 1, 228, 41, 1, 0.5, 0.5121951103210449,[],[-0.4649122953414917,-0.3170731067657471,0,-0.2682931125164032,0.2982460260391235,-0.02439010143280029,0,0.3414638638496399,-0.4736841917037964,0.3414638638496399,-0.4956140518188477,-0.02439010143280029],0],
				["images/laod-sheet0.png", 41751, 1, 43, 228, 41, 1, 0.5, 0.5121951103210449,[],[-0.4649122953414917,-0.3170731067657471,0,-0.2682931125164032,0.2982460260391235,-0.02439010143280029,0,0.3414638638496399,-0.4736841917037964,0.3414638638496399,-0.4956140518188477,-0.02439010143280029],0],
				["images/laod-sheet0.png", 41751, 1, 85, 228, 41, 1, 0.5, 0.5121951103210449,[],[-0.4649122953414917,-0.3170731067657471,0,-0.2682931125164032,0.2982460260391235,-0.02439010143280029,0,0.3414638638496399,-0.4736841917037964,0.3414638638496399,-0.4956140518188477,-0.02439010143280029],0],
				["images/laod-sheet0.png", 41751, 1, 127, 228, 41, 1, 0.5, 0.5121951103210449,[],[-0.4649122953414917,-0.3170731067657471,0,-0.2682931125164032,0.2982460260391235,-0.02439010143280029,0.4649119973182678,0.2926828861236572,0,0.3414638638496399,-0.4736841917037964,0.3414638638496399,-0.4956140518188477,-0.02439010143280029],0]
			]
			]
		],
		[
		],
		false,
		false,
		11016,
		[],
		null
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10944,
			[
				["images/may-sheet0.png", 74161, 0, 0, 2048, 284, 1, 0.5, 0.5,[],[-0.45849609375,-0.2007040083408356,0,-0.3661969900131226,0.4575200080871582,-0.1936619877815247,0.5,0,0.4755859971046448,0.3239439725875855,0,0.4507039785385132,-0.4746094048023224,0.3169010281562805,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10943,
		[],
		null
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			11013,
			[
				["images/may3-sheet0.png", 26889, 0, 0, 282, 317, 1, 0.5, 0.5015772581100464,[],[-0.3865250051021576,-0.4006312489509583,0,-0.4794952571392059,0.3191490173339844,-0.3406942486763001,0.4787229895591736,-0.003154247999191284,0.2340430021286011,0.2618297338485718,0,0.3280757665634155,-0.2801420092582703,0.3028387427330017,-0.478723406791687,-0.003154247999191284],0]
			]
			]
		],
		[
		],
		false,
		false,
		11012,
		[],
		null
	]
,	[
		"t9",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10946,
			[
				["images/may2-sheet0.png", 86777, 0, 0, 1051, 327, 1, 0.5004757642745972, 0.5015290379524231,[],[-0.3996197581291199,-0.1773700416088104,-0.0009517669677734375,-0.379205048084259,0.4053282141685486,-0.198777049779892,0.4909612536430359,-0.003058046102523804,0.4443382620811462,0.3211009502410889,-0.0009517669677734375,0.3455659747123718,-0.4357754588127136,0.2905199527740479],0]
			]
			]
		],
		[
		],
		false,
		false,
		10945,
		[],
		null
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			2,
			true,
			1,
			0,
			false,
			11021,
			[
				["images/meo2-sheet0.png", 238260, 1, 1, 320, 550, 1, 0.5, 0.5,[],[-0.324999988079071,-0.3981820046901703,0,-0.4290909171104431,0.34375,-0.4090909063816071,0.231249988079071,0,0.09687501192092896,0.2654550075531006,0,0.4145449995994568,-0.324999988079071,0.3981819748878479,-0.190625011920929,0],0],
				["images/meo2-sheet0.png", 238260, 322, 1, 320, 550, 1, 0.5, 0.5,[],[-0.3499999940395355,-0.4127272963523865,0,-0.4363636076450348,0.331250011920929,-0.4018182158470154,0.2281249761581421,0,0.078125,0.2545449733734131,0,0.4218180179595947,-0.34375,0.4090909957885742,-0.1968750059604645,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		11020,
		[],
		null
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			true,
			1,
			0,
			false,
			11019,
			[
				["images/meo-sheet0.png", 272002, 1, 432, 533, 420, 1, 0.5009380578994751, 0.5,[],[-0.1181990504264832,-0.01428601145744324,-0.00187605619430542,-0.3666670024394989,0.4765479564666748,0,0.3058159351348877,0.2547619938850403,-0.00187605619430542,0.380952000617981,-0.4371481537818909,0.419048011302948,-0.1200750470161438,0],0],
				["images/meo-sheet0.png", 272002, 1, 1, 550, 430, 1, 0.5, 0.5,[],[-0.1181820034980774,-0.01162800192832947,0,-0.3581399917602539,0.2345449924468994,-0.1604650020599365,0.4654549956321716,0,0.3018180131912231,0.2465119957923889,0,0.3697670102119446,-0.4309090971946716,0.411628007888794,-0.1181820034980774,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			11026
		]
		],
		false,
		false,
		11018,
		[],
		null
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"nut2",
			5,
			false,
			1,
			0,
			false,
			10933,
			[
				["images/play-sheet0.png", 151886, 1, 1, 208, 187, 1, 0.5, 0.5026738047599793,[],[-0.2692310214042664,-0.2459897994995117,0,-0.3475937843322754,0.2259619832038879,-0.1978608071804047,0.3605769872665405,-0.00534781813621521,0.2403849959373474,0.2085561752319336,0,0.3582891821861267,-0.2740380167961121,0.245989203453064,-0.3605769872665405,-0.00534781813621521],0]
			]
			]
,			[
			"nut1",
			5,
			false,
			1,
			0,
			false,
			10931,
			[
				["images/play-sheet0.png", 151886, 210, 189, 195, 178, 1, 0.5025641322135925, 0.5,[],[-0.2717951536178589,-0.2433159947395325,-0.002564132213592529,-0.3449199795722961,0.2233978509902954,-0.1951870024204254,0.358012855052948,-0.002674013376235962,0.2378208637237549,0.2112299799919128,-0.002564132213592529,0.360962986946106,-0.2766021490097046,0.2486630082130432,-0.3631411194801331,-0.002674013376235962],0],
				["images/play-sheet0.png", 151886, 210, 1, 208, 187, 1, 0.5, 0.5026738047599793,[],[-0.2692310214042664,-0.2459897994995117,0,-0.3475937843322754,0.2259619832038879,-0.1978608071804047,0.3605769872665405,-0.00534781813621521,0.2403849959373474,0.2085561752319336,0,0.3582891821861267,-0.2740380167961121,0.245989203453064,-0.3605769872665405,-0.00534781813621521],0],
				["images/play-sheet1.png", 52126, 0, 0, 195, 178, 1, 0.5025641322135925, 0.5,[],[-0.2717951536178589,-0.2433159947395325,-0.002564132213592529,-0.3449199795722961,0.2233978509902954,-0.1951870024204254,0.358012855052948,-0.002674013376235962,0.2378208637237549,0.2112299799919128,-0.002564132213592529,0.360962986946106,-0.2766021490097046,0.2486630082130432,-0.3631411194801331,-0.002674013376235962],0],
				["images/play-sheet0.png", 151886, 1, 189, 208, 187, 1, 0.5, 0.5026738047599793,[],[-0.2692310214042664,-0.2459897994995117,0,-0.3475937843322754,0.2259619832038879,-0.1978608071804047,0.3605769872665405,-0.00534781813621521,0.2403849959373474,0.2085561752319336,0,0.3582891821861267,-0.2740380167961121,0.245989203453064,-0.3605769872665405,-0.00534781813621521],0]
			]
			]
		],
		[
		],
		false,
		false,
		10930,
		[],
		null
	]
,	[
		"t13",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			11172,
			[
				["images/sao2-sheet0.png", 2150, 0, 0, 66, 66, 1, 0.5, 0.5,[],[-0.03030300140380859,-0.03030300140380859,0,-0.04545500874519348,0.03030300140380859,-0.03030300140380859,0.06060600280761719,0,0.06060600280761719,0.06060600280761719,0,0.1212120056152344,-0.07575801014900208,0.07575798034667969,-0.07575801014900208,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			11183
		]
		],
		false,
		false,
		11171,
		[],
		null
	]
,	[
		"t14",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			11015,
			[
				["images/sao2-sheet0.png", 2150, 0, 0, 66, 66, 1, 0.5, 0.5,[],[-0.03030300140380859,-0.03030300140380859,0,-0.04545500874519348,0.03030300140380859,-0.03030300140380859,0.06060600280761719,0,0.06060600280761719,0.06060600280761719,0,0.1212120056152344,-0.07575801014900208,0.07575798034667969,-0.07575801014900208,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		11014,
		[],
		null
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10948,
			[
				["images/index_a-sheet0.png", 26595, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4393939971923828,0.4393939971923828,0,0.5,-0.4393939077854157,0.4393939971923828,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10947,
		[],
		null
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10954,
			[
				["images/sprite4-sheet0.png", 24294, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4393939971923828,0.4393939971923828,0,0.5,-0.4393939077854157,0.4393939971923828,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10953,
		[],
		null
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10950,
			[
				["images/sprite3-sheet0.png", 24277, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4393939971923828,0.4393939971923828,0,0.5,-0.4393939077854157,0.4393939971923828,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10949,
		[],
		null
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10958,
			[
				["images/sprite6-sheet0.png", 20508, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4469699859619141,0.4469699859619141,0,0.5,-0.4469696879386902,0.4469699859619141,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10957,
		[],
		null
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10956,
			[
				["images/sprite5-sheet0.png", 26252, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4393939971923828,0.4393939971923828,0,0.5,-0.4393939077854157,0.4393939971923828,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10955,
		[],
		null
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10962,
			[
				["images/sprite8-sheet0.png", 23614, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4469699859619141,0.4469699859619141,0,0.5,-0.4469696879386902,0.4469699859619141,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10961,
		[],
		null
	]
,	[
		"t21",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10960,
			[
				["images/sprite7-sheet0.png", 29645, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4393939971923828,0.4393939971923828,0,0.5,-0.4393939077854157,0.4393939971923828,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10959,
		[],
		null
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10939,
			[
				["images/start-sheet0.png", 103312, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		10938,
		[],
		null
	]
,	[
		"t23",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			10964,
			[
				["images/sprite9-sheet0.png", 22626, 0, 0, 110, 110, 1, 0.5, 0.5,[],[-0.4393939077854157,-0.4393939077854157,0,-0.4924242496490479,0.4393939971923828,-0.4393939077854157,0.5,0,0.4469699859619141,0.4469699859619141,0,0.5,-0.4469696879386902,0.4469699859619141,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		10963,
		[],
		null
	]
,	[
		"t24",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"abc_start",
			5,
			false,
			1,
			0,
			false,
			7979950035075459,
			[
				["images/abc-sheet0.png", 48448, 0, 0, 185, 185, 1, 0.5027027130126953, 0.5027027130126953,[],[-0.4421558082103729,-0.4421558082103729,-0.002702713012695313,-0.4968433380126953,0.4347972273826599,-0.4402027130126953,0.4914382696151733,-0.002702713012695313,0.4367502927780151,0.4367502927780151,-0.002702713012695313,0.4972972869873047,-0.4460621178150177,0.440656304359436,-0.5027027130126953,-0.002702713012695313],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7142895919534453
		]
		],
		false,
		false,
		6036360358258148,
		[],
		null
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			427750977050325,
			[
				["images/earth2-sheet0.png", 26884, 0, 0, 216, 195, 1, 0.5, 0.5025641322135925,[],[-0.2592589855194092,-0.2358971238136292,0,-0.3641021251678467,0.2407410144805908,-0.2153851389884949,0.4259259700775147,-0.005128145217895508,0.2222219705581665,0.1897438764572144,0,0.3179488778114319,-0.2407410144805908,0.2102568745613098,-0.4259259104728699,-0.005128145217895508],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			5679866619026272
		]
		],
		false,
		false,
		6366820201795087,
		[],
		null
	]
,	[
		"t26",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4863759284850305,
			[
				["images/earth3-sheet0.png", 24084, 0, 0, 216, 195, 1, 0.5, 0.5025641322135925,[],[-0.25,-0.225641131401062,0,-0.3641021251678467,0.2175930142402649,-0.1897431313991547,0.2361109852790833,-0.005128145217895508,0.1666669845581055,0.128204882144928,0,0.220512866973877,-0.1898150146007538,0.1538458466529846,-0.2824069857597351,-0.005128145217895508],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7223357712793679
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			7516759606444212
		]
		],
		false,
		false,
		9173862364152242,
		[],
		null
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3208875969974582,
			[
				["images/hanhtinh-sheet0.png", 16719, 0, 0, 138, 140, 1, 0.5, 0.4928571283817291,[],[-0.3623189926147461,-0.3071431219577789,-0.0072459876537323,-0.4785714149475098,0.355072021484375,-0.3071431219577789,0.4565219879150391,-0.007143139839172363,0.3478260040283203,0.2857138812541962,-0.0072459876537323,0.4571428596973419,-0.355072021484375,0.2857138812541962,-0.4637680947780609,-0.007143139839172363],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			3325040316057997
		]
		],
		false,
		false,
		2036991256670086,
		[],
		null
	]
,	[
		"t28",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			3,
			true,
			1,
			0,
			false,
			9944384814329813,
			[
				["images/khoi-sheet0.png", 3476, 137, 1, 115, 74, 1, 0.5043478012084961, 0.5,[],[-0.3043478131294251,-0.1891889870166779,-0.03478279709815979,0,-0.3304347991943359,0.2297300100326538,-0.3913047909736633,0],0],
				["images/khoi-sheet0.png", 3476, 1, 1, 135, 142, 1, 0.5037037134170532, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9071728270474491
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			1335010297478257
		]
		],
		false,
		false,
		7974013032650287,
		[],
		null
	]
,	[
		"t29",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3011418844207757,
			[
				["images/maybay2-sheet0.png", 25531, 0, 0, 198, 146, 1, 0.4646464586257935, 0.3972602784633637,[],[-0.3232324719429016,-0.2328762859106064,0.01515153050422669,-0.1164382696151733,0.2727275490760803,-0.1164382696151733,0.4494945406913757,0.06164371967315674,0.3888885378837585,0.3972606956958771,0.01515153050422669,0.4999997317790985,-0.2272724658250809,0.2260276973247528,-0.414141446352005,0.06164371967315674],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			8820106974371046
		]
		],
		false,
		false,
		5403874313045859,
		[],
		null
	]
,	[
		"t30",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8061024336924997,
			[
				["images/maysau-sheet0.png", 14414, 0, 0, 176, 141, 1, 0.5, 0.5035461187362671,[],[-0.2443180084228516,-0.1843971312046051,0,-0.2553191184997559,0.1818180084228516,-0.1063831150531769,0.2784090042114258,-0.007092118263244629,0.3181819915771484,0.2695038914680481,0,0.3120568990707398,-0.2784090042114258,0.2198578715324402,-0.3295450210571289,-0.007092118263244629],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7810624899359736
		]
		],
		false,
		false,
		4240254413496606,
		[],
		null
	]
,	[
		"t31",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7824867411556811,
			[
				["images/maytruoc-sheet0.png", 7565, 0, 0, 108, 74, 1, 0.5370370149612427, 0.5540540814399719,[],[-0.3703700304031372,-0.3243240714073181,0,-0.4729726910591126,0.2962960004806519,-0.2162160873413086,0.3796289563179016,-5.960464477539063e-008,0.3055559992790222,0.2297289371490479,0,0.2837839126586914,-0.2962960004806519,0.2162159085273743,-0.4814809262752533,-5.960464477539063e-008],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			6439151494801257
		]
		],
		false,
		false,
		8143363443354707,
		[],
		null
	]
,	[
		"t32",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5366152402130983,
			[
				["images/saoto-sheet0.png", 4739, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			5339637537502033
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			7802763163486756
		]
		],
		false,
		false,
		6887354740166594,
		[],
		null
	]
,	[
		"t33",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			6,
			true,
			1,
			0,
			false,
			9561135336339095,
			[
				["images/oto-sheet0.png", 41322, 1, 1, 256, 156, 1, 0.5, 0.5,[],[0,-0.2884619832038879,0.28125,-0.1410259902477264,0.3554689884185791,0,0.3476560115814209,0.25,0,0.25,-0.2890619933605194,0.153846025466919,-0.2421869933605194,0],0],
				["images/oto-sheet0.png", 41322, 1, 158, 256, 156, 1, 0.5, 0.5,[],[0,-0.2884619832038879,0.28125,-0.1410259902477264,0.3554689884185791,0,0.3476560115814209,0.25,0,0.25,-0.2890619933605194,0.153846025466919,-0.2421869933605194,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9334749068403089,
		[],
		null
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5343843264585889,
			[
				["images/saotrang-sheet0.png", 2502, 0, 0, 67, 65, 1, 0.5074626803398132, 0.5076923370361328,[],[-0.07462668418884277,-0.06153833866119385,-0.01492568850517273,-0.1230773329734802,0.05970132350921631,-0.06153833866119385,0.0447763204574585,-0.01538434624671936,0.01492530107498169,-3.576278686523438e-007,-0.01492568850517273,0.03076964616775513,-0.04477569460868835,0.01538467407226563,-0.05970168113708496,-0.01538434624671936],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			4998946468831845
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			5739095412248116
		]
		],
		false,
		false,
		1701728988009371,
		[],
		null
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7684163957979134,
			[
				["images/sky_bg-sheet0.png", 5420, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2745969959028721,
		[],
		null
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3192662185097303,
			[
				["images/songsau-sheet0.png", 7368, 0, 0, 147, 41, 1, 0.5170068144798279, 0.5121951103210449,[],[-0.4557828307151794,-0.1951221227645874,-0.006803810596466065,-0.414633721113205,0.4285721778869629,-0.1219511032104492,0.4149661660194397,-0.1951221227645874,-0.006803810596466065,0.3414629101753235,-0.4829936027526856,-0.07317110896110535,-0.4625854194164276,-0.1951221227645874],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			8335730103104479
		]
		],
		false,
		false,
		3513339465548491,
		[],
		null
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9466188018888689,
			[
				["images/songtruoc-sheet0.png", 10344, 0, 0, 190, 36, 1, 0.4947368502616882, 0.5555555820465088,[],[-0.3157898485660553,-0.416666567325592,-0.005263864994049072,-0.3333335816860199,0.3105271458625794,-0.416666567325592,0.4736841320991516,0.08333241939544678,-0.005263864994049072,0.1666654348373413,-0.4842107594013214,0.1111094355583191],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			4786645060847921
		]
		],
		false,
		false,
		5412886388896808,
		[],
		null
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8287267525341152,
			[
				["images/sprite-sheet0.png", 10191, 0, 0, 196, 69, 1, 0.5, 0.3623188436031342,[],[0.02551001310348511,0.1884061396121979,-0.03061199188232422,0.1884061396121979,0.4642850160598755,1.490116119384766e-007,0.2091829776763916,0.4927531778812408,-0.005102992057800293,0.5507241487503052,-0.2142849862575531,0.4927531778812408,-0.4744898080825806,1.490116119384766e-007],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9214345280540108
		]
		],
		false,
		false,
		1773427901291272,
		[],
		null
	]
,	[
		"t39",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9478102675188944,
			[
				["images/sprite2-sheet0.png", 4438, 0, 0, 215, 200, 1, 0.5023255944252014, 0.5,[],[-0.1720925867557526,-0.1450000107288361,-0.00465160608291626,-0.1550000011920929,0.1627904176712036,-0.1399999856948853,-0.04186058044433594,-0.08000001311302185,-0.00465160608291626,-0.08500000834465027,0.04186040163040161,-0.08500000834465027],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			504177389323936
		]
		],
		false,
		false,
		379901114625539,
		[],
		null
	]
,	[
		"t40",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7948277073847308,
			[
				["images/thuyen-sheet0.png", 18162, 0, 0, 134, 140, 1, 0.5895522236824036, 0.5642856955528259,[],[-0.1268652379512787,0.00714331865310669,-0.007462203502655029,-0.4285717010498047,0.2761197686195374,-0.1428566873073578,0.3134327530860901,-0.007142722606658936,0.3507457971572876,0.2071433067321777,-0.007462203502655029,0.3928573131561279,-0.4477612376213074,0.29285728931427,-0.1268652379512787,-0.007142722606658936],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			1271299454732587
		]
		],
		false,
		false,
		3931160493593615,
		[],
		null
	]
,	[
		"t41",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9344231860304885,
			[
				["images/traidat-sheet0.png", 106161, 0, 0, 503, 503, 1, 0.5009940266609192, 0.5009940266609192,[],[-0.3399600386619568,-0.3399600386619568,-0.001988023519515991,-0.4791252315044403,0.3339959979057312,-0.3359840214252472,0.4652089476585388,-0.001988023519515991,0.326043963432312,0.326043963432312,-0.001988023519515991,0.4632209539413452,-0.3339960277080536,0.3320079445838928,-0.4751491248607636,-0.001988023519515991],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			2471764883444251
		]
		],
		false,
		false,
		1213390663284108,
		[],
		null
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8955482146826416,
			[
				["images/vetinh-sheet0.png", 23256, 0, 0, 193, 186, 1, 0.5025906562805176, 0.5,[],[-0.3989636600017548,-0.3924729824066162,-0.005181670188903809,-0.09139800071716309,0.1450773477554321,-0.1344090104103088,0.2279793620109558,0,0.3730573654174805,0.3709679841995239,-0.005181670188903809,0.1935480237007141,-0.2642486691474915,0.2526879906654358,-0.2279796600341797,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			2766514945346889
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			518013749718698
		]
,		[
			"Sine3",
			cr.behaviors.Sin,
			1950235836452696
		]
		],
		false,
		false,
		3170596185108426,
		[],
		null
	]
,	[
		"t43",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			128142764336081,
			[
				["images/bg_title-sheet0.png", 777610, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		9301020672936298,
		[],
		null
	]
,	[
		"t44",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2573125538516475,
			[
				["images/xecoplay-sheet0.png", 51832, 0, 0, 316, 234, 1, 0.5, 0.5,[],[-0.2563289999961853,-0.1709400117397308,0,-0.4572649896144867,0.3955699801445007,-0.3589739799499512,0.5,0,0.3829110264778137,0.3418800234794617,0,0.4316239953041077,-0.4018986821174622,0.3675209879875183,-0.4588608145713806,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			2317074377023162
		]
		],
		false,
		false,
		9142165185967775,
		[],
		null
	]
,	[
		"t45",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4225653779774862,
			[
				["images/mb01-sheet0.png", 1493, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5,[],[-0.1948054730892181,0.01449298858642578,-0.004329472780227661,-0.05072501301765442,0.2467535138130188,-0.07971000671386719,0.4978355169296265,0,0.4978355169296265,0.5,-0.004329472780227661,0.5,-0.3896104693412781,0.3115940093994141,-0.1818184852600098,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9431238321316507,
		[],
		null
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			616270017319023,
			[
				["images/mb02-sheet0.png", 2505, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5,[["Imagepoint 1", -0.00432900432497263, 1]],[-0.1558444797992706,0.07971000671386719,-0.004329472780227661,0.08695697784423828,0.4025974869728088,-0.3405799865722656,0.4935064911842346,0,0.3809525370597839,0.3043479919433594,-0.004329472780227661,0.5,-0.5021644830703735,0.5,-0.5021644830703735,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3126432814374472,
		[],
		null
	]
,	[
		"t47",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5767072677125066,
			[
				["images/mb03-sheet0.png", 1428, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5072463750839233,[],[-0.463203489780426,-0.4420289695262909,-0.004329472780227661,-0.5072463750839233,0.4978355169296265,-0.5072463750839233,0.4978355169296265,-0.00724637508392334,0.2900435328483582,0.1449276208877564,-0.004329472780227661,0.1159416437149048,-0.233766496181488,0.04347860813140869,-0.3160174787044525,-0.00724637508392334],0]
			]
			]
		],
		[
		],
		false,
		false,
		7499259702663317,
		[],
		null
	]
,	[
		"t48",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4683075530733987,
			[
				["images/mb04-sheet0.png", 1921, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5072463750839233,[],[-0.5021644830703735,-0.5072463750839233,-0.004329472780227661,-0.5072463750839233,0.1428574919700623,0.08695662021636963,0.09523850679397583,-0.00724637508392334,0.1038964986801148,-0.1666663885116577,-0.004329472780227661,0.3985506296157837,-0.3246755003929138,0.1956526041030884,-0.5021644830703735,-0.00724637508392334],0]
			]
			]
		],
		[
		],
		false,
		false,
		1799095844741001,
		[],
		null
	]
,	[
		"t49",
		cr.plugins_.Sprite,
		false,
		[8816552515665482,1807626060185155,6273499221284226,5988517103292455],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9747470443740398,
			[
				["images/mb1-sheet0.png", 10483, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5,[],[-0.5021644830703735,-0.5,0.03896051645278931,-0.5,0.2943724989891052,-0.5,0.4978355169296265,-0.5,0.4978355169296265,0.5,-0.004329472780227661,0.5,-0.5021644830703735,0.5,-0.5021644830703735,-0.02898600697517395],0]
			]
			]
		],
		[
		],
		false,
		false,
		8273772052546954,
		[],
		null
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[5195754034148101,8233004655180928,5662731893190306,6362341058304684],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3805082929548947,
			[
				["images/mb3-sheet0.png", 9880, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5072463750839233,[],[-0.5021644830703735,-0.5072463750839233,-0.004329472780227661,-0.5072463750839233,0.4978355169296265,-0.5072463750839233,0.4978355169296265,-0.00724637508392334,0.4978355169296265,0.4927536249160767,-0.08225148916244507,0.4927536249160767,-0.3290044665336609,0.4927536249160767,-0.5021644830703735,0.4927536249160767],0]
			]
			]
		],
		[
		],
		false,
		false,
		5176945902335296,
		[],
		null
	]
,	[
		"t51",
		cr.plugins_.Sprite,
		false,
		[9697617972424749,5093719411519005,2336613779881696,5588761549734843],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7098824011106267,
			[
				["images/mb2-sheet0.png", 16076, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5,[],[-0.2034634947776794,-0.5,0.04761850833892822,-0.5,0.4978355169296265,-0.5,0.4935064911842346,0,0.4978355169296265,0.5,-0.004329472780227661,0.5,-0.5021644830703735,0.5,-0.5021644830703735,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		8084115982980466,
		[],
		null
	]
,	[
		"t52",
		cr.plugins_.Sprite,
		false,
		[1559984495252688,420710472895996,9479250542790195,8442058069039708],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7759128186828528,
			[
				["images/mb4-sheet0.png", 13938, 0, 0, 231, 138, 1, 0.5021644830703735, 0.5072463750839233,[],[-0.5021644830703735,-0.5072463750839233,-0.004329472780227661,-0.5072463750839233,0.4978355169296265,-0.5072463750839233,0.4978355169296265,-0.108695387840271,0.4978355169296265,0.4927536249160767,0.03030252456665039,0.4927536249160767,-0.5021644830703735,0.4927536249160767,-0.5021644830703735,-0.00724637508392334],0]
			]
			]
		],
		[
		],
		false,
		false,
		9514568328065291,
		[],
		null
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4930130409116867,
			[
				["images/kkc-sheet0.png", 1486, 0, 0, 278, 105, 1, 0.3920863270759583, 0.561904788017273,[],[-0.2625903487205505,-0.142856776714325,0.1043166816234589,-0.5428571701049805,0.4712226986885071,-0.1333338022232056,0.5000006556510925,-0.06666678190231323,0.5899276733398438,0.3238092064857483,0.1043166816234589,0.4285712242126465,-0.3705036342144013,0.3047612309455872,-0.2913663387298584,-0.06666678190231323],0]
			]
			]
		],
		[
		],
		false,
		false,
		3874235336054865,
		[],
		null
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2137440922897096,
			[
				["images/kkc2-sheet0.png", 1135, 0, 0, 291, 104, 1, 0.3883161544799805, 0.557692289352417,[["Imagepoint 1", 0.4982817769050598, 2.461538553237915]],[-0.3676975667476654,-0.4807691872119904,0.1065298318862915,-0.5480769276618958,0.5876288414001465,-0.490384578704834,0.6048118472099304,-0.05769228935241699,0.5738838315010071,0.3365387320518494,0.1065298318862915,0.4326927065849304,-0.3573882579803467,0.3365387320518494,-0.3848797380924225,-0.05769228935241699],0]
			]
			]
		],
		[
		],
		false,
		false,
		8038300264462291,
		[],
		null
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7843812560786556,
			[
				["images/kkc3-sheet0.png", 1680, 0, 0, 266, 105, 1, 0.240601509809494, 0.5714285969734192,[],[-0.1842105090618134,-0.3047615885734558,0.259398490190506,-0.561904788017273,0.6090224981307983,-0.07619059085845947,0.6127824783325195,-0.07619059085845947,0.259398490190506,0.2857143878936768,-0.1015035063028336,-0.047618567943573,-0.1090225130319595,-0.07619059085845947],0]
			]
			]
		],
		[
		],
		false,
		false,
		8134005246151457,
		[],
		null
	]
,	[
		"t56",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7606294402056616,
			[
				["images/kkc4-sheet0.png", 1539, 0, 0, 84, 101, 1, 0.5, 0.5049505233764648,[],[0.0119050145149231,-0.2277225255966187,0.3690490126609802,0.009901463985443115,0.0119050145149231,0.4851484894752502,-0.404761403799057,0.009901463985443115],0]
			]
			]
		],
		[
		],
		false,
		false,
		9860037468788716,
		[],
		null
	]
,	[
		"t57",
		cr.plugins_.Sprite,
		false,
		[2278770054956775,5935756570768523,9011645977528598,8342253089961804],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3029972248757562,
			[
				["images/1mkkc-sheet0.png", 12129, 0, 0, 278, 105, 1, 0.3920863270759583, 0.561904788017273,[],[-0.3920863270759583,-0.561904788017273,0.1043166816234589,-0.5428571701049805,0.6079136729240418,-0.561904788017273,0.6079136729240418,-0.05714279413223267,0.6079136729240418,0.4380952119827271,0.1043166816234589,0.4285712242126465,-0.3920863270759583,0.4380952119827271,-0.3920863270759583,-0.06666678190231323],0]
			]
			]
		],
		[
		],
		false,
		false,
		1833347911007702,
		[],
		null
	]
,	[
		"t58",
		cr.plugins_.Sprite,
		false,
		[4221318680781344,7881481688724965,3142573565334905,9240899844330984],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2238474815946802,
			[
				["images/2mkkc-sheet0.png", 10111, 0, 0, 291, 104, 1, 0.3883161544799805, 0.557692289352417,[],[-0.3883161544799805,-0.557692289352417,0.1065298318862915,-0.5480769276618958,0.6116838455200195,-0.557692289352417,0.6048118472099304,-0.05769228935241699,0.6116838455200195,0.442307710647583,0.1065298318862915,0.4326927065849304,-0.3883161544799805,0.442307710647583,-0.3848797380924225,-0.05769228935241699],0]
			]
			]
		],
		[
		],
		false,
		false,
		8527282118561465,
		[],
		null
	]
,	[
		"t59",
		cr.plugins_.Sprite,
		false,
		[4047157638414268,7932517749414657,5356735566128552,8420843315828048],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1532789343363685,
			[
				["images/3mkkc-sheet0.png", 12486, 0, 0, 266, 105, 1, 0.240601509809494, 0.5714285969734192,[],[-0.240601509809494,-0.5714285969734192,0.259398490190506,-0.561904788017273,0.7593984603881836,-0.5714285969734192,0.7593984603881836,0.4285714030265808,0.3984964787960053,0.4285714030265808,-0.240601509809494,0.4095234274864197,-0.240601509809494,-0.1523805856704712],0]
			]
			]
		],
		[
		],
		false,
		false,
		8665297370106777,
		[],
		null
	]
,	[
		"t60",
		cr.plugins_.Sprite,
		false,
		[7787564161704139,399453918059825,123066058066115,3771320128716461],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1868051815398829,
			[
				["images/4mkkc-sheet0.png", 5298, 0, 0, 84, 101, 1, 0.5, 0.5049505233764648,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6165715990081015,
		[],
		null
	]
,	[
		"t61",
		cr.plugins_.Sprite,
		false,
		[2559267311145593,2637980031528972,2635212596782358,2065620652178231,4370596065860455,6926342819205301,8560777017896287],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6017536347493162,
			[
				["images/bg_dgko-sheet0.png", 6077, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		5484631283103138,
		[],
		null
	]
,	[
		"t62",
		cr.plugins_.Sprite,
		false,
		[9285475921196172,214924695936403],
		2,
		0,
		null,
		[
			[
			"Default",
			3,
			false,
			1,
			0,
			false,
			5133719660077521,
			[
				["images/khinhkhicau-sheet0.png", 40260, 0, 0, 291, 410, 1, 0.4948453605175018, 0.5,[],[-0.3470793664455414,-0.3951219916343689,0.003436625003814697,-0.497560977935791,0.3539516627788544,-0.3926829993724823,0.4570446312427521,0,0.1408936679363251,0.2414630055427551,0.003436625003814697,0.4926829934120178,-0.1408933699131012,0.2487800121307373,-0.4501718580722809,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			5678337471283623,
			[
				["images/khinhkhicau-sheet1.png", 5777, 0, 0, 291, 410, 1, 0.5017182230949402, 0.5,[],[-0.3539522290229797,-0.3951219916343689,-0.003436237573623657,-0.497560977935791,0.347078800201416,-0.3926829993724823,0.4501717686653137,0,0.1340208053588867,0.2414630055427551,-0.003436237573623657,0.4926829934120178,-0.1477662324905396,0.2487800121307373,-0.4570447206497192,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			1581427397597982
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			2001224037166233
		]
		],
		false,
		false,
		8763227803880975,
		[],
		null
	]
,	[
		"t63",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			487038879024562,
			[
				["images/cauvong-sheet0.png", 53554, 0, 0, 369, 259, 1, 0.501354992389679, 0.5019304752349854,[],[-0.3197829723358154,-0.2432434856891632,-0.00270998477935791,-0.4555984735488892,0.3224930167198181,-0.2509654760360718,0.4336040019989014,-0.003861486911773682,0.4552850127220154,0.4362935423851013,-0.00270998477935791,-0.09652549028396606,-0.4552844762802124,0.4324325323104858,-0.4254741966724396,-0.003861486911773682],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7348537167905673
		]
		],
		false,
		false,
		4336793925388655,
		[],
		null
	]
,	[
		"t64",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			1,
			false,
			1,
			0,
			false,
			930848832038296,
			[
				["images/canhnho-sheet0.png", 16971, 0, 0, 163, 162, 1, 0.5030674934387207, 0.5,[],[-0.3496934771537781,-0.345678985118866,-0.006134480237960815,-0.2037039995193481,0.3558285236358643,-0.3580250144004822,0.1779145002365112,0,0.3558285236358643,0.3580250144004822,-0.006134480237960815,0.1913579702377319,-0.3558284938335419,0.3518519997596741,-0.2085884809494019,0],0]
			]
			]
,			[
			"a",
			1,
			false,
			1,
			0,
			false,
			7094214894130837,
			[
				["images/canhnho-sheet1.png", 3372, 0, 0, 163, 162, 1, 0.5030674934387207, 0.5,[],[-0.3496934771537781,-0.345678985118866,-0.006134480237960815,-0.2037039995193481,0.3558285236358643,-0.3580250144004822,0.1779145002365112,0,0.3558285236358643,0.3580250144004822,-0.006134480237960815,0.1913579702377319,-0.3558284938335419,0.3518519997596741,-0.2085884809494019,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1205725411861064
		]
,		[
			"Rotate",
			cr.behaviors.Rotate,
			5780664215879148
		]
		],
		false,
		false,
		1255059450342968,
		[],
		null
	]
,	[
		"t65",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			6,
			true,
			1,
			0,
			false,
			485038198896879,
			[
				["images/canh-sheet0.png", 56594, 1, 1, 273, 110, 1, 0.5018315315246582, 0.5090909004211426,[],[-0.3663005232810974,-0.1727268993854523,-0.003663539886474609,-0.181817889213562,0.4065934419631958,-0.2818179130554199,0.4322344660758972,-0.009090900421142578,0.3736264705657959,0.1818181276321411,-0.003663539886474609,0.1090911030769348,-0.4432234168052673,0.3454540967941284,-0.4652015268802643,-0.009090900421142578],0],
				["images/canh-sheet0.png", 56594, 1, 112, 273, 110, 1, 0.5018315315246582, 0.5090909004211426,[],[-0.3626375198364258,-0.1636359095573425,-0.003663539886474609,-0.1999998986721039,0.3076924681663513,-0.03636389970779419,0.3369964957237244,-0.009090900421142578,0.3699634671211243,0.172727108001709,-0.003663539886474609,0.4454541206359863,-0.3113555312156677,0.01818209886550903,-0.3479855358600617,-0.009090900421142578],0],
				["images/canh-sheet0.png", 56594, 1, 223, 273, 110, 1, 0.5018315315246582, 0.5090909004211426,[],[-0.4139194488525391,-0.2909089028835297,-0.003663539886474609,-0.1909089088439941,0.3699634671211243,-0.1909089088439941,0.4468864798545837,-0.009090900421142578,0.4358974695205689,0.3363640904426575,-0.003663539886474609,0.1272730827331543,-0.3882785439491272,0.2090911269187927,-0.4175824224948883,-0.009090900421142578],0]
			]
			]
,			[
			"a",
			6,
			true,
			1,
			0,
			false,
			857627475259132,
			[
				["images/canh-sheet0.png", 56594, 1, 334, 273, 110, 1, 0.5018315315246582, 0.5,[],[-0.369963526725769,-0.1727269887924194,-0.003663539886474609,-0.1818180084228516,0.4065934419631958,-0.2727270126342773,0.4322344660758972,0,0.3736264705657959,0.1909090280532837,-0.003663539886474609,0.1181820034980774,-0.4432234168052673,0.354544997215271,-0.4688645303249359,0],0],
				["images/canh-sheet1.png", 5274, 1, 1, 273, 110, 1, 0.5018315315246582, 0.5,[],[-0.3626375198364258,-0.1545450091362,-0.003663539886474609,-0.1909089982509613,0.311355471611023,-0.03636398911476135,0.3369964957237244,0,0.3699634671211243,0.1818180084228516,-0.003663539886474609,0.4545450210571289,-0.3113555312156677,0.02727299928665161,-0.3479855358600617,0],0],
				["images/canh-sheet1.png", 5274, 1, 112, 273, 110, 1, 0.5018315315246582, 0.5,[],[-0.4139194488525391,-0.2818180024623871,-0.003663539886474609,-0.1818180084228516,0.3736264705657959,-0.1909089982509613,0.4468864798545837,0,0.4358974695205689,0.3454549908638001,-0.003663539886474609,0.1363639831542969,-0.3882785439491272,0.2181820273399353,-0.4212454259395599,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8194402140032305
		]
		],
		false,
		false,
		8435227027317652,
		[],
		null
	]
,	[
		"t66",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6695822090282595,
			[
				["images/cloud-sheet0.png", 812, 0, 0, 69, 44, 1, 0.5072463750839233, 0.5,[],[-0.3188403844833374,-0.2045449912548065,-0.01449236273765564,-0.3636360168457031,0.2318836450576782,-0.09090900421142578,0.4202896356582642,0,0.3768116235733032,0.3181819915771484,-0.01449236273765564,0.3636360168457031,-0.3913043737411499,0.3181819915771484,-0.3913043737411499,0],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			9451901877980431
		]
		],
		false,
		false,
		2773973192759185,
		[],
		null
	]
,	[
		"t67",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4894867928962839,
			[
				["images/cloud2-sheet0.png", 1052, 0, 0, 88, 50, 1, 0.5, 0.5,[],[-0.25,-0.06000000238418579,0,-0.4000000059604645,0.2613639831542969,-0.08000001311302185,0.4204549789428711,0,0.375,0.2799999713897705,0,0.3799999952316284,-0.4090909063816071,0.3399999737739563,-0.3636360168457031,0],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5006368007041733
		]
		],
		false,
		false,
		9450498453196175,
		[],
		null
	]
,	[
		"t68",
		cr.plugins_.Sprite,
		false,
		[379785978690732,1812209832969032],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9320091546047919,
			[
				["images/maybay-sheet0.png", 49205, 0, 0, 462, 276, 1, 0.4848484992980957, 0.47826087474823,[],[-0.3311685025691986,-0.2210148870944977,0.0151515007019043,-0.3405798673629761,0.4675325155258179,-0.3985507786273956,0.4264065027236939,0.02173912525177002,0.3181815147399902,0.1920291185379028,0.0151515007019043,0.3442031145095825,-0.350649505853653,0.2971011400222778,-0.4437229931354523,0.02173912525177002],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			1102006949216457,
			[
				["images/maybay-sheet1.png", 5978, 0, 0, 462, 276, 1, 0.5, 0.5,[],[-0.3463200032711029,-0.2427540123462677,0,-0.3623189926147461,0.4523810148239136,-0.4202899038791657,0.4112550020217896,0,0.3030300140380859,0.1702899932861328,0,0.3224639892578125,-0.3658010065555573,0.2753620147705078,-0.4588744938373566,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7887511654404075
		]
		],
		false,
		false,
		7987043680657657,
		[],
		null
	]
,	[
		"t69",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			940841956045974,
			[
				["images/frame-sheet0.png", 110206, 0, 0, 692, 1192, 1, 0.5, 0.5,[["Imagepoint 1", 0.1878612786531448, 0.8137583732604981]],[-0.4624277055263519,0.4723150134086609,-0.4913294911384583,-0.001677989959716797,-0.4624277055263519,-0.4756712019443512,-0.005780011415481567,-0.4924496710300446,0.4523119926452637,-0.4756712019443512,0.4826589822769165,-0.001677989959716797,0.4552019834518433,0.4739930033683777,-0.005780011415481567,0.4899330139160156],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			8193394218616446
		]
		],
		false,
		false,
		1167181128217107,
		[],
		null
	]
,	[
		"t70",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8655966952482577,
			[
				["images/maylon-sheet0.png", 24368, 0, 0, 1642, 289, 1, 0.4963459074497223, 0.3183391094207764,[],[-0.436053603887558,0.02422189712524414,0.00365409255027771,0.2422149181365967,0.4470160901546478,0.003459900617599487,0.4689401090145111,0.1799308955669403,0.5036541223526001,0.6816608905792236,0.00365409255027771,0.6816608905792236,-0.4847746193408966,0.615916907787323,-0.464068204164505,0.1799308955669403],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9222874643648576
		]
		],
		false,
		false,
		7820436679085114,
		[],
		null
	]
,	[
		"t71",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5035319027122151,
			[
				["images/maylon2-sheet0.png", 15068, 0, 0, 1449, 117, 1, 0.496204286813736, -0.01709401793777943,[],[-0.4451345801353455,0.649573028087616,0.003450721502304077,0.8290600180625916,0.4685986936092377,0.4529910087585449,0.485161691904068,0.5128200054168701,0.5037957429885864,1.017094016075134,0.003450721502304077,1.017094016075134,-0.4168391823768616,0.5128200054168701],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			9627831293604348
		]
,		[
			"Wrap",
			cr.behaviors.wrap,
			1921022296347191
		]
		],
		false,
		false,
		8348064987869248,
		[],
		null
	]
,	[
		"t72",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6495630873526738,
			[
				["images/nui-sheet0.png", 83636, 0, 0, 1282, 201, 1, 0.5, 0.2487562149763107,[],[-0.3510140180587769,0.1990047842264175,0,0.3880597949028015,0.347894012928009,0.2189057916402817,0.2652109861373901,-2.086162567138672e-007,0.4992200136184692,0.7462687492370606,-0.4992199838161469,0.7462687492370606,-0.3244929909706116,-2.086162567138672e-007],0]
			]
			]
		],
		[
		],
		false,
		false,
		4382581445939293,
		[],
		null
	]
,	[
		"t73",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			417453543629267,
			[
				["images/vidu-sheet0.png", 4373, 0, 0, 35, 45, 1, 0.5142857432365418, 0.5111111402511597,[],[-0.3142857551574707,-0.3555551469326019,-0.02857175469398499,-0.4888889491558075,0.3142852783203125,-0.3777781426906586,0.4857142567634583,-0.0222221314907074,0.3142852783203125,0.3555558323860169,-0.02857175469398499,0.4666668772697449,-0.342856764793396,0.3555558323860169,-0.4857143461704254,-0.0222221314907074],0]
			]
			]
		],
		[
		],
		false,
		false,
		5875047744222432,
		[],
		null
	]
,	[
		"t74",
		cr.plugins_.Sprite,
		false,
		[8513014284543874,2559608937853843],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7345496094482877,
			[
				["images/mbtt-sheet0.png", 53171, 0, 0, 486, 435, 1, 0.4814814925193787, 0.4413793087005615,[["Imagepoint 1", 0.004115226212888956, 0.4252873659133911]],[-0.1790125072002411,-0.1241382956504822,-0.002057492733001709,-0.3241383135318756,0.3456785082817078,-0.31264328956604,0.5144035220146179,-0.002299308776855469,0.4588475227355957,0.4367817044258118,-0.002057492733001709,0.5241376757621765,-0.2160494923591614,0.1632186770439148,-0.4650205969810486,-0.002299308776855469],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			8435784668503795,
			[
				["images/mbtt-sheet1.png", 9944, 0, 0, 486, 435, 1, 0.5, 0.5011494159698486,[],[-0.2037039995193481,-0.1701154112815857,0,-0.3954024314880371,0.3641980290412903,-0.3494254350662231,0.4938269853591919,-0.002298414707183838,0.4341560006141663,0.4252876043319702,0,0.466666579246521,-0.1954729855060577,0.1586205959320068,-0.4094650149345398,-0.002298414707183838],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			4863623740573745
		]
		],
		false,
		false,
		5779921892636608,
		[],
		null
	]
,	[
		"t75",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3265561947123146,
			[
				["images/mbay01-sheet0.png", 1700, 0, 0, 193, 164, 1, 0.5025906562805176, 0.5,[],[-0.005181670188903809,-0.5,0.4974093437194824,-0.5,0.4974093437194824,0,0.4093263149261475,0.3963410258293152,-0.005181670188903809,-0.3658539950847626,0.1502593159675598,-0.2682929933071137,0.378238320350647,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		1572937157167201,
		[],
		null
	]
,	[
		"t76",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8722640521651897,
			[
				["images/mbay02-sheet0.png", 3370, 0, 0, 193, 165, 1, 0.5025906562805176, 0.5030303001403809,[],[-0.3730566501617432,-0.3515152931213379,-0.005181670188903809,-0.4121212065219879,0.3367873430252075,-0.3151513040065765,0.2849743366241455,-0.006060302257537842,0.4611403346061707,0.4545456767082214,-0.005181670188903809,0.4969696998596191,-0.5025906562805176,0.4969696998596191,-0.5025906562805176,-0.006060302257537842],0]
			]
			]
		],
		[
		],
		false,
		false,
		5526207909759089,
		[],
		null
	]
,	[
		"t77",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6705442226979367,
			[
				["images/mbay03-sheet0.png", 1821, 0, 0, 193, 164, 1, 0.5025906562805176, 0.5,[["Imagepoint 1", -0.005181347019970417, 0]],[-0.5025906562805176,-0.5,-0.005181670188903809,-0.5,0.4611403346061707,-0.4573171138763428,0.2746113538742065,0,0.3523313403129578,0.3292679786682129,-0.005181670188903809,0.4634150266647339,-0.4300517439842224,0.4146339893341065,-0.5025906562805176,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		4259614369943256,
		[],
		null
	]
,	[
		"t78",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7222335800225991,
			[
				["images/mbay04-sheet0.png", 3266, 0, 0, 193, 165, 1, 0.5025906562805176, 0.5030303001403809,[],[0.08808332681655884,0.1878787279129028,-0.005181670188903809,0.1515147089958191,0.3886013627052307,-0.3757573068141937,0.4974093437194824,-0.006060302257537842,0.4974093437194824,0.4969696998596191,-0.005181670188903809,0.4969696998596191,-0.4715025424957275,0.4606056809425354,-0.2746116518974304,-0.006060302257537842],0]
			]
			]
		],
		[
		],
		false,
		false,
		6287193662863773,
		[],
		null
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[4744101356507165,3048939164194526,906305461325247,244783120505564],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2588500600642693,
			[
				["images/mbay1-sheet0.png", 7677, 0, 0, 193, 164, 1, 0.5025906562805176, 0.5,[],[-0.005181670188903809,-0.5,0.4974093437194824,-0.5,0.4974093437194824,0,0.4974093437194824,0.5,-0.5025906562805176,0.5,-0.5025906562805176,-0.1280489861965179,-0.5025906562805176,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		4843709462220942,
		[],
		null
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[1059516501897192,6146733428381478,3351099223900032,8392712738085266],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9207484583671563,
			[
				["images/mbay2-sheet0.png", 23031, 0, 0, 193, 165, 1, 0.5025906562805176, 0.5030303001403809,[],[-0.5025906562805176,-0.5030303001403809,0.05181336402893066,-0.5030303001403809,0.4974093437194824,-0.5030303001403809,0.4974093437194824,-0.07272729277610779,0.4611403346061707,0.4545456767082214,-0.005181670188903809,0.4969696998596191,-0.5025906562805176,0.4969696998596191,-0.5025906562805176,-0.006060302257537842],0]
			]
			]
		],
		[
		],
		false,
		false,
		537087970998681,
		[],
		null
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[2078418203132477,6018909274666618,4996693393921241,5493632152863985],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7547522078626317,
			[
				["images/mbay3-sheet0.png", 15471, 0, 0, 193, 164, 1, 0.5025906562805176, 0.5,[],[-0.5025906562805176,-0.5,-0.005181670188903809,-0.5,0.4974093437194824,-0.5,0.4974093437194824,-0.03048801422119141,0.4974093437194824,0.5,-0.005181670188903809,0.4634150266647339,-0.5025906562805176,0.5,-0.5025906562805176,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3619168116295831,
		[],
		null
	]
,	[
		"t82",
		cr.plugins_.Sprite,
		false,
		[8467354984449782,2692080464541997,8045034511843235,5521227475987536],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3761606819972715,
			[
				["images/mbay4-sheet0.png", 15933, 0, 0, 193, 165, 1, 0.5025906562805176, 0.5030303001403809,[],[-0.2124346494674683,-0.5030303001403809,0.2020723223686218,-0.5030303001403809,0.4974093437194824,-0.5030303001403809,0.4974093437194824,-0.006060302257537842,0.4974093437194824,0.4969696998596191,-0.005181670188903809,0.4969696998596191,-0.5025906562805176,0.4969696998596191,-0.5025906562805176,-0.5030303001403809],0]
			]
			]
		],
		[
		],
		false,
		false,
		2616333595202061,
		[],
		null
	]
,	[
		"t83",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1158760603859629,
			[
				["images/taungam01-sheet0.png", 2393, 0, 0, 209, 107, 1, 0.5023923516273499, 0.5046728849411011,[],[-0.2392343580722809,0.009346127510070801,-0.004784345626831055,-0.4579438865184784,0.2870816588401794,-0.09345787763595581,0.468899667263031,-0.009345889091491699,0.4928226470947266,0.4859811067581177,-0.004784345626831055,0.4953271150588989,-0.1244023442268372,-0.2429908812046051,0.004784643650054932,-0.009345889091491699],0]
			]
			]
		],
		[
		],
		false,
		false,
		6672831810533989,
		[],
		null
	]
,	[
		"t84",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9818004094262791,
			[
				["images/taungam02-sheet0.png", 2116, 0, 0, 139, 163, 1, 0.5035971403121948, 0.5030674934387207,[],[-0.316547155380249,-0.3435584902763367,-0.00719413161277771,-0.4539876878261566,0.4964028596878052,-0.5030674934387207,0.4820138812065125,0.4846625328063965,-0.00719413161277771,0.4294475317001343,-0.3021581470966339,0.3251535296440125,-0.5035971403121948,-0.006134480237960815],0]
			]
			]
		],
		[
		],
		false,
		false,
		8934246793624321,
		[],
		null
	]
,	[
		"t85",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8361753388637989,
			[
				["images/taungam03-sheet0.png", 1076, 0, 0, 138, 163, 1, 0.5, 0.5030674934387207,[["Imagepoint 1", 0.4927536249160767, 0.01226993836462498]],[-0.5,-0.5030674934387207,0.5,-0.5030674934387207,0.4782609939575195,0.4785274863243103,0,0.4969325065612793,-0.4855071902275085,0.4846625328063965],0]
			]
			]
		],
		[
		],
		false,
		false,
		4893247066371449,
		[],
		null
	]
,	[
		"t86",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			917848123616559,
			[
				["images/taungam04-sheet0.png", 2051, 0, 0, 139, 163, 1, 0.5035971403121948, 0.5030674934387207,[],[-0.5035971403121948,-0.5030674934387207,-0.00719413161277771,-0.5030674934387207,0.4820138812065125,-0.006134480237960815,0.2877698540687561,0.3190184831619263,-0.00719413161277771,0.4110425114631653,-0.4820144474506378,0.4785274863243103],0]
			]
			]
		],
		[
		],
		false,
		false,
		8099860572819953,
		[],
		null
	]
,	[
		"t87",
		cr.plugins_.Sprite,
		false,
		[7581690273357603,1557078781461414,3866854353270543,8325491482688068],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3255663770986941,
			[
				["images/taungam2-sheet0.png", 21549, 0, 0, 139, 163, 1, 0.5035971403121948, 0.5030674934387207,[],[-0.5035971403121948,-0.5030674934387207,-0.00719413161277771,-0.4539876878261566,0.4964028596878052,-0.5030674934387207,0.4820138812065125,0.4846625328063965,0.1079138517379761,0.4969325065612793,-0.5035971403121948,0.4969325065612793,-0.5035971403121948,-0.006134480237960815],0]
			]
			]
		],
		[
		],
		false,
		false,
		912386059843913,
		[],
		null
	]
,	[
		"t88",
		cr.plugins_.Sprite,
		false,
		[33940712134758,393172713192781,6420214361741208,2606737979745543],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9166899783865771,
			[
				["images/taungam1-sheet0.png", 14298, 0, 0, 209, 107, 1, 0.5023923516273499, 0.5046728849411011,[],[-0.5023923516273499,-0.5046728849411011,-0.004784345626831055,-0.4579438865184784,0.4976076483726502,-0.5046728849411011,0.4976076483726502,-0.009345889091491699,0.4928226470947266,0.4859811067581177,-0.004784345626831055,0.4953271150588989,-0.5023923516273499,0.4953271150588989,-0.5023923516273499,0.2196261286735535],0]
			]
			]
		],
		[
		],
		false,
		false,
		941960728643999,
		[],
		null
	]
,	[
		"t89",
		cr.plugins_.Sprite,
		false,
		[8143747454917728,5337653056521763,8865109058766224,230284602655627],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8252580788996089,
			[
				["images/taungam3-sheet0.png", 18855, 0, 0, 138, 163, 1, 0.5, 0.5030674934387207,[],[-0.5,-0.5030674934387207,0.5,-0.5030674934387207,0.4782609939575195,0.4785274863243103,0,0.4969325065612793,-0.4855071902275085,0.4846625328063965],0]
			]
			]
		],
		[
		],
		false,
		false,
		212785293421184,
		[],
		null
	]
,	[
		"t90",
		cr.plugins_.Sprite,
		false,
		[6220898454323062,358905185090061,5505546628006965,8649656687396633],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8589542030242464,
			[
				["images/taungam4-sheet0.png", 18034, 0, 0, 139, 163, 1, 0.5035971403121948, 0.5030674934387207,[],[-0.5035971403121948,-0.5030674934387207,-0.00719413161277771,-0.5030674934387207,0.4964028596878052,-0.5030674934387207,0.4964028596878052,0.4969325065612793,0.07913684844970703,0.4969325065612793,-0.4820144474506378,0.4785274863243103],0]
			]
			]
		],
		[
		],
		false,
		false,
		654805660206174,
		[],
		null
	]
,	[
		"t91",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1644910664455248,
			[
				["images/tauthuy01-sheet0.png", 1748, 0, 0, 181, 114, 1, 0.5027624368667603, 0.5,[],[0.2707185745239258,0,0.4972375631332398,0.5,-0.5027624368667603,0.5,-0.3922654390335083,0,-0.2486184239387512,-0.0964910089969635,-4.172325134277344e-007,-0.4912280738353729,0.2265195846557617,-0.07017499208450317],0]
			]
			]
		],
		[
		],
		false,
		false,
		2931730090674372,
		[],
		null
	]
,	[
		"t92",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7377015126342571,
			[
				["images/tauthuy02-sheet0.png", 2043, 0, 0, 140, 153, 1, 0.5, 0.5032680034637451,[],[0.3928570151329041,-0.006536006927490234,0.2214289903640747,0.2418299913406372,0,0.3725489974021912,-0.4642859995365143,0.4640520215034485,-0.5,-0.006536006927490234,-0.3642860054969788,-0.3790850043296814,0,-0.4836601912975311,0.4214289784431458,-0.4313726127147675],0]
			]
			]
		],
		[
		],
		false,
		false,
		8861151498627087,
		[],
		null
	]
,	[
		"t93",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9054183344614285,
			[
				["images/tauthuy03-sheet0.png", 1030, 0, 0, 139, 153, 1, 0.5035971403121948, 0.5032680034637451,[["Imagepoint 1", 0.4604316651821137, 0.1111111119389534]],[0.4964028596878052,-0.006536006927490234,0.4676258563995361,0.470587968826294,-0.4964031577110291,0.4901959896087647,-0.5035971403121948,-0.006536006927490234,-0.3812951445579529,-0.3921570181846619,-1.192092895507813e-007,-0.3921570181846619,0.3453238606452942,-0.3660129904747009],0]
			]
			]
		],
		[
		],
		false,
		false,
		5176470089954694,
		[],
		null
	]
,	[
		"t94",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8752081597827498,
			[
				["images/tauthuy04-sheet0.png", 1528, 0, 0, 140, 153, 1, 0.5, 0.5032680034637451,[],[0.5,-0.006536006927490234,0.4928569793701172,0.4901959896087647,0,0.3790850043296814,-0.2214289903640747,0.2418299913406372,-0.4000000059604645,-0.006536006927490234,-0.2571430206298828,-0.2810460031032562,0,-0.3921570181846619,0.3785709738731384,-0.3921570181846619],0]
			]
			]
		],
		[
		],
		false,
		false,
		9352338094761977,
		[],
		null
	]
,	[
		"t95",
		cr.plugins_.Sprite,
		false,
		[6594338914841987,5516814272870625,6609683998081428,2712455814275897],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7082970787267899,
			[
				["images/tauthuy1-sheet0.png", 16446, 0, 0, 181, 114, 1, 0.5027624368667603, 0.5,[],[0.4972375631332398,-0.5,0.4972375631332398,0.5,-0.5027624368667603,0.5,-0.5027624368667603,-0.04385998845100403,-0.5027624368667603,-0.5,-4.172325134277344e-007,-0.4912280738353729,0.3093925714492798,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		2922341403627661,
		[],
		null
	]
,	[
		"t96",
		cr.plugins_.Sprite,
		false,
		[5672387033130084,483846631106084,1446490314148335,9040438910194308],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2824558799437116,
			[
				["images/tauthuy2-sheet0.png", 17724, 0, 0, 140, 153, 1, 0.5, 0.5032680034637451,[],[0.5,0.3725489974021912,0.25,0.4967319965362549,0.07142901420593262,0.4967319965362549,-0.4642857015132904,0.4640520215034485,-0.5,-0.006536006927490234,-0.5,-0.5032680034637451,0,-0.4836601912975311,0.5,-0.5032680034637451],0]
			]
			]
		],
		[
		],
		false,
		false,
		2398522193257062,
		[],
		null
	]
,	[
		"t97",
		cr.plugins_.Sprite,
		false,
		[1237345954248258,2804949026418557,8849593760289741,8478948792379436],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3621177647577101,
			[
				["images/tauthuy3-sheet0.png", 15046, 0, 0, 139, 153, 1, 0.5035971403121948, 0.5032680034637451,[],[0.4964028596878052,-0.006536006927490234,0.4676258563995361,0.470587968826294,-0.4964031577110291,0.4901959896087647,-0.5035971403121948,-0.006536006927490234,-0.5035971403121948,-0.5032680034637451,-0.100719153881073,-0.5032680034637451,0.4964028596878052,-0.5032680034637451],0]
			]
			]
		],
		[
		],
		false,
		false,
		1789323812164109,
		[],
		null
	]
,	[
		"t98",
		cr.plugins_.Sprite,
		false,
		[2246660510392546,8066707497970132,1075188443282325,4784785596385577],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6090031181184976,
			[
				["images/tauthuy4-sheet0.png", 24250, 0, 0, 140, 153, 1, 0.5, 0.5032680034637451,[],[0.5,-0.006536006927490234,0.4928569793701172,0.4901959896087647,0.1357139945030212,0.4967319965362549,-0.5,0.4967319965362549,-0.5,-0.05882400274276733,-0.5,-0.5032680034637451,0.2857139706611633,-0.5032680034637451,0.5,-0.5032680034637451],0]
			]
			]
		],
		[
		],
		false,
		false,
		4694529382047666,
		[],
		null
	]
,	[
		"t99",
		cr.plugins_.Sprite,
		false,
		[838093246209651,7505145327870807,8406964780112221,9301117716034309],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4455400174576338,
			[
				["images/1thuyenbuom-sheet0.png", 9064, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[],[-0.5023255944252014,-0.5,0.1395344138145447,-0.5,0.4976744055747986,-0.5,0.4976744055747986,0.5,-0.00465160608291626,0.5,-0.5023255944252014,0.4901959896087647],0]
			]
			]
		],
		[
		],
		false,
		false,
		4805961074857311,
		[],
		null
	]
,	[
		"t100",
		cr.plugins_.Sprite,
		false,
		[4846960943738345,1486198792777599,8922481981641246,2960235489500171],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5438931038047478,
			[
				["images/2thuyenbuom-sheet0.png", 14363, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[],[-0.5023255944252014,-0.5,-0.00465160608291626,-0.5,0.4976744055747986,-0.5,0.4976744055747986,0,0.4976744055747986,0.5,0.06511539220809937,0.5,-0.5023255944252014,0.5,-0.5023255944252014,0.04901999235153198],0]
			]
			]
		],
		[
		],
		false,
		false,
		8403436131778226,
		[],
		null
	]
,	[
		"t101",
		cr.plugins_.Sprite,
		false,
		[1449264095769581,606241232364839,9955787901489368,4827868178249886],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7276992120347855,
			[
				["images/3thuyenbuom-sheet0.png", 18948, 0, 0, 86, 163, 1, 0.5, 0.5030674934387207,[],[-0.5,-0.5030674934387207,0.3139539957046509,-0.5030674934387207,0.5,-0.5030674934387207,0.5,-0.006134480237960815,0.4883720278739929,0.4907975196838379,0.1686049699783325,0.4969325065612793,-0.5,0.4969325065612793,-0.4534884095191956,-0.006134480237960815],0]
			]
			]
		],
		[
		],
		false,
		false,
		2791292016069698,
		[],
		null
	]
,	[
		"t102",
		cr.plugins_.Sprite,
		false,
		[5434914839848282,445303082563163,1076842567018883,2603626619239403],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5881735902908712,
			[
				["images/4thuyenbuom-sheet0.png", 20936, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[],[-0.5023255944252014,-0.5,-0.00465160608291626,-0.480392187833786,0.4976744055747986,-0.5,0.4976744055747986,0.5,-0.00465160608291626,0.4705880284309387,-0.474418580532074,0.4411759972572327,-0.5023255944252014,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2241868234651424,
		[],
		null
	]
,	[
		"t103",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9603883659172688,
			[
				["images/thuyenbuom1-sheet0.png", 4893, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[],[-0.5023255944252014,0.5,-0.5023255944252014,-0.5,0.283721387386322,-0.5,0.4976744055747986,-0.4509804844856262,0.4976744055747986,0.5,-0.2186045944690704,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		1886749331269864,
		[],
		null
	]
,	[
		"t104",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2942890315326602,
			[
				["images/thuyenbuom2-sheet0.png", 4928, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[["Imagepoint 1", 0.08372092992067337, 0.7843137383460999]],[-0.5023255944252014,-0.5,-0.00465160608291626,-0.5,0.4976744055747986,-0.5,0.4976744055747986,0.03921598196029663,0.4976744055747986,0.5,0.2279064059257507,0.5,-0.5023255944252014,0.5,-0.5023255944252014,-0.274509996175766],0]
			]
			]
		],
		[
		],
		false,
		false,
		2631556546902264,
		[],
		null
	]
,	[
		"t105",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8532385001820178,
			[
				["images/thuyenbuom3-sheet0.png", 5412, 0, 0, 86, 163, 1, 0.5, 0.5030674934387207,[],[-0.5,-0.5030674934387207,0,-0.4355827867984772,0.5,-0.5030674934387207,0.5,-0.006134480237960815,0.4883720278739929,0.4907975196838379,0.08139497041702271,0.4969325065612793,-0.5,0.4969325065612793,-0.4534884095191956,-0.006134480237960815],0]
			]
			]
		],
		[
		],
		false,
		false,
		6933335118584005,
		[],
		null
	]
,	[
		"t106",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			854847997041165,
			[
				["images/thuyenbuom4-sheet0.png", 4885, 0, 0, 215, 102, 1, 0.5023255944252014, 0.5,[],[-0.5023255944252014,-0.5,-0.00465160608291626,-0.480392187833786,0.4976744055747986,-0.5,0.4976744055747986,0.5,-0.00465160608291626,0.4705880284309387,-0.474418580532074,0.4411759972572327,-0.5023255944252014,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2195588699941487,
		[],
		null
	]
,	[
		"t107",
		cr.plugins_.Sprite,
		false,
		[8590490115782013,5330797195821198,5860289520084717,7877322562489043,5503984010607336],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			905550194720368,
			[
				["images/bg_dgthuy-sheet0.png", 390537, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		2445571626029661,
		[],
		null
	]
,	[
		"t108",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			true,
			1,
			0,
			false,
			225610105252854,
			[
				["images/banhlai-sheet0.png", 12222, 0, 0, 109, 106, 1, 0.5137614607810974, 0.4716981053352356,[],[-0.3211004734039307,-0.2735851109027863,-0.01834845542907715,-0.3301891088485718,0.3669725656509399,-0.3490560948848724,0.3669725656509399,0.0283018946647644,0.2110095620155335,0.2452828884124756,-0.01834845542907715,0.5094338655471802,-0.2293574512004852,0.2358489036560059,-0.4770642518997192,0.0283018946647644],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			76962692130114,
			[
				["images/banhlai-sheet1.png", 2602, 0, 0, 109, 106, 1, 0.5045871734619141, 0.5,[],[-0.321101188659668,-0.3113210201263428,-0.009174168109893799,-0.3584910035133362,0.3853208422660828,-0.386792004108429,0.3853208422660828,0,0.2201838493347168,0.2169809937477112,-0.009174168109893799,0.4811319708824158,-0.2293581664562225,0.2169809937477112,-0.4678899645805359,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8030403577253204
		]
,		[
			"Rotate",
			cr.behaviors.Rotate,
			9273820587310281
		]
		],
		false,
		false,
		1481074325297443,
		[],
		null
	]
,	[
		"t109",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			2.5,
			true,
			1,
			0,
			false,
			2799664881770834,
			[
				["images/dentaungam-sheet0.png", 43301, 1, 1, 308, 229, 1, 0.5, 0.5021833777427673,[],[-0.3538960218429565,-0.3056763708591461,0,-0.3275113701820374,0.2889609932899475,-0.2183403670787811,0.4740260243415833,-0.004366368055343628,0,0.2401746511459351,-0.3474029898643494,0.2925766110420227,-0.3993510007858276,-0.004366368055343628],0],
				["images/dentaungam-sheet0.png", 43301, 1, 231, 308, 229, 1, 0.5, 0.5021833777427673,[],[],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2987863973113016
		]
		],
		false,
		false,
		4341999636442675,
		[],
		null
	]
,	[
		"t110",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			2,
			true,
			1,
			0,
			false,
			4525938353238059,
			[
				["images/ongnhom-sheet0.png", 29728, 1, 1, 158, 131, 1, 0.702531635761261, 0.8091602921485901,[],[-0.5063286423683167,-0.5725193023681641,-0.202531635761261,-0.641221284866333,0.1075953841209412,-0.5801522731781006,0.1075953841209412,-0.03816831111907959,-0.202531635761261,-0.3511452972888947,-0.2721516489982605,-0.3282442986965179,-0.493670642375946,-0.3129772841930389],0],
				["images/ongnhom-sheet0.png", 29728, 160, 1, 158, 131, 1, 0.702531635761261, 0.8167939186096191,[],[-0.531645655632019,-0.6106868982315064,-0.202531635761261,-0.6946569085121155,0.1075953841209412,-0.5877858996391296,0.1075953841209412,-0.04580193758010864,-0.202531635761261,-0.4274809062480927,-0.1962026357650757,-0.4274809062480927,-0.1202536225318909,-0.320610910654068],0],
				["images/ongnhom-sheet0.png", 29728, 160, 133, 119, 108, 1, 0.1596638709306717, 0.8981481194496155,[],[-0.1092436760663986,-0.8425925374031067,0.336134135723114,-0.6851851344108582,0.5294121503829956,-0.5555551052093506,0.4705881476402283,-0.3981481194496155,0.4285711646080017,-0.3518521189689636,0.336134135723114,-0.2962961196899414,-0.1176470667123795,0.05555588006973267,-0.1596638709306717,-0.3981481194496155],0]
			]
			]
,			[
			"a",
			2,
			true,
			1,
			0,
			false,
			1495781919915234,
			[
				["images/ongnhom-sheet0.png", 29728, 319, 1, 158, 131, 1, 0.702531635761261, 0.8091602921485901,[],[-0.5063286423683167,-0.5725193023681641,-0.202531635761261,-0.641221284866333,0.1075953841209412,-0.5801522731781006,0.1075953841209412,-0.03816831111907959,-0.202531635761261,-0.3511452972888947,-0.2784806489944458,-0.3206102848052979,-0.493670642375946,-0.3129772841930389],0],
				["images/ongnhom-sheet0.png", 29728, 1, 133, 158, 131, 1, 0.702531635761261, 0.8167939186096191,[],[-0.5379746556282044,-0.6183209419250488,-0.202531635761261,-0.6946569085121155,0.1075953841209412,-0.5877858996391296,0.1075953841209412,-0.04580193758010864,-0.202531635761261,-0.4274809062480927,-0.1962026357650757,-0.4274809062480927,-0.1202536225318909,-0.320610910654068],0],
				["images/ongnhom-sheet0.png", 29728, 280, 133, 119, 108, 1, 0.1596638709306717, 0.8981481194496155,[],[-0.1092436760663986,-0.8425925374031067,0.336134135723114,-0.6944441199302673,0.5294121503829956,-0.5555551052093506,0.4789911508560181,-0.3981481194496155,0.4369751214981079,-0.3425921201705933,0.336134135723114,-0.2962961196899414,-0.1176470667123795,0.05555588006973267,-0.1596638709306717,-0.3981481194496155],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3224033123141835
		]
		],
		false,
		false,
		8931360091477517,
		[],
		null
	]
,	[
		"t111",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6855347785173002,
			[
				["images/song-sheet0.png", 123247, 0, 0, 1556, 168, 1, 0.5, 0.5,[],[0,-0.2797619998455048,0.2988430261611939,0,0,0.25,-0.258996993303299,0],0]
			]
			]
		],
		[
		[
			"Wrap",
			cr.behaviors.wrap,
			4721877194449363
		]
,		[
			"Bullet",
			cr.behaviors.Bullet,
			4825333178947826
		]
		],
		false,
		false,
		6317051547053566,
		[],
		null
	]
,	[
		"t112",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4991760967930701,
			[
				["images/maydai2-sheet0.png", 1321, 0, 0, 80, 50, 1, 0.5, 0.5,[],[-0.2874999940395355,-0.1599999964237213,0,-0.2599999904632568,0.2749999761581421,-0.1399999856948853,0.362500011920929,0,0.387499988079071,0.3199999928474426,0,0.3999999761581421,-0.387499988079071,0.3199999928474426],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			8916672067581191
		]
,		[
			"Wrap",
			cr.behaviors.wrap,
			9487941329914913
		]
		],
		false,
		false,
		3492968358005559,
		[],
		null
	]
,	[
		"t113",
		cr.plugins_.Sprite,
		false,
		[1969868758655703,5904425456246263],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1160933843094178,
			[
				["images/thuyenbuom-sheet0.png", 36369, 0, 0, 438, 477, 1, 0.5593607425689697, 0.4863731563091278,[],[-0.180364727973938,-0.4863731563091278,0.1027392745018005,-0.4863731563091278,0.4406392574310303,-0.4863731563091278,0.4406392574310303,-0.4863731563091278,0.4406392574310303,0.5136268138885498,-0.02511471509933472,0.5094338655471802,-0.5593607425689697,0.5136268138885498,-0.5593607425689697,-0.4863731563091278],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			4037698979822357,
			[
				["images/thuyenbuom-sheet1.png", 6377, 0, 0, 438, 477, 1, 0.5593607425689697, 0.4863731563091278,[],[-0.490867555141449,-0.4863731563091278,-0.1095887422561646,-0.4863731563091278,0.1438352465629578,-0.4863731563091278,0.4406392574310303,-0.4863731563091278,0.4406392574310303,0.5094338655471802,-0.05936074256896973,0.5094338655471802,-0.5593607425689697,0.5136268138885498,-0.5593607425689697,-0.4863731563091278],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7988729512969912
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			5050232679513285
		]
,		[
			"Sine3",
			cr.behaviors.Sin,
			5832445072524319
		]
		],
		false,
		false,
		9322684908318041,
		[],
		null
	]
,	[
		"t114",
		cr.plugins_.Sprite,
		false,
		[2277191277615594,8056838840850448],
		3,
		0,
		null,
		[
			[
			"Default",
			1.5,
			false,
			1,
			0,
			false,
			1852731533776845,
			[
				["images/tauthuy-sheet0.png", 101620, 1, 1, 662, 396, 1, 0.4954682886600494, 0.4419191777706146,[],[0.4894256889820099,-1.788139343261719e-007,0.385196715593338,0.4343438446521759,-2.980232238769531e-007,0.5505048036575317,-0.3806642889976502,0.4242428243160248,-0.3957703709602356,-1.788139343261719e-007,-0.2824772894382477,-0.2601011991500855,-2.980232238769531e-007,-0.1111111640930176,0.1057396829128265,0.03282782435417175],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			1527773301690127,
			[
				["images/tauthuy-sheet0.png", 101620, 1, 398, 662, 396, 1, 0.5, 0.5,[],[-0.359516978263855,-0.2651520073413849,0,-0.1565659940242767,0.2235649824142456,-0.03787899017333984,0.4969789981842041,0,0.4078549742698669,0.3459600210189819,0,0.4924240112304688,-0.4048337936401367,0.3409090042114258,-0.4108760952949524,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			329040992653264
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			875389832637357
		]
,		[
			"Sine3",
			cr.behaviors.Sin,
			9298486719384549
		]
		],
		false,
		false,
		4974923739582874,
		[],
		null
	]
,	[
		"t115",
		cr.plugins_.Sprite,
		false,
		[2424162933250254,2715354898017341],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4291834807946728,
			[
				["images/taungam-sheet0.png", 78676, 1, 1, 612, 334, 1, 0.5, 0.5,[["Imagepoint 1", 0.5, 0.5]],[-0.2173199951648712,-0.2155689895153046,0,-0.4491018056869507,0.3218950033187866,-0.4041916131973267,0.3888890147209168,-0.06586799025535584,0.3921570181846619,0.4011979699134827,0,0.4940119981765747,-0.3954249918460846,0.4101799726486206,-0.4607843160629273,-0.06586799025535584],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			9633660649779679,
			[
				["images/taungam-sheet0.png", 78676, 1, 336, 612, 334, 1, 0.5, 0.5,[],[-0.3300650119781494,-0.1886230111122131,0,-0.4491018056869507,0.3366010189056397,-0.2005990147590637,0.4428099989891052,0,0.4281049966812134,0.3682630062103272,0,0.4970059990882874,-0.4297386109828949,0.3712570071220398,-0.4852941036224365,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			7472232873256738
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			2765429682019634
		]
		],
		false,
		false,
		7789688352423863,
		[],
		null
	]
,	[
		"t116",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			3,
			true,
			1,
			0,
			false,
			1006902411410922,
			[
				["images/khoi_tauthuy-sheet0.png", 2428, 1, 71, 104, 50, 1, 0.5, 0.5,[],[],0],
				["images/khoi_tauthuy-sheet0.png", 2428, 1, 1, 118, 69, 1, 0.5, 0.5072463750839233,[],[-0.3728809952735901,-0.2898553609848023,0,-0.4637680649757385,0.4322029948234558,-0.3913043737411499,0.4745759963989258,-0.01449236273765564,0.4237290024757385,0.3623186349868774,0,0.4202896356582642,-0.2881360054016113,0.1304346323013306,-0.4830507934093475,-0.01449236273765564],0],
				["images/khoi_tauthuy-sheet1.png", 3227, 1, 52, 72, 51, 1, 0.5, 0.5098039507865906,[],[-0.2777779996395111,-0.1960779428482056,0,-0.4117647409439087,0.375,-0.3333329558372498,0.4861109852790833,-0.01960796117782593,0.3472219705581665,0.2745100259780884,0,0.3921570777893066,-0.3611109852790833,0.2941180467605591,-0.4722222089767456,-0.01960796117782593],0],
				["images/khoi_tauthuy-sheet1.png", 3227, 1, 1, 104, 50, 1, 0.5, 0.5,[],[-0.4230768978595734,-0.3400000035762787,0,-0.300000011920929,0.4519230127334595,-0.4000000059604645,0.06730800867080689,0,0,0.2599999904632568,-0.4230768978595734,0.3399999737739563,-0.4807691872119904,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			638591467889099
		]
		],
		false,
		false,
		4627364345662723,
		[],
		null
	]
,	[
		"t117",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			3,
			true,
			1,
			0,
			false,
			3961603466800006,
			[
				["images/buom-sheet0.png", 111813, 1, 1, 324, 310, 1, 0.5, 0.5,[],[-0.2222220003604889,-0.2096770107746124,0,-0.4935483932495117,0.2253090143203735,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3271600008010864,0],0],
				["images/buom-sheet0.png", 111813, 326, 1, 324, 310, 1, 0.5, 0.5,[],[-0.2376540005207062,-0.2258059978485107,0,-0.4935483932495117,0.2098770141601563,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3611109852790833,0],0],
				["images/buom-sheet0.png", 111813, 651, 1, 324, 310, 1, 0.5, 0.5,[],[-0.2438269853591919,-0.2322579920291901,0,-0.4935483932495117,0.1944440007209778,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3950619995594025,0],0]
			]
			]
,			[
			"a",
			3,
			true,
			1,
			0,
			false,
			6881952955075721,
			[
				["images/buom-sheet0.png", 111813, 1, 312, 324, 310, 1, 0.5, 0.5,[],[-0.2222220003604889,-0.2096770107746124,0,-0.4935483932495117,0.2283949851989746,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3271600008010864,0],0],
				["images/buom-sheet0.png", 111813, 326, 312, 324, 310, 1, 0.5, 0.5,[],[-0.2376540005207062,-0.2258059978485107,0,-0.4935483932495117,0.2098770141601563,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3641979992389679,0],0],
				["images/buom-sheet0.png", 111813, 651, 312, 324, 310, 1, 0.5, 0.5,[],[-0.2469139993190765,-0.2354840040206909,0,-0.4935483932495117,0.1944440007209778,0,0.4907410144805908,0.490323007106781,-0.4475308954715729,0.445160984992981,-0.3950619995594025,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8806735467344282
		]
		],
		false,
		false,
		73489374384496,
		[],
		null
	]
,	[
		"t118",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8187070397612423,
			[
				["images/next-sheet0.png", 18038, 0, 0, 150, 85, 1, 0.5, 0.5058823823928833,[],[-0.386792004108429,-0.326778382062912,0,-0.326778382062912,0.3301889896392822,-0.2372253835201263,0.5,-0.0133453905582428,0.3301889896392822,0.2254605889320374,0,0.3150126338005066,-0.386792004108429,0.3150126338005066,-0.4150943160057068,-0.0133453905582428],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4596534526988939
		]
		],
		false,
		false,
		6117196333035156,
		[],
		null
	]
,	[
		"t119",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8740072643046556,
			[
				["images/prev-sheet0.png", 18065, 0, 0, 150, 85, 1, 0.5, 0.5058823823928833,[],[-0.3301889896392822,-0.2372253835201263,0,-0.3118523955345154,0.3773580193519592,-0.3118523955345154,0.4245280027389526,-0.0133453905582428,0.386792004108429,0.3150126338005066,0,0.3150126338005066,-0.3301889896392822,0.2254605889320374,-0.4905660450458527,-0.0133453905582428],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			503279698484805
		]
		],
		false,
		false,
		7903389126267432,
		[],
		null
	]
,	[
		"t120",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9623897512691742,
			[
				["images/whitebox-sheet0.png", 2183, 0, 0, 512, 256, 1, 0, 0,[],[0.00585938012227416,0.01171880029141903,0.9941409826278687,0.01171880029141903,0.9941409826278687,0.9882810115814209,0.00390625,0.9921879768371582],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			8540653720495569
		]
		],
		false,
		false,
		949295443845187,
		[],
		null
	]
,	[
		"t121",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1774168762291082
		]
		],
		false,
		false,
		9016493005702878,
		[],
		null
	]
,	[
		"t122",
		cr.plugins_.Sprite,
		false,
		[1766221017590985],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			619467180264514,
			[
				["images/reading_rotatetext-sheet0.png", 7913, 0, 0, 90, 90, 1, 0.5, 0.5,[],[-0.5,-0.5,0.5,-0.5,0.5,0.5,0.5,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1821280261051227
		]
		],
		false,
		false,
		3715820264398047,
		[],
		null
	]
,	[
		"t123",
		cr.plugins_.Sprite,
		false,
		[1749190728630015],
		1,
		0,
		null,
		[
			[
			"playsound",
			5,
			false,
			1,
			0,
			false,
			9748264890349879,
			[
				["images/reading_playsound-sheet0.png", 7614, 0, 0, 90, 90, 1, 0.5, 0.5,[],[-0.5,-0.5,-0.5,-0.5,0.5,-0.5,0.5,0.5,0.5,0.5,0.5,0.5,-0.5,0.5,-0.5,0.5],0],
				["images/reading_playsound-sheet1.png", 7727, 0, 0, 90, 90, 1, 0.5, 0.5,[],[-0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,-0.5,0.5,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5346644565892987
		]
		],
		false,
		false,
		178016806846542,
		[],
		null
	]
,	[
		"t124",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5380757484228073,
			[
				["images/readalongcontrolbackground-sheet0.png", 19367, 0, 0, 200, 92, 1, 0.5, 0.5,[],[-0.4950495064258575,-0.4901960790157318,0.495048999786377,-0.4901960790157318,0.495048999786377,0.4901959896087647,0.495048999786377,0.4901959896087647,-0.4950495064258575,0.4901959896087647],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6570204523746964
		]
		],
		false,
		false,
		9146511869610227,
		[],
		null
	]
,	[
		"t125",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		9837579249891359,
		[],
		null
	]
,	[
		"t126",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9619276597833314,
			[
				["images/menu_up-sheet0.png", 4731, 0, 0, 80, 80, 1, 0.5, 0.5,[],[0.300000011920929,-0.300000011920929,0.4374999403953552,0,0.3125,0.3125,0,0.4374999403953552,-0.3125,0.3125,-0.425000011920929,0,-0.2874999940395355,-0.2874999940395355,0,-0.4000000059604645],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5706839978315509
		]
		],
		false,
		false,
		2307694898335782,
		[],
		null
	]
,	[
		"t127",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5404487407132882,
			[
				["images/menu_up2-sheet0.png", 4722, 0, 0, 80, 80, 1, 0.5, 0.5,[],[-0.300000011920929,0.300000011920929,-0.4375,0,-0.3125,-0.3125,0,-0.4375,0.3125,-0.3125,0.425000011920929,0,0.2874999642372131,0.2874999642372131,0,0.3999999761581421],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1069485800767169
		]
		],
		false,
		false,
		1982844949298588,
		[],
		null
	]
,	[
		"t128",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5599988288420873,
			[
				["images/mo-sheet0.png", 119, 0, 0, 20, 10, 1, 0.550000011920929, 0.5,[],[],4]
			]
			]
		],
		[
		],
		false,
		false,
		5044855994391663,
		[],
		null
	]
,	[
		"t129",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			834519986294655,
			[
				["images/bongdo-sheet0.png", 3400, 0, 0, 150, 54, 1, 0.5, 0.5,[],[0.2945740222930908,-0.4784950017929077,0.492247998714447,-0.04838699102401733,0.3294569849967957,0.4784950017929077,-0.05426400899887085,-0.04838699102401733,-0.275193989276886,0.02688199281692505,-0.2131789922714233,-0.04838699102401733,-0.24031001329422,-0.02688199281692505,-0.05426400899887085,-0.09139800071716309],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			3114759304253781
		]
,		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			8551857776328415
		]
,		[
			"Sine",
			cr.behaviors.Sin,
			9603349668512223
		]
		],
		false,
		false,
		2272929510950231,
		[],
		null
	]
,	[
		"t130",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2433771737967136,
			[
				["images/bongtim-sheet0.png", 4045, 0, 0, 150, 54, 1, 1.440000057220459, 0.4259259402751923,[],[-0.6454260349273682,-0.4044209420681,-0.447752058506012,0.02568706870079041,-0.6105430722236633,0.5525690317153931,-0.9942640662193298,0.02568706870079041,-1.21519410610199,0.1009560525417328,-1.153178095817566,0.02568706870079041,-1.180310010910034,0.04719206690788269,-0.9942640662193298,-0.01732394099235535],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			7895732430772772
		]
,		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			1120329935535772
		]
,		[
			"Sine",
			cr.behaviors.Sin,
			6143374382002704
		]
		],
		false,
		false,
		6628151846021663,
		[],
		null
	]
,	[
		"t131",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1957466461010592,
			[
				["images/bongvang-sheet0.png", 4042, 0, 0, 150, 54, 1, 1.226666688919067, 0.4814814925193787,[],[-0.4320926666259766,-0.4599764943122864,-0.2344186902046204,-0.029868483543396,-0.3972097039222717,0.4970135092735291,-0.7809306979179382,-0.029868483543396,-1.001860737800598,0.04540050029754639,-0.9398447275161743,-0.029868483543396,-0.9669767022132874,-0.008363485336303711,-0.7809306979179382,-0.07287949323654175],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			7282513770865158
		]
,		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			4925362613639679
		]
,		[
			"Sine",
			cr.behaviors.Sin,
			1076322081653566
		]
		],
		false,
		false,
		7482121936058486,
		[],
		null
	]
,	[
		"t132",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3587961001468896,
			[
				["images/boto-sheet0.png", 42128, 0, 0, 461, 278, 1, 0.5010846257209778, 0.5,[],[-0.34273362159729,-0.2374100089073181,-0.002169638872146606,-0.478417307138443,0.2668113708496094,-0.1151080131530762,0.4642083644866943,0,0.4121474027633667,0.3561149835586548,-0.4164859354496002,0.3597120046615601,-0.4902386367321014,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3475771026965681
		]
		],
		false,
		false,
		987941587414751,
		[],
		null
	]
,	[
		"t133",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3190912002778952,
			[
				["images/bus3-sheet0.png", 33784, 0, 0, 472, 261, 1, 0.5, 0.5019156932830811,[],[-0.4449152946472168,-0.4022988080978394,0,-0.4865899980068207,0.4661020040512085,-0.4406130015850067,0.4978809952735901,-0.003831684589385986,0.4343219995498657,0.3793103098869324,-0.4343219995498657,0.3793103098869324,-0.4894067943096161,-0.003831684589385986],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4090715803077437
		]
		],
		false,
		false,
		8619106836827284,
		[],
		null
	]
,	[
		"t134",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3387956432029193,
			[
				["images/nkkc-sheet0.png", 17077, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5659517636593181
		]
		],
		false,
		false,
		9183343163549421,
		[],
		null
	]
,	[
		"t135",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			3,
			false,
			1,
			0,
			false,
			7307765004809267,
			[
				["images/nhaydu-sheet0.png", 3053, 0, 0, 200, 161, 1, 0.5, 0.4968944191932678,[],[0.1150000095367432,0.006211578845977783,0.3100000023841858,0.006211578845977783,0.1650000214576721,0.08695656061172485],0],
				["images/nhaydu-sheet1.png", 8112, 0, 0, 200, 161, 1, 0.5, 0.4968944191932678,[],[-0.324999988079071,0.2857145667076111,-0.4000000059604645,0.006211578845977783,-0.3050000071525574,-0.2546584010124207,0,-0.2981364130973816,0.1549999713897705,-0.06832343339920044,0.3100000023841858,0.006211578845977783,0.1650000214576721,0.08695656061172485,0,0.3478255867958069],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			3754829221865151
		]
,		[
			"Sine",
			cr.behaviors.Sin,
			7666012405856827
		]
,		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			1652419904955239
		]
		],
		false,
		false,
		7186286958675463,
		[],
		null
	]
,	[
		"t136",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9435694085852751,
			[
				["images/nmaybay-sheet0.png", 18227, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8391464158515353
		]
		],
		false,
		false,
		5693383881337175,
		[],
		null
	]
,	[
		"t137",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4481553510518388,
			[
				["images/nmbtt-sheet0.png", 22318, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5063421035429497
		]
		],
		false,
		false,
		6285489158263969,
		[],
		null
	]
,	[
		"t138",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8284413653051737,
			[
				["images/noto-sheet0.png", 16488, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4915981294613688
		]
		],
		false,
		false,
		2820770972217387,
		[],
		null
	]
,	[
		"t139",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6439518328245927,
			[
				["images/ntaungam-sheet0.png", 18730, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			186066217286762
		]
		],
		false,
		false,
		7442673570620564,
		[],
		null
	]
,	[
		"t140",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8159818751356005,
			[
				["images/ntauthuy-sheet0.png", 16149, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2086651411123875
		]
		],
		false,
		false,
		2664311433590373,
		[],
		null
	]
,	[
		"t141",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7207380554147125,
			[
				["images/nthuyenbuom-sheet0.png", 18903, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2662543034061552
		]
		],
		false,
		false,
		4386475922946153,
		[],
		null
	]
,	[
		"t142",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1996840420455715,
			[
				["images/nxebuyt-sheet0.png", 17962, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8403280835016371
		]
		],
		false,
		false,
		1115541420288638,
		[],
		null
	]
,	[
		"t143",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			630676105938291,
			[
				["images/nxedap-sheet0.png", 18081, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7277448221390028
		]
		],
		false,
		false,
		6003272981853914,
		[],
		null
	]
,	[
		"t144",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			284310157993119,
			[
				["images/maybay3-sheet0.png", 52902, 0, 0, 462, 276, 1, 0.5, 0.5,[],[-0.3463200032711029,-0.2427540123462677,0,-0.3623189926147461,0.4523810148239136,-0.4202899038791657,0.4112550020217896,0,0.3030300140380859,0.1702899932861328,0,0.3224639892578125,-0.3658010065555573,0.2753620147705078,-0.4588744938373566,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1606820142503798
		]
		],
		false,
		false,
		1458991251669241,
		[],
		null
	]
,	[
		"t145",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1542324176836103,
			[
				["images/nxemay-sheet0.png", 18042, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			177366073019614
		]
		],
		false,
		false,
		2631250382768447,
		[],
		null
	]
,	[
		"t146",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			230277953953894,
			[
				["images/1tauthuy-sheet0.png", 59646, 0, 0, 500, 304, 1, 0.5, 0.5,[],[0.4980000257492065,0,0.406000018119812,0.345395028591156,0,0.4868419766426086,-0.4020000100135803,0.3388159871101379,-0.4099999964237213,0,-0.3560000061988831,-0.263157993555069,0,-0.1578949987888336,0.2179999947547913,-0.03618401288986206],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5995501055358152
		]
		],
		false,
		false,
		6200748254550151,
		[],
		null
	]
,	[
		"t147",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6617702498323574,
			[
				["images/taungamghep-sheet0.png", 73995, 0, 0, 416, 270, 1, 0.5, 0.5,[],[-0.237980991601944,-0.09629601240158081,0,-0.4777778089046478,0.3125,-0.2111110091209412,0.4302880167961121,0.3925930261611939,0,0.5,-0.432692289352417,0.3962960243225098,-0.4447115063667297,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3484964094401312
		]
		],
		false,
		false,
		9638931422916654,
		[],
		null
	]
,	[
		"t148",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6631454526674619,
			[
				["images/khinhkhicau2-sheet0.png", 46330, 0, 0, 291, 410, 1, 0.4914089441299439, 0.6902438998222351,[],[-0.3436429500579834,-0.585365891456604,0.006873041391372681,-0.6878048777580261,0.3573880791664124,-0.582926869392395,0.4604810476303101,-0.1902438998222351,0.1443300843238831,0.05121910572052002,0.006873041391372681,0.3024390935897827,-0.1374569535255432,0.0585361123085022,-0.4467354416847229,-0.1902438998222351],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			168014025324221
		]
		],
		false,
		false,
		6003251072087853,
		[],
		null
	]
,	[
		"t149",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"bienmat",
			15,
			false,
			1,
			0,
			false,
			9356415805035771,
			[
				["images/khoi01-sheet0.png", 38948, 1, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[0.06211143732070923,-0.03571400046348572,-0.006211578845977783,-0.03571400046348572,0.09937840700149536,0,-0.1055895686149597,0.005101978778839111,-0.006211578845977783,0.04081600904464722,-0.1118015944957733,0],0],
				["images/khoi01-sheet0.png", 38948, 163, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[-0.03726658225059509,-0.117347002029419,-0.006211578845977783,-0.1530610024929047,0.03726744651794434,-0.1224490106105804,0.2360244393348694,0,0.06211143732070923,0.1428570151329041,-0.006211578845977783,0.1020410060882568,-0.09937858581542969,0.1683670282363892,-0.254658579826355,0],0],
				["images/khoi01-sheet0.png", 38948, 325, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[-0.06211158633232117,-0.1377550065517426,-0.006211578845977783,-0.1938779950141907,0.09316742420196533,-0.1683669984340668,0.3043473958969116,0,0.09937840700149536,0.1734690070152283,-0.006211578845977783,0.1377549767494202,-0.1118015944957733,0.1785709857940674,-0.304347574710846,0],0],
				["images/khoi01-sheet0.png", 38948, 1, 198, 161, 196, 1, 0.5031055808067322, 0.5,[],[-0.1118015944957733,-0.1785709857940674,-0.006211578845977783,-0.25,0.1801244020462036,-0.2397960126399994,0.4720494151115418,0,0.1366463899612427,0.2040820121765137,-0.1677015721797943,0.2244899868965149,-0.4161490797996521,0],0],
				["images/khoi01-sheet0.png", 38948, 163, 198, 161, 196, 1, 0.5031055808067322, 0.5,[],[-0.03105556964874268,-0.1122449934482575,-0.006211578845977783,-0.3163270056247711,0.2670804262161255,-0.3112239837646484,0.4099374413490295,0,0.1490684151649475,0.2142860293388367,-0.006211578845977783,0.25,-0.0745345950126648,0.1479589939117432,-0.5031055808067322,0],0],
				["images/khoi01-sheet0.png", 38948, 325, 198, 161, 196, 1, 0.5031055808067322, 0.5,[],[-0.05590057373046875,-0.1326529979705811,-0.006211578845977783,-0.3316330015659332,0.2298133969306946,-0.2806119918823242,-0.4658384919166565,0,-0.3105585873126984,-0.1632649898529053,-0.006211578845977783,0.2653059959411621,-0.4906831681728363,0],0],
				["images/khoi01-sheet1.png", 3939, 1, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[0.2608694434165955,0.1275510191917419,-0.006211578845977783,-0.3469389975070953,0.2422364354133606,-0.2908160090446472,-0.4968943893909454,0,-0.3416145741939545,-0.1887759864330292,-0.006211578845977783,0.1683670282363892,-0.5031055808067322,0],0],
				["images/khoi01-sheet1.png", 3939, 163, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[],0],
				["images/khoi01-sheet1.png", 3939, 325, 1, 161, 196, 1, 0.5031055808067322, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4429649031645098
		]
		],
		false,
		false,
		1656726183241223,
		[],
		null
	]
,	[
		"t150",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3233878795455477,
			[
				["images/mbtructhang-sheet0.png", 86956, 0, 0, 528, 484, 1, 0.623106062412262, 0.4979338943958283,[],[-0.2803030610084534,-0.1239669024944305,-0.123106062412262,-0.4214875996112824,0.2537879347801209,-0.3636358976364136,0.3598489165306091,0.002066105604171753,0.3011359572410584,0.4194211065769196,-0.123106062412262,0.4504130780696869,-0.2973480522632599,0.1466940939426422,-0.5757575631141663,0.002066105604171753],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			9099869054570328
		]
		],
		false,
		false,
		2126910886432578,
		[],
		null
	]
,	[
		"t151",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7910788460312556,
			[
				["images/thuyenbuom5-sheet0.png", 67304, 0, 0, 483, 491, 1, 0.4865424335002899, 0.505091667175293,[],[-0.1262944340705872,0.04684334993362427,-0.002070426940917969,-0.2708756625652313,0.3395445644855499,-0.1649696528911591,0.4306415617465973,3.576278686523438e-007,0.4078675806522369,0.2321793437004089,-0.002070426940917969,0.4908353090286255,-0.4347826242446899,0.2566193342208862,-0.3830224275588989,3.576278686523438e-007],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7473955651672394
		]
		],
		false,
		false,
		9279771590387675,
		[],
		null
	]
,	[
		"t152",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5608565184708688,
			[
				["images/xedap2-sheet0.png", 66107, 0, 0, 326, 267, 1, 0.5, 0.5018726587295532,[],[-0.2576690018177033,-0.2059926688671112,0,-0.4344569444656372,0.3742330074310303,-0.00374564528465271,0.4079750180244446,0.3857673406600952,-0.4386503100395203,0.4232213497161865,-0.4202454090118408,-0.00374564528465271],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2111867903676377
		]
		],
		false,
		false,
		3927112763335345,
		[],
		null
	]
,	[
		"t153",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8623102489500775,
			[
				["images/xemay2-sheet0.png", 48662, 0, 0, 330, 267, 1, 0.5, 0.5018726587295532,[],[-0.2090910077095032,-0.1423216462135315,0,-0.2808986604213715,0.2606059908866882,-0.2059926688671112,0.3424239754676819,-0.00374564528465271,0.445455014705658,0.4307113289833069,0,0.3558053374290466,-0.4090909063816071,0.3857673406600952,-0.4848484992980957,-0.00374564528465271],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7434664020614879
		]
		],
		false,
		false,
		4160543862865763,
		[],
		null
	]
,	[
		"t154",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3971752009444183,
			[
				["images/xetai_fis-sheet0.png", 32299, 0, 0, 500, 309, 1, 0.5, 0.5016181468963623,[],[-0.4440000057220459,-0.4110032320022583,0,-0.443365752696991,0.3820000290870667,-0.3106791377067566,0.4419999718666077,-0.003236144781112671,0.4399999976158142,0.4012948274612427,0,0.4822008609771729,-0.4399999976158142,0.4012948274612427,-0.4699999988079071,-0.003236144781112671],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7745214557086969
		]
		],
		false,
		false,
		2636782872378675,
		[],
		null
	]
,	[
		"t155",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7810092893514358,
			[
				["images/xichlo2-sheet0.png", 57238, 0, 0, 335, 268, 1, 0.5014925599098206, 0.5,[],[-0.1462685465812683,-0.05597001314163208,-0.002985566854476929,-0.4701493084430695,0.1761194467544556,-0.09701499342918396,0.2447764277458191,0,0.4417914152145386,0.4291049838066101,-0.002985566854476929,0.3992540240287781,-0.3283585608005524,0.2835819721221924,-0.3134325742721558,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2864286535759692
		]
		],
		false,
		false,
		9898634150188309,
		[],
		null
	]
,	[
		"t156",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9377450817586312,
			[
				["images/nxetai-sheet0.png", 16120, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2966032788902232
		]
		],
		false,
		false,
		3306896670036436,
		[],
		null
	]
,	[
		"t157",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			819740194623686,
			[
				["images/nxichlo-sheet0.png", 17475, 0, 0, 278, 493, 1, 0.5, 0.4989857971668243,[],[-0.3633089959621429,0.423935204744339,-0.4352518022060394,0.002028197050094605,-0.2733809947967529,-0.3711968064308167,0,-0.3813388049602509,0.4280580282211304,-0.4584178924560547,0.4388489723205566,0.002028197050094605,0.3669059872627258,0.4259631931781769,0,0.4746452271938324],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5324944088828741
		]
		],
		false,
		false,
		7488998403148224,
		[],
		null
	]
,	[
		"t158",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			3,
			false,
			1,
			0,
			false,
			3591095392516755,
			[
				["images/denxemay-sheet0.png", 11319, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[-0.1714290082454681,-0.213836669921875,0,-0.2893086671829224,0.07142901420593262,-0.125786691904068,0.05714297294616699,0.1069183349609375,0,0.2767293453216553,-0.1642859876155853,0.2012583017349243,-0.4571428894996643,-0.006289690732955933],0],
				["images/denxemay-sheet1.png", 204, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[],3]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			91993316869955
		]
		],
		false,
		false,
		5063728952347504,
		[],
		null
	]
,	[
		"t159",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8336012342593629,
			[
				["images/03xt-sheet0.png", 4682, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,-0.00411561131477356,-0.5035461187362671,0.4609053730964661,-0.4397163093090057,0.4897124171257019,-0.007092118263244629,0.411522388458252,0.3475179076194763,-0.00411561131477356,0.4255318641662598,-0.4855967164039612,0.4680848717689514],0]
			]
			]
		],
		[
		],
		false,
		false,
		6830531421286704,
		[],
		null
	]
,	[
		"t160",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8947007593184444,
			[
				["images/1bus-sheet0.png", 1561, 0, 0, 236, 131, 1, 0.5, 0.5038167834281921,[["Imagepoint 1", 0.9957627058029175, 0.9923664331436157]],[-0.389831006526947,-0.3053437769412994,0,-0.4732823967933655,0.4830510020256043,-0.4732823967933655,0.5,0.4961832165718079,0,0.4961832165718079,-0.4788135886192322,0.4580152034759522,-0.4576270878314972,-0.007633775472640991],0]
			]
			]
		],
		[
		],
		false,
		false,
		4812198345830514,
		[],
		null
	]
,	[
		"t161",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4574284170431525,
			[
				["images/1chieu-sheet0.png", 103010, 0, 0, 1280, 354, 1, 0.5, 0.5,[],[-0.4882811903953552,-0.4576270878314972,0,0.1836159825325012,0.3117190003395081,0.1807910203933716,-0.4765625,0,0.4984380006790161,0.494350016117096,-0.4984374940395355,0.494350016117096],0]
			]
			]
		],
		[
		],
		false,
		false,
		3087000794954434,
		[],
		null
	]
,	[
		"t162",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			923578054145329,
			[
				["images/1oto-sheet0.png", 4559, 0, 0, 230, 139, 1, 0.5, 0.5035971403121948,[["Imagepoint 1", 1, 0.9928057789802551]],[-0.1652170121669769,0.05035984516143799,0,-0.4460431337356567,0.4695649743080139,-0.4532374441623688,0.5,-0.00719413161277771,0.5,0.4964028596878052,0,0.4964028596878052,-0.1434780061244965,-0.09352514147758484],0]
			]
			]
		],
		[
		],
		false,
		false,
		214818220874313,
		[],
		null
	]
,	[
		"t163",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7918803843101705,
			[
				["images/1xd-sheet0.png", 5461, 0, 0, 171, 131, 1, 0.5029239654541016, 0.5038167834281921,[],[-0.04678395390510559,0.09160321950912476,-0.005847960710525513,-0.2900767922401428,0.4152050614356995,-0.3969467878341675,0.1169590353965759,-0.007633775472640991,0.1169590353965759,2.384185791015625e-007,-0.005847960710525513,0.4961832165718079,-0.4385964572429657,0.4122142195701599,-0.01169595122337341,-0.007633775472640991],0]
			]
			]
		],
		[
		],
		false,
		false,
		5489344277153892,
		[],
		null
	]
,	[
		"t164",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4477026985784271,
			[
				["images/1xl-sheet0.png", 5256, 0, 0, 233, 88, 1, 0.5021459460258484, 0.5,[],[-0.004291951656341553,-0.4772726893424988,0.3433480262756348,-0.09090900421142578,0.3776820302009583,0,0.4935620427131653,0.4886360168457031,-0.004291951656341553,-0.02272701263427734,-0.184548944234848,-0.3409090042114258,-0.1931329369544983,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		5923532936885657,
		[],
		null
	]
,	[
		"t165",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			709497655728341,
			[
				["images/1xm-sheet0.png", 5330, 0, 0, 167, 133, 1, 0.5029940009117127, 0.5037593841552734,[],[-0.455089807510376,-0.4436089992523193,-0.005988001823425293,-0.5037593841552734,0.2514969706535339,-0.1954883933067322,0.3053889870643616,-0.007518380880355835,0.2814369797706604,0.2255635857582092,-0.005988001823425293,0.4962406158447266,-0.2634730041027069,0.1954886317253113,-0.5029940009117127,-0.007518380880355835],0]
			]
			]
		],
		[
		],
		false,
		false,
		5410039397525101,
		[],
		null
	]
,	[
		"t166",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4379352941542599,
			[
				["images/1xt-sheet0.png", 5367, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,-0.00411561131477356,-0.3687941133975983,0.2798354029655457,-0.1276591122150421,0.2921813726425171,0.141843855381012,-0.00411561131477356,0.4964538812637329,-0.5020576119422913,0.4964538812637329],0]
			]
			]
		],
		[
		],
		false,
		false,
		5629344714705974,
		[],
		null
	]
,	[
		"t167",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5931494139011483,
			[
				["images/2bus-sheet0.png", 1156, 0, 0, 236, 131, 1, 0.5, 0.5038167834281921,[],[-0.4830507934093475,-0.4732823967933655,0,-0.4732823967933655,0.4322029948234558,-0.3816797733306885,0.4915249943733215,-0.007633775472640991,0.4957630038261414,0.4885492324829102,-0.5,0.4961832165718079],0]
			]
			]
		],
		[
		],
		false,
		false,
		6341512448995729,
		[],
		null
	]
,	[
		"t168",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2672026764351094,
			[
				["images/2oto-sheet0.png", 4483, 0, 0, 231, 139, 1, 0.2900432944297791, 0.5179855823516846,[],[-0.2640692889690399,-0.474820077419281,0.2077917158603668,0.02158242464065552,0.2597407102584839,0.2302154302597046,0.1991336941719055,-0.02158257365226746,0.2077917158603668,0.4820144176483154,-0.2900432944297791,0.4820144176483154,-0.2900432944297791,-0.02158257365226746],0]
			]
			]
		],
		[
		],
		false,
		false,
		6636653937733018,
		[],
		null
	]
,	[
		"t169",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2266541225224726,
			[
				["images/2xd-sheet0.png", 5335, 0, 0, 180, 89, 1, 0.5, 0.5056179761886597,[],[-0.4277777969837189,-0.3595509827136993,0,-0.4044939875602722,0.4555559754371643,-0.4157303869724274,0.3500000238418579,0.1910110116004944,0,0.4719099998474121,-0.3666670024394989,0.2247190475463867,-0.3833329975605011,-0.01123598217964172],0]
			]
			]
		],
		[
		],
		false,
		false,
		6210180463383848,
		[],
		null
	]
,	[
		"t170",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7494548179861116,
			[
				["images/2xl-sheet0.png", 5144, 0, 0, 233, 87, 1, 0.5021459460258484, 0.5057471394538879,[],[-0.2703859508037567,0.1149428486824036,-0.004291951656341553,-0.459770143032074,0.489270031452179,-0.482758641242981,0.3133050799369812,-0.01149412989616394,0.3133050799369812,-1.192092895507813e-007,-0.004291951656341553,0.4942528605461121,-0.497854083776474,0.4827588796615601,-0.2317599356174469,-0.01149412989616394],0]
			]
			]
		],
		[
		],
		false,
		false,
		4563378238783098,
		[],
		null
	]
,	[
		"t171",
		cr.plugins_.AJAX,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4248955786407346,
		[],
		null
		,[]
	]
,	[
		"t172",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8547092452120749,
			[
				["images/appstore_dongy-sheet0.png", 7608, 0, 0, 252, 83, 1, 0.4682539701461792, 0.4216867387294769,[],[-0.4404761791229248,-0.3373494446277618,0.0317460298538208,-0.409638524055481,0.5039680004119873,-0.3373494446277618,0.5277780294418335,0.07228925824165344,0.5039680004119873,0.4939762651920319,0.0317460298538208,0.5662652254104614,-0.4404761791229248,0.4939762651920319,-0.4642857313156128,0.07228925824165344],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1195018203405366
		]
		],
		false,
		false,
		8783571861457552,
		[],
		null
	]
,	[
		"t173",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6934661501416586,
			[
				["images/appstore_question-sheet0.png", 67319, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1525118729020366,
		[],
		null
	]
,	[
		"t174",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6770191131916234,
			[
				["images/appstore_boqua-sheet0.png", 7210, 0, 0, 252, 83, 1, 0.4682539701461792, 0.4216867387294769,[],[-0.4404761791229248,-0.3373494446277618,0.0317460298538208,-0.409638524055481,0.5039680004119873,-0.3373494446277618,0.5277780294418335,0.07228925824165344,0.5039680004119873,0.4939762651920319,0.0317460298538208,0.5662652254104614,-0.4404761791229248,0.4939762651920319,-0.4642857313156128,0.07228925824165344],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2440569878230356
		]
		],
		false,
		false,
		2745292854422679,
		[],
		null
	]
,	[
		"t175",
		cr.plugins_.Dictionary,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		811753735162058,
		[],
		null
	]
,	[
		"t176",
		cr.plugins_.cjs,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		7411269615582723,
		[],
		null
	]
,	[
		"t177",
		cr.plugins_.Sprite,
		false,
		[174350540732422,8624120250195916,1823660992683924,9965615826549016],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9885327783098405,
			[
				["images/xl1-sheet0.png", 8858, 0, 0, 233, 88, 1, 0.5021459460258484, 0.5,[],[-0.004291951656341553,-0.4772726893424988,0.4978540539741516,-0.5,0.4978540539741516,0,0.4935620427131653,0.4886360168457031,0.05364805459976196,0.5,-0.5021459460258484,0.4943180084228516,-0.5021459460258484,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		1654169377798763,
		[],
		null
	]
,	[
		"t178",
		cr.plugins_.Sprite,
		false,
		[8801407512048123,9363695336278191,3847009068219955,1508734717548015],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2923151612543619,
			[
				["images/xl2-sheet0.png", 13385, 0, 0, 233, 87, 1, 0.5021459460258484, 0.5057471394538879,[],[-0.1523599326610565,-0.5057471394538879,-0.004291951656341553,-0.459770143032074,0.489270031452179,-0.482758641242981,0.4978540539741516,0.4942528605461121,0.3927040696144104,0.4942528605461121,-0.004291951656341553,0.4942528605461121,-0.497854083776474,0.4827588796615601,-0.5021459460258484,-0.5057471394538879],0]
			]
			]
		],
		[
		],
		false,
		false,
		9227988927886654,
		[],
		null
	]
,	[
		"t179",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9309484482618207,
			[
				["images/3xl-sheet0.png", 6059, 0, 0, 233, 88, 1, 0.5021459460258484, 0.5,[],[-0.493562251329422,-0.4772726893424988,-0.004291951656341553,-0.5,0.3948500752449036,-0.2272729873657227,0.3948500752449036,0,0.3519310355186462,0.1136360168457031,-0.004291951656341553,0.4886360168457031,-0.2618029415607452,-0.1363640129566193,-0.2489269375801086,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8380695328787803,
		[],
		null
	]
,	[
		"t180",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1144405739396222,
			[
				["images/4xl-sheet0.png", 7707, 0, 0, 125, 168, 1, 0.5040000081062317, 0.5,[],[-0.4000000059604645,-0.4226189851760864,-0.008000016212463379,-0.4523810148239136,0.04000002145767212,-0.1607140004634857,0.4319999814033508,0,0.3600000143051148,0.3988100290298462,-0.008000016212463379,0.494047999382019,-0.3120000064373016,0.357142984867096,-0.4960000216960907,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		156265668991388,
		[],
		null
	]
,	[
		"t181",
		cr.plugins_.Sprite,
		false,
		[659101664148873,2597447357820264,5583615231879875,9745153062673661],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7469926376923389,
			[
				["images/xl3-sheet0.png", 16485, 0, 0, 233, 88, 1, 0.5021459460258484, 0.5,[],[-0.493562251329422,-0.4772726893424988,-0.004291951656341553,-0.5,0.4978540539741516,-0.5,0.4978540539741516,-0.05113598704338074,0.4978540539741516,0.5,-0.004291951656341553,0.4886360168457031,-0.5021459460258484,0.5,-0.5021459460258484,0.1193180084228516],0]
			]
			]
		],
		[
		],
		false,
		false,
		5814262701293825,
		[],
		null
	]
,	[
		"t182",
		cr.plugins_.Sprite,
		false,
		[4349070684349199,9474072126823255,1932413807847753,398475539391147],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8267611835161214,
			[
				["images/xl4-sheet0.png", 19478, 0, 0, 125, 168, 1, 0.5040000081062317, 0.5,[],[-0.5040000081062317,-0.5,0.1840000152587891,-0.5,0.4959999918937683,-0.5,0.4959999918937683,0,0.4959999918937683,0.5,-0.008000016212463379,0.494047999382019,-0.5040000081062317,0.5,-0.4960000216960907,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		297012815314454,
		[],
		null
	]
,	[
		"t183",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3022686838941822,
			[
				["images/bandapxichlo-sheet0.png", 4740, 0, 0, 125, 68, 1, 0.5040000081062317, 0.5,[],[-0.3759999871253967,-0.264706015586853,-0.008000016212463379,-0.4264706075191498,0.3759999871253967,-0.2794120013713837,0.4319999814033508,0,0.3759999871253967,0.2794119715690613,-0.008000016212463379,0.4264709949493408,-0.3759999871253967,0.264706015586853,-0.4320000112056732,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			2547992070935841,
			[
				["images/bandapxichlo-sheet1.png", 897, 0, 0, 125, 68, 1, 0.5040000081062317, 0.5,[],[-0.3840000033378601,-0.2794120013713837,-0.008000016212463379,-0.4264706075191498,0.3759999871253967,-0.2794120013713837,0.4319999814033508,0,0.3759999871253967,0.2794119715690613,-0.008000016212463379,0.4264709949493408,-0.3840000033378601,0.2794119715690613,-0.4320000112056732,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5719385429000588
		]
		],
		false,
		false,
		9586012550872748,
		[],
		null
	]
,	[
		"t184",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7704391408888353,
			[
				["images/bandapxichlo2-sheet0.png", 7051, 1, 1, 123, 202, 1, 0.7479674816131592, 0.1881188154220581,[],[-0.2520324885845184,0.05445519089698792,0.05691051483154297,-0.06930681318044663,-0.05691045522689819,0.3118811845779419,-0.2113825082778931,0.5297031998634338,-0.2520324885845184,0.5693072080612183,-0.5528454780578613,0.6930691599845886,-0.4471544921398163,0.3118811845779419],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			2323895959576992,
			[
				["images/bandapxichlo2-sheet0.png", 7051, 125, 1, 123, 202, 1, 0.5040650367736816, 0.5,[],[-0.008130043745040894,-0.2623760104179382,0.3008129596710205,-0.3811880052089691,0.1951219439506531,0,0.03251993656158447,0.2178220152854919,-0.008130043745040894,0.2623760104179382,-0.3089430332183838,0.3811879754066467,-0.2032520473003388,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			8869293192953681
		]
		],
		false,
		false,
		6633192735834495,
		[],
		null
	]
,	[
		"t185",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8493991278497206,
			[
				["images/bandapxichlo2-sheet0.png", 7051, 1, 1, 123, 202, 1, 0.2682926952838898, 0.8168317079544067,[],[0.227642297744751,-0.5742577314376831,0.5365853309631348,-0.6980196833610535,0.4227643311023712,-0.3168317079544067,0.2682922780513763,-0.0990096926689148,0.227642297744751,-0.05940568447113037,-0.07317069172859192,0.06435626745223999,0.03252029418945313,-0.3168317079544067],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			9709386180762158,
			[
				["images/bandapxichlo3-sheet0.png", 2141, 0, 0, 123, 202, 1, 0.2682926952838898, 0.8168317079544067,[],[0.227642297744751,-0.579207718372345,0.5365853309631348,-0.6980196833610535,0.430894285440445,-0.3168317079544067,0.2682922780513763,-0.0990096926689148,0.227642297744751,-0.05445569753646851,-0.07317069172859192,0.06435626745223999,0.03252029418945313,-0.3168317079544067],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			1093706032741934
		]
		],
		false,
		false,
		1862309279576512,
		[],
		null
	]
,	[
		"t186",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7780293207262125,
			[
				["images/bandapxichlo-sheet0.png", 4740, 0, 0, 125, 68, 1, 0.5040000081062317, 0.5,[],[-0.3759999871253967,-0.264706015586853,-0.008000016212463379,-0.4264706075191498,0.3759999871253967,-0.2794120013713837,0.4319999814033508,0,0.3759999871253967,0.2794119715690613,-0.008000016212463379,0.4264709949493408,-0.3759999871253967,0.264706015586853,-0.4320000112056732,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			4998489513338538,
			[
				["images/bandapxichlo4-sheet0.png", 921, 0, 0, 125, 68, 1, 0.5040000081062317, 0.5,[],[-0.3840000033378601,-0.2794120013713837,-0.008000016212463379,-0.4264706075191498,0.3759999871253967,-0.2794120013713837,0.4319999814033508,0,0.3759999871253967,0.2794119715690613,-0.008000016212463379,0.4264709949493408,-0.3840000033378601,0.2794119715690613,-0.4320000112056732,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1423920408207256
		]
		],
		false,
		false,
		6831953908431141,
		[],
		null
	]
,	[
		"t187",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			859984422341717,
			[
				["images/banhxichlo-sheet0.png", 17421, 0, 0, 126, 126, 1, 0.5, 0.5,[],[-0.3492060005664825,-0.3492060005664825,0,-0.4920634925365448,0.3492059707641602,-0.3492060005664825,0.4920629858970642,0,0.3492059707641602,0.3492059707641602,0,0.5,-0.3492060005664825,0.3492059707641602,-0.4920634925365448,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			3755431076988202,
			[
				["images/banhxichlo-sheet1.png", 4730, 0, 0, 126, 126, 1, 0.5, 0.5,[],[-0.3492060005664825,-0.3492060005664825,0,-0.4920634925365448,0.3492059707641602,-0.3492060005664825,0.5,0,0.3492059707641602,0.3492059707641602,0,0.5,-0.3492060005664825,0.3492059707641602,-0.5,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			7335531875557989
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			8147356831654598
		]
		],
		false,
		false,
		2179066428819227,
		[],
		null
	]
,	[
		"t188",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3685034639991491,
			[
				["images/3xd-sheet0.png", 6496, 0, 0, 171, 131, 1, 0.5029239654541016, 0.5038167834281921,[],[-0.385964959859848,-0.3511447906494141,-0.005847960710525513,-0.5038167834281921,0.1871340274810791,-0.09923678636550903,0.2105260491371155,-0.007633775472640991,0.2046780586242676,0.1145042181015015,-0.005847960710525513,0.4427481889724731,-0.4035087823867798,0.3664122223854065,-0.4970760047435761,-0.007633775472640991],0]
			]
			]
		],
		[
		],
		false,
		false,
		1510531172390948,
		[],
		null
	]
,	[
		"t189",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6781400256261702,
			[
				["images/4xd-sheet0.png", 4824, 0, 0, 180, 90, 1, 0.5, 0.5,[["Imagepoint 1", 0.005555555690079927, 1.01111114025116]],[-0.3388890027999878,-0.1777780055999756,0,-0.4888888895511627,0.2611110210418701,-0.02222201228141785,0.2777779698371887,0,0.300000011920929,0.1000000238418579,0,0.5,-0.4611110985279083,0.4222220182418823,-0.4944444298744202,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		1305432957948002,
		[],
		null
	]
,	[
		"t190",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5509626686632104,
			[
				["images/bandapxedap-sheet0.png", 4164, 1, 1, 200, 100, 1, 0.5, 0.5,[],[-0.4200000166893005,-0.3400000035762787,0,-0.4600000083446503,0.4200000166893005,-0.3400000035762787,0.4750000238418579,0,0.4200000166893005,0.3399999737739563,0,0.4700000286102295,-0.425000011920929,0.3500000238418579,-0.4799999892711639,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			9426894885457971,
			[
				["images/bandapxedap-sheet0.png", 4164, 1, 102, 200, 100, 1, 0.5, 0.5,[],[-0.4200000166893005,-0.3400000035762787,0,-0.4600000083446503,0.4200000166893005,-0.3400000035762787,0.4750000238418579,0,0.4200000166893005,0.3399999737739563,0,0.4700000286102295,-0.425000011920929,0.3500000238418579,-0.4799999892711639,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6601496981940132
		]
		],
		false,
		false,
		6718783599385202,
		[],
		null
	]
,	[
		"t191",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1518927486727154,
			[
				["images/bandapxedap2-sheet0.png", 12737, 0, 0, 153, 224, 1, 0.758169949054718, 0.1339285671710968,[],[-0.2614379525184631,0.04017843306064606,0.1307190656661987,-0.05803566426038742,-0.03921592235565186,0.3660714328289032,-0.2614379525184631,0.6785714626312256,-0.6470589637756348,0.7901784181594849,-0.4901959598064423,0.3660714328289032],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			5473540120038801,
			[
				["images/bandapxedap2-sheet1.png", 2937, 0, 0, 153, 224, 1, 0.5032680034637451, 0.5,[],[-0.006536006927490234,-0.325892984867096,0.3856210112571716,-0.4241071045398712,0.215686023235321,0,-0.006536006927490234,0.3169639706611633,-0.3921570181846619,0.4241070151329041,-0.2352940142154694,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			947748458578854
		]
		],
		false,
		false,
		4758700889810992,
		[],
		null
	]
,	[
		"t192",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6446175462958826,
			[
				["images/bandapxedap3-sheet0.png", 8028, 0, 0, 153, 224, 1, 0.2483660131692886, 0.8616071343421936,[],[0.2483659833669663,-0.6875001192092896,0.6405230164527893,-0.7857142090797424,0.4705880284309387,-0.3616071343421936,0.2483659833669663,-0.0491071343421936,-0.1372550129890442,0.06249988079071045,0.01960797607898712,-0.3616071343421936],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			560242826653044,
			[
				["images/bandapxedap3-sheet1.png", 2932, 0, 0, 153, 224, 1, 0.2483660131692886, 0.8616071343421936,[],[0.2483659833669663,-0.6875001192092896,0.6405230164527893,-0.7857142090797424,0.4705880284309387,-0.3616071343421936,0.2483659833669663,-0.04464316368103027,-0.1372550129890442,0.06249988079071045,0.01960797607898712,-0.3616071343421936],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			2545420597474734
		]
		],
		false,
		false,
		8392254464667598,
		[],
		null
	]
,	[
		"t193",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5457634372670383,
			[
				["images/bandapxedap-sheet0.png", 4164, 1, 1, 200, 100, 1, 0.5, 0.5,[],[-0.4200000166893005,-0.3400000035762787,0,-0.4600000083446503,0.4200000166893005,-0.3400000035762787,0.4750000238418579,0,0.4200000166893005,0.3399999737739563,0,0.4700000286102295,-0.425000011920929,0.3500000238418579,-0.4799999892711639,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			4404030785208814,
			[
				["images/bandapxedap4-sheet0.png", 1381, 0, 0, 200, 100, 1, 0.5, 0.5,[],[-0.4200000166893005,-0.3400000035762787,0,-0.4600000083446503,0.4200000166893005,-0.3400000035762787,0.4750000238418579,0,0.4200000166893005,0.3399999737739563,0,0.4700000286102295,-0.425000011920929,0.3500000238418579,-0.4799999892711639,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7601301226323693
		]
		],
		false,
		false,
		7537983395168591,
		[],
		null
	]
,	[
		"t194",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			true,
			1,
			0,
			false,
			6681295404636115,
			[
				["images/banhxedap-sheet0.png", 14913, 0, 0, 114, 115, 1, 0.5, 0.5043478012084961,[],[-0.3508769869804382,-0.3565217852592468,0,-0.5043478012084961,0.3508769869804382,-0.3565217852592468,0.5,-0.008695811033248901,0.3508769869804382,0.3478261828422546,0,0.4956521987915039,-0.3508769869804382,0.3478261828422546,-0.5,-0.008695811033248901],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			8560077956154991,
			[
				["images/banhxedap-sheet1.png", 4021, 0, 0, 114, 115, 1, 0.5, 0.5043478012084961,[],[-0.3508769869804382,-0.3565217852592468,0,-0.5043478012084961,0.3508769869804382,-0.3565217852592468,0.5,-0.008695811033248901,0.3508769869804382,0.3478261828422546,0,0.4956521987915039,-0.3508769869804382,0.3478261828422546,-0.5,-0.008695811033248901],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			2191130718265624
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			9779158264798848
		]
		],
		false,
		false,
		3501091276178557,
		[],
		null
	]
,	[
		"t195",
		cr.plugins_.Sprite,
		false,
		[3906107388959638,649089931466986,3436709978352622,4905395100561818],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6399857613730511,
			[
				["images/xd1-sheet0.png", 15479, 0, 0, 171, 131, 1, 0.5029239654541016, 0.5038167834281921,[],[-0.5029239654541016,-0.01908379793167114,-0.5029239654541016,-0.5038167834281921,0.4970760345458984,-0.5038167834281921,0.4970760345458984,0.4961832165718079,0.2543860077857971,0.4961832165718079,-0.005847960710525513,0.4961832165718079,-0.5029239654541016,0.4961832165718079,-0.5029239654541016,0.1488552093505859],0]
			]
			]
		],
		[
		],
		false,
		false,
		2768799057513348,
		[],
		null
	]
,	[
		"t196",
		cr.plugins_.Sprite,
		false,
		[6869033159815673,8151489703235495,8360154525767062,9442726622821457],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8487402606737599,
			[
				["images/xd2-sheet0.png", 16531, 0, 0, 180, 89, 1, 0.5, 0.5056179761886597,[],[-0.5,-0.5056179761886597,0.2194439768791199,-0.5056179761886597,0.5,-0.5056179761886597,0.5,0.4943820238113403,0,0.4719099998474121,-0.5,0.4943820238113403,-0.5,-0.06741598248481751],0]
			]
			]
		],
		[
		],
		false,
		false,
		4122789114789099,
		[],
		null
	]
,	[
		"t197",
		cr.plugins_.Sprite,
		false,
		[9534402608023937,144030861862759,4226169095114641,4685232348013712],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5990497161286558,
			[
				["images/xd3-sheet0.png", 21786, 0, 0, 171, 131, 1, 0.5029239654541016, 0.5038167834281921,[],[-0.5029239654541016,-0.5038167834281921,-0.005847960710525513,-0.5038167834281921,0.4970760345458984,-0.5038167834281921,0.4970760345458984,0.09160321950912476,0.4970760345458984,0.4961832165718079,0.07894700765609741,0.4961832165718079,-0.5029239654541016,0.4961832165718079,-0.4970760047435761,-0.007633775472640991],0]
			]
			]
		],
		[
		],
		false,
		false,
		6773102640917981,
		[],
		null
	]
,	[
		"t198",
		cr.plugins_.Sprite,
		false,
		[6270898282540089,8460211698621463,943453124895864,8345969613832878],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4520005546019944,
			[
				["images/xd4-sheet0.png", 13624, 0, 0, 180, 90, 1, 0.5, 0.5,[],[-0.5,-0.5,0,-0.4888888895511627,0.5,-0.5,0.5,0,0.5,0.5,0,0.5,-0.5,0.5,-0.4944444298744202,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3263192026895763,
		[],
		null
	]
,	[
		"t199",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3662575629694524,
			[
				["images/2xm-sheet0.png", 5743, 0, 0, 167, 134, 1, 0.5029940009117127, 0.5,[],[-0.1856290102005005,-0.1044780015945435,-0.005988001823425293,-0.4925373196601868,0.2514969706535339,-0.1940299868583679,0.2574849724769592,0,0.3473049998283386,0.3134329915046692,-0.005988001823425293,0.5,-0.1137720048427582,0.01492500305175781,-0.2874249815940857,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		6558151421446588,
		[],
		null
	]
,	[
		"t200",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4651584916996344,
			[
				["images/3xm-sheet0.png", 4561, 0, 0, 97, 172, 1, 0.5051546096801758, 0.5,[],[-0.1443296074867249,-0.2965120077133179,-0.0103096067905426,-0.3837209939956665,0.4948453903198242,-0.5,0.4948453903198242,0,0.443299412727356,0.4709299802780151,-0.0103096067905426,0.465116024017334,-0.2061856091022492,0.3313949704170227,-0.3814436197280884,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3282751484091073,
		[],
		null
	]
,	[
		"t201",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5499182361234022,
			[
				["images/4xm-sheet0.png", 4564, 0, 0, 100, 166, 1, 0.5, 0.5,[["Imagepoint 1", 0.8700000047683716, 0.4819277226924896]],[-0.4900000095367432,-0.4939759075641632,0,-0.4939759075641632,0.3100000023841858,-0.3855420053005219,0.1899999976158142,0,0.199999988079071,0.3192769885063171,0,0.3132529854774475,-0.4699999988079071,0.4819279909133911,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9702259924479074,
		[],
		null
	]
,	[
		"t202",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			true,
			1,
			0,
			false,
			6977579808501307,
			[
				["images/banhxemay-sheet1.png", 8716, 0, 0, 88, 89, 1, 0.5, 0.5056179761886597,[],[-0.3522729873657227,-0.3595509827136993,0,-0.5056179761886597,0.3522729873657227,-0.3595509827136993,0.5,-0.01123598217964172,0.3522729873657227,0.3483150005340576,0,0.4943820238113403,-0.3522729873657227,0.3483150005340576,-0.5,-0.01123598217964172],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			2598102727509526,
			[
				["images/banhxemay-sheet0.png", 1651, 0, 0, 89, 89, 1, 0.4943820238113403, 0.5056179761886597,[],[0.5056179761886597,-0.01123598217964172,0.359550952911377,0.3483150005340576,0.01123595237731934,0.4943820238113403,-0.34831503033638,0.3483150005340576,-0.4943820238113403,-0.01123598217964172,-0.34831503033638,-0.3595509827136993,0.01123595237731934,-0.5056179761886597,0.359550952911377,-0.3595509827136993],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			6604509196385311
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			1565911267242364
		]
		],
		false,
		false,
		375481709723268,
		[],
		null
	]
,	[
		"t203",
		cr.plugins_.Sprite,
		false,
		[2669283478238154,8943803410098227,9997900441910346,4090881359554407],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4985625177114257,
			[
				["images/xm1-sheet0.png", 21338, 0, 0, 167, 133, 1, 0.5029940009117127, 0.5037593841552734,[],[-0.5029940009117127,-0.5037593841552734,-0.005988001823425293,-0.5037593841552734,0.4970059990882874,-0.5037593841552734,0.4970059990882874,0.1203016042709351,0.4970059990882874,0.4962406158447266,-0.005988001823425293,0.4962406158447266,-0.5029940009117127,0.4962406158447266,-0.5029940009117127,-0.007518380880355835],0]
			]
			]
		],
		[
		],
		false,
		false,
		6610156065938342,
		[],
		null
	]
,	[
		"t204",
		cr.plugins_.Sprite,
		false,
		[146029650266371,6506758096545456,9901218929504162,1115115743770034],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9441769711690418,
			[
				["images/xm2-sheet0.png", 16040, 0, 0, 167, 134, 1, 0.5029940009117127, 0.5,[],[-0.5029940009117127,-0.5,-0.005988001823425293,-0.4925373196601868,0.4970059990882874,-0.5,0.4970059990882874,-0.07462701201438904,0.4970059990882874,0.5,-0.005988001823425293,0.5,-0.5029940009117127,0.5,-0.5029940009117127,-0.1417909860610962],0]
			]
			]
		],
		[
		],
		false,
		false,
		6659749384635066,
		[],
		null
	]
,	[
		"t205",
		cr.plugins_.Sprite,
		false,
		[2438705731482505,5392770632661792,3798604655650491,2611670460517696],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5877242944632142,
			[
				["images/xm3-sheet0.png", 16445, 0, 0, 97, 172, 1, 0.5051546096801758, 0.5,[],[-0.5051546096801758,-0.2936049997806549,-0.5051546096801758,-0.5,0.4948453903198242,-0.5,0.4948453903198242,0,0.4948453903198242,0.5,0.01030939817428589,0.5,-0.5051546096801758,0.5,-0.5051546096801758,-0.002907007932662964],0]
			]
			]
		],
		[
		],
		false,
		false,
		5429292958896682,
		[],
		null
	]
,	[
		"t206",
		cr.plugins_.Sprite,
		false,
		[1789460055502026,3824955532348687,4735507558504585,3670029664087492],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1123705173312366,
			[
				["images/xm4-sheet0.png", 14534, 0, 0, 100, 166, 1, 0.5, 0.5,[],[-0.4900000095367432,-0.4939759075641632,0,-0.4939759075641632,0.5,-0.5,0.5,0.01807200908660889,0.5,0.5,0.2400000095367432,0.5,-0.4699999988079071,0.4819279909133911,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		1934440377970303,
		[],
		null
	]
,	[
		"t207",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5740127730180088,
			[
				["images/banhxebus1-sheet0.png", 5250, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			7090414636035931,
			[
				["images/banhxebus1-sheet1.png", 920, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			1329437968152191
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			7261012145619835
		]
		],
		false,
		false,
		1058755095486026,
		[],
		null
	]
,	[
		"t208",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			437951326555972,
			[
				["images/3bus-sheet0.png", 1683, 0, 0, 236, 130, 1, 0.5, 0.5,[],[-0.4788135886192322,-0.4615384936332703,0,-0.5,0.5,-0.5,0.5,0,0.3771190047264099,0.2769230008125305,0,0.4230769872665405,-0.3686439990997315,0.261538028717041,-0.4788135886192322,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		3078483762413322,
		[],
		null
	]
,	[
		"t209",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8062557767987495,
			[
				["images/4bus-sheet0.png", 1385, 0, 0, 236, 130, 1, 0.5, 0.5,[],[-0.5,-0.5,0.4957630038261414,-0.4923076927661896,0.4957630038261414,0,0.3686439990997315,0.261538028717041,0,0.4615380167961121,-0.3728809952735901,0.2692310214042664,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		5135276962717788,
		[],
		null
	]
,	[
		"t210",
		cr.plugins_.Sprite,
		false,
		[8063565642067344,4572805041330815,4769328840941338,2597721177990113],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7543896901417648,
			[
				["images/bus_1-sheet0.png", 10118, 0, 0, 236, 131, 1, 0.5, 0.5038167834281921,[],[-0.5,-0.5038167834281921,0,-0.4732823967933655,0.4830510020256043,-0.4732823967933655,0.5,0.4961832165718079,0,0.4961832165718079,-0.4788135886192322,0.4580152034759522,-0.4576270878314972,-0.007633775472640991],0]
			]
			]
		],
		[
		],
		false,
		false,
		3907051629503217,
		[],
		null
	]
,	[
		"t211",
		cr.plugins_.Sprite,
		false,
		[285050757023655,6070132993711233,5744973487920473,3170777113651777],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8738660327653317,
			[
				["images/bus_2-sheet0.png", 10016, 0, 0, 236, 131, 1, 0.5, 0.5038167834281921,[],[-0.4830507934093475,-0.4732823967933655,0,-0.4732823967933655,0.5,-0.5038167834281921,0.4915249943733215,-0.007633775472640991,0.4957630038261414,0.4885492324829102,-0.5,0.4961832165718079],0]
			]
			]
		],
		[
		],
		false,
		false,
		3801678552411956,
		[],
		null
	]
,	[
		"t212",
		cr.plugins_.Sprite,
		false,
		[1381792620516198,3931891155583002,2406137765058334,2190868912949172],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4713757776279113,
			[
				["images/bus_3-sheet0.png", 6504, 0, 0, 236, 130, 1, 0.5, 0.5,[],[-0.4788135886192322,-0.4615384936332703,0,-0.5,0.5,-0.5,0.5,0,0.5,0.5,0,0.5,-0.5,0.5,-0.4788135886192322,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8886500776754886,
		[],
		null
	]
,	[
		"t213",
		cr.plugins_.Sprite,
		false,
		[9137965506796338,6741474235204382,2124161100806565,1419267103534852],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3181426913970542,
			[
				["images/bus_4-sheet0.png", 5881, 0, 0, 236, 130, 1, 0.5, 0.5,[],[-0.5,-0.5,0.4957630038261414,-0.4923076927661896,0.4957630038261414,0,0.5,0.5,0,0.4615380167961121,-0.5,0.5,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2206825020040433,
		[],
		null
	]
,	[
		"t214",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8194638393311299,
			[
				["images/banhxebus1-sheet0.png", 5250, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			7256967497534807,
			[
				["images/banhxebus1-sheet1.png", 920, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			9155002881577885
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			2257360288674345
		]
		],
		false,
		false,
		9240842361559072,
		[],
		null
	]
,	[
		"t215",
		cr.plugins_.Sprite,
		false,
		[779076675846031,3443441212136201,9053758444324795,1812358486502027],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6440934989011773,
			[
				["images/xt1-sheet0.png", 10816, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,0.1358023881912231,-0.5035461187362671,0.4979423880577087,-0.5035461187362671,0.4979423880577087,0.4964538812637329,-0.00411561131477356,0.4964538812637329,-0.5020576119422913,0.4964538812637329],0]
			]
			]
		],
		[
		],
		false,
		false,
		6109988496025125,
		[],
		null
	]
,	[
		"t216",
		cr.plugins_.Sprite,
		false,
		[7347417809724896,4932597802429,4683851623906358,9233604309667324],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6683043625311407,
			[
				["images/xt2-sheet0.png", 6516, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,-0.00411561131477356,-0.5035461187362671,0.4979423880577087,-0.5035461187362671,0.4979423880577087,0.4964538812637329,-0.4897119104862213,0.4751768708229065,-0.4897119104862213,-0.007092118263244629],0]
			]
			]
		],
		[
		],
		false,
		false,
		2448617891708716,
		[],
		null
	]
,	[
		"t217",
		cr.plugins_.Sprite,
		false,
		[7429410221313804,385589045752888,648913497492658,7898071406014779],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8778725857862457,
			[
				["images/xt3-sheet0.png", 11434, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,-0.00411561131477356,-0.5035461187362671,0.4979423880577087,-0.5035461187362671,0.4855963587760925,-0.007092118263244629,0.4979423880577087,0.4964538812637329,-5.960464477539063e-007,0.4964538812637329,-0.4814815223217011,0.4609928727149963],0]
			]
			]
		],
		[
		],
		false,
		false,
		6306458304969944,
		[],
		null
	]
,	[
		"t218",
		cr.plugins_.Sprite,
		false,
		[8267025719056843,5001728030348375,3043521613627357,8924895382839252],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3500029893459964,
			[
				["images/xt4-sheet0.png", 9720, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.5020576119422913,-0.5035461187362671,0.4979423880577087,-0.5035461187362671,0.4897124171257019,0.4822698831558228,-0.5020576119422913,0.4964538812637329,-0.5020576119422913,-0.09219813346862793],0]
			]
			]
		],
		[
		],
		false,
		false,
		3583141290656704,
		[],
		null
	]
,	[
		"t219",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9776301839522151,
			[
				["images/2xt-sheet0.png", 3594, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[["Imagepoint 1", 1.004115223884583, 1.007092237472534]],[-0.4485597014427185,-0.411347508430481,-0.00411561131477356,-0.5035461187362671,0.4979423880577087,-0.5035461187362671,0.4979423880577087,0.4964538812637329,-0.4897119104862213,0.4751768708229065,-0.4897119104862213,-0.007092118263244629],0]
			]
			]
		],
		[
		],
		false,
		false,
		4430193570269561,
		[],
		null
	]
,	[
		"t220",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2244736756681249,
			[
				["images/4xt-sheet0.png", 4090, 0, 0, 243, 141, 1, 0.5020576119422913, 0.5035461187362671,[],[-0.4897119104862213,-0.4822695255279541,0.4979423880577087,-0.5035461187362671,0.4897124171257019,0.4822698831558228,-0.4156378209590912,0.3475179076194763,-0.4897119104862213,-0.007092118263244629],0]
			]
			]
		],
		[
		],
		false,
		false,
		9198467317135584,
		[],
		null
	]
,	[
		"t221",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6066009633185981,
			[
				["images/3oto-sheet0.png", 4514, 0, 0, 230, 139, 1, 0.5, 0.5035971403121948,[],[-0.4608696103096008,-0.4388489425182343,0,-0.5035971403121948,0.5,-0.5035971403121948,0.5,-0.00719413161277771,0.3304349780082703,0.2158268690109253,0,0.4388488531112671,-0.3304349780082703,0.2158268690109253,-0.4347825944423676,-0.00719413161277771],0]
			]
			]
		],
		[
		],
		false,
		false,
		7253437744511344,
		[],
		null
	]
,	[
		"t222",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8556222925079945,
			[
				["images/4oto-sheet0.png", 4138, 0, 0, 231, 139, 1, 0.5021644830703735, 0.5035971403121948,[],[-0.5021644830703735,-0.5035971403121948,-0.004329472780227661,-0.5035971403121948,0.463203489780426,-0.4460431337356567,0.4112555384635925,-0.00719413161277771,0.3290045261383057,0.2158268690109253,-0.004329472780227661,0.4532378315925598,-0.3333334922790527,0.2158268690109253,-0.5021644830703735,-0.00719413161277771],0]
			]
			]
		],
		[
		],
		false,
		false,
		1162912312806251,
		[],
		null
	]
,	[
		"t223",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7938246794519259,
			[
				["images/banhxebus1-sheet0.png", 5250, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			4032096300962557,
			[
				["images/banhxebus1-sheet1.png", 920, 0, 0, 70, 70, 1, 0.5, 0.5,[],[-0.357142984867096,-0.357142984867096,0,-0.5,0.357142984867096,-0.357142984867096,0.5,0,0.357142984867096,0.357142984867096,0,0.5,-0.357142984867096,0.357142984867096,-0.5,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			8809043115435918
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			5886367735125017
		]
		],
		false,
		false,
		2579908912338038,
		[],
		null
	]
,	[
		"t224",
		cr.plugins_.Sprite,
		false,
		[3400321248448242,5824901011444074,6304182992696992,6638980663199115],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5453744201280349,
			[
				["images/oto1-sheet0.png", 12775, 0, 0, 230, 139, 1, 0.5, 0.5035971403121948,[],[-0.5,-0.5035971403121948,0,-0.4460431337356567,0.4695649743080139,-0.4532374441623688,0.5,-0.00719413161277771,0.5,0.4964028596878052,0,0.4964028596878052,-0.5,0.4964028596878052],0]
			]
			]
		],
		[
		],
		false,
		false,
		8729424326242555,
		[],
		null
	]
,	[
		"t225",
		cr.plugins_.Sprite,
		false,
		[4212781469718121,7165857206862312,7859743256579711,6875268098162426],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6078499010504545,
			[
				["images/oto2-sheet0.png", 13101, 0, 0, 231, 139, 1, 0.2900432944297791, 0.5179855823516846,[],[-0.2640692889690399,-0.474820077419281,0.2857137322425842,-0.5179855823516846,0.6883116960525513,-0.5179855823516846,0.709956705570221,-0.5179855823516846,0.709956705570221,0.4820144176483154,-0.2900432944297791,0.4820144176483154,-0.2900432944297791,-0.02158257365226746],0]
			]
			]
		],
		[
		],
		false,
		false,
		8823635700123013,
		[],
		null
	]
,	[
		"t226",
		cr.plugins_.Sprite,
		false,
		[7887817766308634,3817833977349005,7516748870810523,2421360385000075],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5522015891457412,
			[
				["images/oto3-sheet0.png", 10888, 0, 0, 230, 139, 1, 0.5, 0.5035971403121948,[],[-0.5,-0.5035971403121948,0,-0.5035971403121948,0.5,-0.5035971403121948,0.5,-0.00719413161277771,0.5,0.4964028596878052,0.06521701812744141,0.4964028596878052,-0.5,0.4964028596878052,-0.5,-0.01438814401626587],0]
			]
			]
		],
		[
		],
		false,
		false,
		8256297648120348,
		[],
		null
	]
,	[
		"t227",
		cr.plugins_.Sprite,
		false,
		[7547181630895162,9467553666127489,3729388445620241,8377228141541818],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4937891941024355,
			[
				["images/oto4-sheet0.png", 12117, 0, 0, 231, 139, 1, 0.5021644830703735, 0.5035971403121948,[],[-0.5021644830703735,-0.5035971403121948,-0.004329472780227661,-0.5035971403121948,0.463203489780426,-0.4460431337356567,0.4978355169296265,-0.01438814401626587,0.4978355169296265,0.4964028596878052,-0.004329472780227661,0.4532378315925598,-0.5021644830703735,0.4964028596878052,-0.5021644830703735,-0.00719413161277771],0]
			]
			]
		],
		[
		],
		false,
		false,
		5071594845949278,
		[],
		null
	]
,	[
		"t228",
		cr.plugins_.Sprite,
		false,
		[592871883803761,7115827835061531,2541716452048711,5537644995415161,2585654112885693],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5102850220477952,
			[
				["images/bg_bo-sheet0.png", 99155, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		1831405707542089,
		[],
		null
	]
,	[
		"t229",
		cr.plugins_.Sprite,
		false,
		[1650642142394973,7327281163405098],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9257380897362197,
			[
				["images/moto-sheet0.png", 31006, 0, 0, 461, 278, 1, 0.5010846257209778, 0.5,[],[-0.5010846257209778,-0.5,-0.002169638872146606,-0.478417307138443,0.4989153742790222,-0.5,0.4642083644866943,0,0.4989153742790222,0.5,-0.5010846257209778,0.5,-0.4902386367321014,0],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			9619245395428987,
			[
				["images/moto-sheet1.png", 4772, 0, 0, 461, 278, 1, 0.5010846257209778, 0.5,[],[-0.34273362159729,-0.2374100089073181,-0.002169638872146606,-0.478417307138443,0.2668113708496094,-0.1151080131530762,0.4642083644866943,0,0.4121474027633667,0.3561149835586548,-0.4164859354496002,0.3597120046615601,-0.4902386367321014,0],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			7266929203166514
		]
		],
		false,
		false,
		7318001940556685,
		[],
		null
	]
,	[
		"t230",
		cr.plugins_.Sprite,
		false,
		[8749417565220434,1453408197920877],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3954100221134377,
			[
				["images/xedap-sheet0.png", 56007, 1, 1, 315, 230, 1, 0.5206349492073059, 0.3565217256546021,[],[0.4793650507926941,0.643478274345398,0.02539706230163574,0.643478274345398,-0.5206349492073059,0.643478274345398,-0.5206349492073059,-0.3565217256546021,-0.01587295532226563,-0.3260867297649384,0.4793650507926941,-0.3565217256546021,0.4793650507926941,0.05652126669883728],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			19351297200544,
			[
				["images/xedap-sheet0.png", 56007, 1, 232, 315, 230, 1, 0.5206349492073059, 0.3565217256546021,[],[-0.3428569436073303,-0.1130437254905701,-0.02222195267677307,-0.3304347395896912,0.2952380776405335,-0.1043477356433868,0.4698410630226135,0.143478274345398,0.2444440722465515,0.3217392563819885,-0.02222195267677307,0.5652172565460205,-0.2476189434528351,0.2695652842521668,-0.2888889312744141,0.143478274345398],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			7945778663901891
		]
		],
		false,
		false,
		1418574579702202,
		[],
		null
	]
,	[
		"t231",
		cr.plugins_.Sprite,
		false,
		[4815571364040421,3929434591969418],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2870515846543642,
			[
				["images/xemay-sheet0.png", 44823, 1, 1, 329, 231, 1, 0.5015197396278381, 0.5757575631141663,[],[-0.5015197396278381,-0.5757575631141663,0.04255324602127075,-0.5757575631141663,0.4984802603721619,-0.5757575631141663,0.4984802603721619,-0.09523755311965942,0.4984802603721619,0.4242424368858337,2.384185791015625e-007,0.411255419254303,-0.5015197396278381,0.4242424368858337,-0.4863221347332001,-0.004328548908233643],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			7198092357608815,
			[
				["images/xemay-sheet0.png", 44823, 1, 233, 329, 231, 1, 0.5015197396278381, 0.5021644830703735,[],[-0.003039747476577759,-0.2467534840106964,0.2613982558250427,-0.1645024716854096,0.3282672762870789,-0.004329472780227661,0.3799392580986023,0.3290045261383057,-0.003039747476577759,0.4848484992980957,-0.4893616437911987,0.4805195331573486,-0.3586627244949341,-0.004329472780227661],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			7712842115902673
		]
		],
		false,
		false,
		5747611793001161,
		[],
		null
	]
,	[
		"t232",
		cr.plugins_.Sprite,
		false,
		[2490107820852123,8328455163339244],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			182869777449059,
			[
				["images/xichlo-sheet0.png", 68887, 1, 1, 295, 232, 1, 0.2779661118984222, 0.375,[],[-0.2779661118984222,-0.375,0.4372878968715668,-0.375,0.7220338582992554,-0.375,0.7220338582992554,0.1422410011291504,0.7220338582992554,0.625,0.2203388810157776,0.6120690107345581,-0.2779661118984222,0.625,-0.2779661118984222,0.4568970203399658],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			9285622198948569,
			[
				["images/xichlo-sheet0.png", 68887, 1, 234, 295, 232, 1, 0.2779661118984222, 0.375,[],[-0.2440678179264069,-0.3318966031074524,0.2203388810157776,-0.3146551847457886,0.6033898591995239,-0.224138006567955,0.3084748685359955,0.125,0.3186438977718353,0.1120690107345581,0.2203388810157776,0.6163790225982666,-0.03389811515808106,0.3146550059318543,-0.2203390151262283,0.125],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			9493676187767061
		]
		],
		false,
		false,
		5675719720194864,
		[],
		null
	]
,	[
		"t233",
		cr.plugins_.Sprite,
		false,
		[6452380634903121,7566787468268034],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6618120245489193,
			[
				["images/xetai-sheet0.png", 20560, 0, 0, 488, 263, 1, 0.4897541105747223, 0.5247148275375366,[],[-0.4549180269241333,-0.482889711856842,-1.192092895507813e-007,-0.5209125280380249,0.5102459192276001,-0.5247148275375366,0.4528689086437225,-0.003801822662353516,0.4508198797702789,0.4714831709861755,-0.4508197009563446,0.4714831709861755,-0.4815573990345001,-0.003801822662353516],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			6162539679321313,
			[
				["images/xetai-sheet1.png", 3962, 0, 0, 488, 263, 1, 0.4897541105747223, 0.4714829027652741,[],[-0.4610656201839447,-0.4182510077953339,0.01024588942527771,-0.4676806330680847,0.399589866399765,-0.2661598920822144,0.4979508817195892,0.5057030916213989,0.01024588942527771,0.5247150659561157,-0.4795082211494446,0.509506106376648],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			9991166266734767
		]
		],
		false,
		false,
		834391775726387,
		[],
		null
	]
,	[
		"t234",
		cr.plugins_.Sprite,
		false,
		[8919406184401547,160004276298398],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1474458114643102,
			[
				["images/bus-sheet0.png", 26806, 0, 0, 472, 261, 1, 0.5, 0.4980842769145966,[],[0.4449149966239929,0.4022987186908722,0,0.4865896999835968,-0.4661020040512085,0.4406127035617828,-0.4978809952735901,0.003831714391708374,-0.4343219995498657,-0.37931028008461,0.4343219995498657,-0.37931028008461,0.4894070029258728,0.003831714391708374],0]
			]
			]
,			[
			"a",
			5,
			false,
			1,
			0,
			false,
			1908438587749463,
			[
				["images/bus-sheet1.png", 4344, 0, 0, 472, 261, 1, 0.5, 0.5019156932830811,[],[-0.4343219995498657,-0.3831416964530945,0.4343219995498657,-0.3831416964530945,0.4915249943733215,-0.003831684589385986,0.4449149966239929,0.3984673023223877,0,0.4865903258323669,-0.4661017060279846,0.4367812871932983,-0.4978813529014587,-0.003831684589385986],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2847101186873912
		]
		],
		false,
		false,
		4577681022415765,
		[],
		null
	]
,	[
		"t235",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			3,
			false,
			1,
			0,
			false,
			3704049335477701,
			[
				["images/denxemay-sheet0.png", 11319, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[-0.1714290082454681,-0.213836669921875,0,-0.2893086671829224,0.07142901420593262,-0.125786691904068,0.05714297294616699,0.1069183349609375,0,0.2767293453216553,-0.1642859876155853,0.2012583017349243,-0.4571428894996643,-0.006289690732955933],0],
				["images/denxemay-sheet1.png", 204, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[],3]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8583173158914993
		]
		],
		false,
		false,
		2142046530238252,
		[],
		null
	]
,	[
		"t236",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			3,
			false,
			1,
			0,
			false,
			2662426209963016,
			[
				["images/denxetai-sheet0.png", 9998, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[-0.1714290082454681,-0.213836669921875,0,-0.2893086671829224,0.07142901420593262,-0.125786691904068,0.05714297294616699,0.1069183349609375,0,0.2767293453216553,-0.1642859876155853,0.2012583017349243,-0.4571428894996643,-0.006289690732955933],0],
				["images/denxemay-sheet1.png", 204, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[],3],
				["images/denxetai-sheet1.png", 9998, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[-0.1714290082454681,-0.213836669921875,0,-0.2893086671829224,0.07142901420593262,-0.125786691904068,0.05714297294616699,0.1069183349609375,0,0.2767293453216553,-0.1642859876155853,0.2012583017349243,-0.4571428894996643,-0.006289690732955933],0],
				["images/denxemay-sheet1.png", 204, 0, 0, 140, 159, 1, 0.5, 0.5031446814537048,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		1724629872760029,
		[],
		null
	]
,	[
		"t237",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5760195210594912,
		[],
		null
	]
,	[
		"t238",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin2",
			cr.behaviors.Pin,
			10978
		]
,		[
			"Bullet2",
			cr.behaviors.Bullet,
			2271978485003801
		]
		],
		false,
		false,
		10965,
		[],
		null
	]
,	[
		"t239",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			813312141691994
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			70402595563187
		]
		],
		false,
		false,
		1849056576545508,
		[],
		null
	]
,	[
		"t240",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7308174851726261
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			7017121025002445
		]
		],
		false,
		false,
		282019769749344,
		[],
		null
	]
,	[
		"t241",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6006792578517439
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			1065780155452249
		]
		],
		false,
		false,
		3382418307371006,
		[],
		null
	]
,	[
		"t242",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			406156903780966
		]
		],
		false,
		false,
		8342782592322403,
		[],
		null
	]
,	[
		"t243",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			9776193524230459
		]
		],
		false,
		false,
		3800350630467636,
		[],
		null
	]
,	[
		"t244",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5389164468737188
		]
		],
		false,
		false,
		6529524968198113,
		[],
		null
	]
,	[
		"t245",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		775900584356785,
		[],
		null
	]
,	[
		"t246",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5632195969373467
		]
		],
		false,
		false,
		6040608275699905,
		[],
		null
	]
,	[
		"t247",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2083549922651858
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			5148298866379905
		]
		],
		false,
		false,
		6767449959618026,
		[],
		null
	]
,	[
		"t248",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2381671292552656
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			3189038549608085
		]
		],
		false,
		false,
		9356065253258036,
		[],
		null
	]
,	[
		"t249",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8534834479317276
		]
		],
		false,
		false,
		7390386117588503,
		[],
		null
	]
,	[
		"t250",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4744247938675483
		]
		],
		false,
		false,
		8053180714312161,
		[],
		null
	]
,	[
		"t251",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7915498132281014
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			9474169463847583
		]
		],
		false,
		false,
		547643347146299,
		[],
		null
	]
,	[
		"t252",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7466236837545985
		]
		],
		false,
		false,
		3705611725371817,
		[],
		null
	]
,	[
		"t253",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1800287758641528
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			7101403104843421
		]
		],
		false,
		false,
		9528481385054015,
		[],
		null
	]
,	[
		"t254",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7537863113616389
		]
		],
		false,
		false,
		6854892575231471,
		[],
		null
	]
,	[
		"t255",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3872110947942882
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			3576278987428663
		]
		],
		false,
		false,
		284894018374001,
		[],
		null
	]
,	[
		"t256",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			992794260830394
		]
		],
		false,
		false,
		8858662314415987,
		[],
		null
	]
,	[
		"t257",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3589551572260333
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			9355330846146518
		]
		],
		false,
		false,
		2458808165744147,
		[],
		null
	]
,	[
		"t258",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6235092100459145
		]
		],
		false,
		false,
		8388882819472569,
		[],
		null
	]
,	[
		"t259",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7865956652958221
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			5996210634098846
		]
		],
		false,
		false,
		2114813632402099,
		[],
		null
	]
,	[
		"t260",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3437188070479925
		]
		],
		false,
		false,
		3253565444672198,
		[],
		null
	]
,	[
		"t261",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2812289811171151
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			241618686517233
		]
		],
		false,
		false,
		8424500082596516,
		[],
		null
	]
,	[
		"t262",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1327407389350311
		]
		],
		false,
		false,
		5651826466472972,
		[],
		null
	]
,	[
		"t263",
		cr.plugins_.Sprite,
		true,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			7486268745011941
		]
,		[
			"DragDrop",
			cr.behaviors.DragnDrop,
			4885749800479565
		]
		],
		false,
		false,
		3648848548452693,
		[],
		null
	]
,	[
		"t264",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3334148552944389,
		[],
		null
	]
,	[
		"t265",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6263443058609937,
		[],
		null
	]
,	[
		"t266",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin2",
			cr.behaviors.Pin,
			172377591008629
		]
		],
		false,
		false,
		8424200459600292,
		[],
		null
	]
,	[
		"t267",
		cr.plugins_.Sprite,
		true,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Pin2",
			cr.behaviors.Pin,
			3016582812612932
		]
		],
		false,
		false,
		5604334212792801,
		[],
		null
	]
,	[
		"t268",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5084593435872856,
		[],
		null
	]
	],
	[
		[238,17,16,19,18,21,20,23]
,		[239,49,51,50,52]
,		[240,79,80,81,82]
,		[241,57,58,59,60]
,		[242,53,54,55,56]
,		[243,45,46,47,48]
,		[244,75,76,77,78]
,		[245,108,117,65,64,62,68,74,110,115,114,113]
,		[246,83,84,85,86]
,		[247,88,87,89,90]
,		[248,95,96,97,98]
,		[249,91,92,93,94]
,		[250,103,104,105,106]
,		[251,99,100,101,102]
,		[252,160,167,208,209]
,		[253,210,211,212,213]
,		[254,162,168,221,222]
,		[255,224,225,226,227]
,		[256,163,169,188,189]
,		[257,195,196,197,198]
,		[258,165,199,200,201]
,		[259,203,204,205,206]
,		[260,159,166,219,220]
,		[261,215,216,217,218]
,		[262,164,170,179,180]
,		[263,177,178,181,182]
,		[264,229,231,233]
,		[265,234,230,232]
,		[266,190,191,192,193]
,		[267,183,184,185,186]
,		[268,190,191,192,193,183,184,185,186,223,207,194,202,214,187,234,229,230,231,233,232]
	],
	[
	[
		"cover",
		1280,
		720,
		true,
		"ev_cover",
		10936,
		[
		[
			"Layer 0",
			0,
			10937,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 360, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				22,
				598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[716, 539, 0, 1051, 327, 0, 0, 1, 0.5004757642745972, 0.5015290379524231, 0, 0, []],
				9,
				601,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[439, 173, 0, 282, 317, 0, 0, 1, 0.5, 0.5015772581100464, 0, 0, []],
				8,
				599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[405, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				15,
				602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1385, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				603,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1245, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				604,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[965, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				19,
				605,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[685, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				606,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[545, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				607,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1105, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				20,
				608,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[825, 555, 0, 127, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				23,
				609,
				[
				],
				[
				[
				],
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[885, 281, 0, 66, 66, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				611,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[630, 353, 0, 311.5733642578125, 56.02854156494141, 0, 0, 1, 0.5, 0.5121951103210449, 0, 0, []],
				6,
				612,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[240.5162200927734, 264.9686889648438, 0, 31.94524574279785, 31.94524574279785, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				38,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[258.2328796386719, 288.3357849121094, 0, 43.81943130493164, 43.81943130493164, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				50,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[285.4541625976563, 279.4218139648438, 0, 28.08527946472168, 28.08527946472168, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				291,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[228.1327514648438, 296.3153686523438, 0, 66, 66, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				370,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[48, 106, 0, 39.03527069091797, 39.03527069091797, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				519,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[83, 76, 0, 65.16608428955078, 65.16608428955078, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				591,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[43, 60, 0, 50.3267707824707, 50.3267707824707, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				620,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[624.693115234375, 54.13346862792969, 0, 46.1658935546875, 46.93044662475586, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				621,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[697.9067993164063, 62.15524291992188, 0, 47.66797637939453, 47.66797637939453, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				622,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[645.9556884765625, 95.03662872314453, 0, 38.35073852539063, 38.35073852539063, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				623,
				[
				],
				[
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[659.4354248046875, 544.5806274414063, 0, 2678, 337, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[180, 372, 0, 320, 550, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				614,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[134.3868560791016, 667.9122924804688, 0, 260, 105, 0, 0, 1, 0.5, 0.5047619342803955, 0, 0, []],
				5,
				615,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[436.8169860839844, 145.8170013427734, 0, 185, 185, 0, 0, 1, 0.5027027130126953, 0.5027027130126953, 0, 0, []],
				24,
				6,
				[
				],
				[
				[
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					2,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1014, 246, 0, 533, 420, 0, 0, 1, 0.5009380578994751, 0.5, 0, 0, []],
				11,
				613,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"title",
		1280,
		720,
		true,
		"ev_title",
		6914,
		[
		[
			"Layer 0",
			0,
			6915,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[641, 359, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				43,
				4,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[619, 573, 0, 316, 234, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5,
				[
				],
				[
				[
					0,
					2,
					0,
					0.5,
					0,
					0,
					0,
					10,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[658, -417, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				173,
				123,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[782, -330, 0, 252, 83, 0, 0, 1, 0.4682539701461792, 0.4216867387294769, 0, 0, []],
				174,
				124,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[505, -330, 0, 252, 83, 0, 0, 1, 0.4682539701461792, 0.4216867387294769, 0, 0, []],
				172,
				128,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[162, 440, 0, 239, 79, 0, 0, 1, 0, 0, 0, 0, []],
				237,
				168,
				[
				],
				[
				],
				[
					"Text",
					0,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"play",
		1280,
		720,
		true,
		"ev_play",
		227378065951103,
		[
		[
			"Layer 0",
			0,
			7171847947020006,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-875, 384, 0, 150, 85, 0, 0, 1, 0.5, 0.5058823823928833, 0, 0, []],
				118,
				41,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1958, 384, 0, 150, 85, 0, 0, 1, 0.5, 0.5058823823928833, 0, 0, []],
				119,
				42,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1940, -231, 0, 200, 92, 0, 0, 0.800000011920929, 0.5, 0.5, 0, 0, []],
				124,
				268,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1989, -229, 0, 90, 90, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				123,
				270,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1891, -233, 0, 90, 90, 0, -3.13968300819397, 1, 0.5, 0.5, 0, 0, []],
				122,
				45,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-2053, -444, 0, 758, 169, 0, 0, 0.800000011920929, 0, 0, 0, 0, []],
				120,
				44,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-2039, -431, 0, 727, 163, 0, 0, 1, 0, 0, 0, 0, []],
				121,
				46,
				[
				],
				[
				[
				]
				],
				[
					"By a lake in the woods, in a sun filled grass patch, Mama duck sat  on her eggs, waiting for them to hatch. There were four eggs in all, three were white, one was gray. She said: “the gray is the strangest egg I ever did lay.”",
					0,
					"20pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[640, 359, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				7,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[638, 374, 0, 503, 503, 0, -2.157132148742676, 1, 0.5009940266609192, 0.5009940266609192, 0, 0, []],
				41,
				8,
				[
				],
				[
				[
					25,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1127, 538, 0, 216, 195, 0, -0.2617993950843811, 1, 0.5, 0.5025641322135925, 0, 0, []],
				25,
				9,
				[
				],
				[
				[
					0,
					5,
					0,
					7,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[210, 127, 0, 216, 195, 0, 0, 1, 0.5, 0.5025641322135925, 0, 0, []],
				26,
				10,
				[
				],
				[
				[
					0,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					2,
					0,
					4,
					0,
					0,
					0,
					-7,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[415, 127, 0, 35, 35, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				11,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[836, 62, 0, 51.65268707275391, 51.65268707275391, 0, 0, 1, 0.5, 0.5, 1, 0, []],
				32,
				12,
				[
				],
				[
				[
					1,
					5,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[93, 86, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 1, 0, []],
				32,
				13,
				[
				],
				[
				[
					1,
					5,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 336, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 1, 0, []],
				32,
				14,
				[
				],
				[
				[
					1,
					5,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1197, 77, 0, 35, 35, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				15,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[38, 374, 0, 35, 35, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				16,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[271, 259, 0, 35, 35, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				17,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[707, 691, 0, 23.97915840148926, 23.97915840148926, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				18,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[970, 601, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 1, 0, []],
				32,
				19,
				[
				],
				[
				[
					1,
					5,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 670, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 1, 0, []],
				32,
				20,
				[
				],
				[
				[
					1,
					5,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1221, 427, 0, 35, 35, 0, -0.7493518590927124, 1, 0.5074626803398132, 0.5076923370361328, 0, 0, []],
				34,
				21,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					1,
					2,
					0,
					2,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[886, 511, 0, 134, 140, 0, 2.059488534927368, 1, 0.5895522236824036, 0.5642856955528259, 0, 0, []],
				40,
				22,
				[
				],
				[
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					-5,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[401, 497, 0, 256, 156, 0, -2.031842708587647, 1, 0.5, 0.5, 0, 0, []],
				33,
				23,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[464, 560, 0, 86.91838073730469, 55.93009185791016, 0, -1.988900065422058, 1, 0.5043478012084961, 0.5, 0, 0, []],
				28,
				24,
				[
				],
				[
				[
					0,
					2,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[844, 483, 0, 147, 41, 0, 2.034443616867065, 1, 0.5170068144798279, 0.5121951103210449, 0, 0, []],
				36,
				25,
				[
				],
				[
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					6,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[831, 468, 0, 190, 36, 0, 2.059488534927368, 1, 0.4947368502616882, 0.5555555820465088, 0, 0, []],
				37,
				27,
				[
				],
				[
				[
					0,
					0,
					0,
					4,
					0,
					0,
					0,
					5,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[541, 113, 0, 176, 141, 0, 0, 1, 0.5, 0.5035461187362671, 0, 0, []],
				30,
				28,
				[
				],
				[
				[
					0,
					0,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[624, 119, 0, 198, 146, 0, -0.0872664600610733, 1, 0.4646464586257935, 0.3972602784633637, 0, 0, []],
				29,
				29,
				[
				],
				[
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[590, 176, 0, 108, 74, 0, 0, 1, 0.5370370149612427, 0.5540540814399719, 0, 0, []],
				31,
				30,
				[
				],
				[
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					-5,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[958, 152, 0, 193, 186, 0, -0.2679443657398224, 1, 0.5025906562805176, 0.5, 0, 0, []],
				42,
				31,
				[
				],
				[
				[
					0,
					0,
					1,
					8,
					0,
					0,
					0,
					30,
					0
				],
				[
					0,
					1,
					0,
					8,
					0,
					0,
					0,
					30,
					0
				],
				[
					0,
					5,
					0,
					2,
					0,
					0,
					0,
					2,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 506, 0, 215, 200, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				39,
				32,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[159, 499, 0, 138, 140, 0, 0, 1, 0.5, 0.4928571283817291, 0, 0, []],
				27,
				33,
				[
				],
				[
				[
					-50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[159, 505, 0, 196, 69, 0, 0.008726646192371845, 1, 0.5, 0.3623188436031342, 0, 0, []],
				38,
				34,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					8,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[679, 394, 0, 239, 79, 0, 0, 1, 0, 0, 0, 0, []],
				237,
				169,
				[
				],
				[
				],
				[
					"Text",
					0,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
			[
				null,
				125,
				35,
				[
				],
				[
				],
				[
					4,
					4,
					1
				]
			]
,			[
				null,
				175,
				129,
				[
				],
				[
				],
				[
				]
			]
,			[
				null,
				176,
				130,
				[
				],
				[
				],
				[
					"myScripts.js"
				]
			]
		],
		[]
	]
,	[
		"dg hang khong",
		1280,
		720,
		true,
		"ev_dghangkhong",
		9074496460649965,
		[
		[
			"Layer 0",
			0,
			8649067478732618,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 360, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				61,
				36,
				[
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1107, 524, 0, 369, 259, 0, 0, 1, 0.501354992389679, 0.5019304752349854, 0, 0, []],
				63,
				37,
				[
				],
				[
				[
					1,
					6,
					0,
					4,
					0,
					0,
					0,
					25,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[624, 528, 0, 1642, 289, 0, 0, 1, 0.4963459074497223, 0.3183391094207764, 0, 0, []],
				70,
				39,
				[
				],
				[
				[
					0,
					0,
					0,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 573, 0, 1282, 201, 0, 0, 1, 0.5, 0.2487562149763107, 0, 0, []],
				72,
				40,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 360, 0, 35, 45, 0, 0, 1, 0.5142857432365418, 0.5111111402511597, 0, 0, []],
				73,
				47,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[55, 58, 0, 69, 44, 0, 0, 1, 0.5072463750839233, 0.5, 0, 0, []],
				66,
				48,
				[
				],
				[
				[
					20,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[691, 28, 0, 88, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				67,
				49,
				[
				],
				[
				[
					20,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1009, 188, 0, 462, 276, 0, 0, 1, 0.4848484992980957, 0.47826087474823, 0, 0, []],
				68,
				56,
				[
					[0],
					[0]
				],
				[
				[
					0,
					1,
					0,
					5,
					0,
					0,
					0,
					15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[162, 204, 0, 210.089111328125, 296.0018310546875, 0, 0, 1, 0.4948453605175018, 0.5, 0, 0, []],
				62,
				57,
				[
					[0],
					[0]
				],
				[
				[
					0,
					5,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				],
				[
					0,
					0,
					0,
					5,
					0,
					0,
					0,
					20,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[373, 507, 0, 331, 296, 0, 0, 1, 0.4814814925193787, 0.4413793087005615, 0, 0, []],
				74,
				58,
				[
					[0],
					[0]
				],
				[
				[
					0,
					1,
					0,
					7,
					0,
					0,
					0,
					-15,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[419, 379, 0, 235.0296630859375, 94.70059967041016, 0, -0.05236005783081055, 1, 0.5018315315246582, 0.5090909004211426, 0, 0, []],
				65,
				59,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[241, 488, 0, 100.689811706543, 100.0720825195313, 0, 0, 1, 0.5030674934387207, 0.5, 0, 0, []],
				64,
				60,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[53, 613, 0, 1449, 117, 0, 0, 1, 0.496204286813736, -0.01709401793777943, 0, 0, []],
				71,
				61,
				[
				],
				[
				[
					50,
					0,
					0,
					0,
					1,
					0
				],
				[
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1471, 607, 0, 1449, 117, 0, 0, 1, 0.496204286813736, -0.01709401793777943, 0, 0, []],
				71,
				62,
				[
				],
				[
				[
					50,
					0,
					0,
					0,
					1,
					0
				],
				[
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1237, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				126,
				89,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[43, 678, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				127,
				90,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-54, 26, 0, 81.54195404052734, 51.99777221679688, 0, 0, 1, 0.5072463750839233, 0.5, 0, 0, []],
				66,
				43,
				[
				],
				[
				[
					20,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[653, -1195, 0, 1909, 747, 0, 0, 0.699999988079071, 0.550000011920929, 0.5, 0, 0, []],
				128,
				63,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[640, -435, 0, 692, 1192, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				69,
				64,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[232, -232, 0, 193, 164, 0, 0, 1, 0.5025906562805176, 0.5, 0, 0, []],
				79,
				65,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1041, -243, 0, 193, 165, 0, 0, 1, 0.5025906562805176, 0.5030303001403809, 0, 0, []],
				82,
				66,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[774, -239, 0, 193, 164, 0, 0, 1, 0.5025906562805176, 0.5, 0, 0, []],
				81,
				67,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[497, -243, 0, 193, 165, 0, 0, 1, 0.5025906562805176, 0.5030303001403809, 0, 0, []],
				80,
				68,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[522, -676, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5, 0, 0, []],
				45,
				69,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[753, -676, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5, 0, 0, []],
				46,
				70,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[523, -537, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5072463750839233, 0, 0, []],
				47,
				71,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[754, -537, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5072463750839233, 0, 0, []],
				48,
				72,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[227, -238, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5, 0, 0, []],
				49,
				73,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1034, -245, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5, 0, 0, []],
				51,
				74,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[513, -249, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5072463750839233, 0, 0, []],
				50,
				75,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[791, -245, 0, 231, 138, 0, 0, 1, 0.5021644830703735, 0.5072463750839233, 0, 0, []],
				52,
				76,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[486, -244, 0, 278, 105, 0, 0, 1, 0.3920863270759583, 0.561904788017273, 0, 0, []],
				57,
				77,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[994, -236, 0, 291, 104, 0, 0, 1, 0.3883161544799805, 0.557692289352417, 0, 0, []],
				58,
				78,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[186, -229, 0, 266, 105, 0, 0, 1, 0.240601509809494, 0.5714285969734192, 0, 0, []],
				59,
				79,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[749, -242, 0, 84, 101, 0, 0, 1, 0.5, 0.5049505233764648, 0, 0, []],
				60,
				80,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[504, -498, 0, 193, 164, 0, 0, 1, 0.5025906562805176, 0.5, 0, 0, []],
				75,
				81,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[697, -498, 0, 193, 164, 0, 0, 1, 0.5025906562805176, 0.5, 0, 0, []],
				77,
				82,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[504, -662, 0, 193, 165, 0, 0, 1, 0.5025906562805176, 0.5030303001403809, 0, 0, []],
				78,
				83,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[697, -662, 0, 193, 165, 0, 0, 1, 0.5025906562805176, 0.5030303001403809, 0, 0, []],
				76,
				84,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[617, -695, 0, 278, 105, 0, 0, 1, 0.3920863270759583, 0.561904788017273, 0, 0, []],
				53,
				85,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[615, -594, 0, 291, 104, 0, 0, 1, 0.3883161544799805, 0.557692289352417, 0, 0, []],
				54,
				86,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[577, -491, 0, 266, 105, 0, 0, 1, 0.240601509809494, 0.5714285969734192, 0, 0, []],
				55,
				87,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[645, -398, 0, 84, 101, 0, 0, 1, 0.5, 0.5049505233764648, 0, 0, []],
				56,
				88,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"dg thuy",
		1280,
		720,
		true,
		"ev_dgthuy",
		6944250024056366,
		[
		[
			"Layer 0",
			0,
			201276725875355,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 360, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				107,
				51,
				[
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[111, 37, 0, 104, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				116,
				53,
				[
				],
				[
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[215, 174, 0, 413.6889343261719, 247.4634857177734, 0, 0, 1, 0.4954682886600494, 0.4419191777706146, 0, 0, []],
				114,
				54,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					5,
					0,
					1,
					0,
					0,
					0,
					1,
					0
				],
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					25,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[223, 337, 0, 1556, 168, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				111,
				55,
				[
				],
				[
				[
					0
				],
				[
					100,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1267, 330, 0, 1556, 168, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				111,
				121,
				[
				],
				[
				[
					0
				],
				[
					100,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 358, 0, 35, 45, 0, 0, 1, 0.5142857432365418, 0.5111111402511597, 0, 0, []],
				73,
				122,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[749, 493, 0, 92.00636291503906, 76.28376007080078, 0, 0, 1, 0.702531635761261, 0.8091602921485901, 0, 0, []],
				110,
				125,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[683, 582, 0, 377.8733825683594, 206.2250213623047, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				115,
				126,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					8,
					0,
					0,
					0,
					50,
					0
				],
				[
					0,
					1,
					0,
					5,
					0,
					0,
					0,
					10,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[581, 520, 0, 204.6918640136719, 152.1897277832031, 0, 0, 1, 0.5, 0.5021833777427673, 0, 0, []],
				109,
				127,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[1082, 204, 0, 301.59375, 328.4479675292969, 0, 0, 1, 0.5593607425689697, 0.4863731563091278, 0, 0, []],
				113,
				131,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					4,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					5,
					0,
					1,
					0,
					0,
					0,
					1,
					0
				],
				[
					0,
					1,
					0,
					4,
					0,
					0,
					0,
					25,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[968, 224, 0, 70.95467376708984, 69.00179290771484, 0, 0, 1, 0.5137614607810974, 0.4716981053352356, 0, 0, []],
				108,
				132,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1132, 155, 0, 204.9257965087891, 196.0709838867188, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				117,
				133,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-441, 389, 0, 1556, 107, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				111,
				134,
				[
				],
				[
				[
					0
				],
				[
					100,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[496, 381, 0, 1556, 107, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				111,
				135,
				[
				],
				[
				[
					0
				],
				[
					100,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-32, 20, 0, 80, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				112,
				136,
				[
				],
				[
				[
					15,
					0,
					0,
					0,
					1,
					0
				],
				[
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[130, 30, 0, 69, 44, 0, 0, 1, 0.5072463750839233, 0.5, 0, 0, []],
				66,
				137,
				[
				],
				[
				[
					10,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[759, 32, 0, 88, 50, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				67,
				138,
				[
				],
				[
				[
					15,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[651, -1226, 0, 1909.411743164063, 747, 0, 0, 0.699999988079071, 0.550000011920929, 0.5, 0, 0, []],
				128,
				139,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[640, -437, 0, 692, 1192, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				69,
				140,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[517, -529, 0, 86, 163, 0, 0, 1, 0.5, 0.5030674934387207, 0, 0, []],
				105,
				141,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[668, -696, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				103,
				142,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[668, -594, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				104,
				143,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[668, -492, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				106,
				144,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1033, -239, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				100,
				145,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[261, -239, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				102,
				146,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[732, -252, 0, 86, 163, 0, 0, 1, 0.5, 0.5030674934387207, 0, 0, []],
				101,
				147,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[490, -242, 0, 215, 102, 0, 0, 1, 0.5023255944252014, 0.5, 0, 0, []],
				99,
				148,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[229, -254, 0, 209, 107, 0, 0, 1, 0.5023923516273499, 0.5046728849411011, 0, 0, []],
				88,
				149,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[516, -242, 0, 139, 163, 0, 0, 1, 0.5035971403121948, 0.5030674934387207, 0, 0, []],
				87,
				150,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1037, -238, 0, 138, 163, 0, 0, 1, 0.5, 0.5030674934387207, 0, 0, []],
				89,
				151,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[785, -241, 0, 139, 163, 0, 0, 1, 0.5035971403121948, 0.5030674934387207, 0, 0, []],
				90,
				152,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[684, -683, 0, 209, 107, 0, 0, 1, 0.5023923516273499, 0.5046728849411011, 0, 0, []],
				83,
				153,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[510, -548, 0, 139, 163, 0, 0, 1, 0.5035971403121948, 0.5030674934387207, 0, 0, []],
				84,
				154,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[648, -548, 0, 138, 163, 0, 0, 1, 0.5, 0.5030674934387207, 0, 0, []],
				85,
				155,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[787, -548, 0, 139, 163, 0, 0, 1, 0.5035971403121948, 0.5030674934387207, 0, 0, []],
				86,
				156,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, -258, 0, 181, 114, 0, 0, 1, 0.5027624368667603, 0.5, 0, 0, []],
				95,
				157,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[522, -243, 0, 139, 153, 0, 0, 1, 0.5035971403121948, 0.5032680034637451, 0, 0, []],
				97,
				158,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1031, -239, 0, 140, 153, 0, 0, 1, 0.5, 0.5032680034637451, 0, 0, []],
				98,
				159,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[234, -251, 0, 140, 153, 0, 0, 1, 0.5, 0.5032680034637451, 0, 0, []],
				96,
				160,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[804, -502, 0, 140, 153, 0, 0, 1, 0.5, 0.5032680034637451, 0, 0, []],
				92,
				161,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[588, -619, 0, 181, 114, 0, 0, 1, 0.5027624368667603, 0.5, 0, 0, []],
				91,
				162,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[527, -503, 0, 140, 153, 0, 0, 1, 0.5, 0.5032680034637451, 0, 0, []],
				94,
				163,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[667, -503, 0, 139, 153, 0, 0, 1, 0.5035971403121948, 0.5032680034637451, 0, 0, []],
				93,
				164,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1240, 678, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				126,
				165,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[48, 681, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				127,
				166,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"dg bo",
		1280,
		720,
		true,
		"ev_dgbo",
		20732059756154,
		[
		[
			"Layer 0",
			0,
			2250320061384695,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640.6986694335938, 360.6147766113281, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				228,
				52,
				[
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1571, 130, 0, 15.95899963378906, 23.36499977111816, 0, 0, 1, 0.2483660131692886, 0.8616071343421936, 0, 0, []],
				192,
				208,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1581, 111, 0, 21.85499954223633, 10.92800045013428, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				193,
				274,
				[
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1501, 132, 0, 67.81443786621094, 68.4093017578125, 0, 0, 1, 0.5, 0.5043478012084961, 0, 0, []],
				194,
				275,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1616, 133, 0, 67.81443786621094, 68.4093017578125, 0, 0, 1, 0.5, 0.5043478012084961, 0, 0, []],
				194,
				276,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1561, 97, 0, 188.1377563476563, 137.3704223632813, 0, 3.141592741012573, 1, 0.5206349492073059, 0.3565217256546021, 0, 0, []],
				230,
				277,
				[
					[0],
					[0]
				],
				[
				[
					50,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1572, 129, 0, 15.95922374725342, 23.36513900756836, 0, 0, 1, 0.758169949054718, 0.1339285671710968, 0, 0, []],
				191,
				278,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1563, 148, 0, 21.85502624511719, 10.92751312255859, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				190,
				279,
				[
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1180, 166, 0, 15.16699981689453, 24.90800094604492, 0, 0, 1, 0.2682926952838898, 0.8168317079544067, 0, 0, []],
				185,
				287,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1190, 149, 0, 20.33099937438965, 11.0600004196167, 0, 0, 1, 0.5040000081062317, 0.5, 0, 0, []],
				186,
				288,
				[
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1238, 167, 0, 85.8489990234375, 85.8489990234375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				187,
				289,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1186, 120, 0, 226.0850067138672, 177.802001953125, 0, 3.141592741012573, 1, 0.2779661118984222, 0.375, 0, 0, []],
				232,
				290,
				[
					[0],
					[0]
				],
				[
				[
					50,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1113, 163, 0, 96.71860504150391, 96.71860504150391, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				187,
				292,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1180, 168, 0, 15.16691112518311, 24.90826225280762, 0, 0, 1, 0.7479674816131592, 0.1881188154220581, 0, 0, []],
				184,
				293,
				[
				],
				[
				[
				],
				[
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1170, 185, 0, 20.33051300048828, 11.05980014801025, 0, 0, 1, 0.5040000081062317, 0.5, 0, 0, []],
				183,
				294,
				[
				],
				[
				[
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[639, 187, 0, 472, 261, 0, 3.141592741012573, 1, 0.5, 0.4980842769145966, 0, 0, []],
				234,
				191,
				[
					[0],
					[0]
				],
				[
				[
					120,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[557, 281, 0, 61.49470520019531, 61.49470520019531, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				207,
				192,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[759, 281, 0, 61.49470520019531, 61.49470520019531, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				207,
				193,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-862.3013305664063, 555.61474609375, 0, 1280, 354, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				161,
				194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-488.3013305664063, 338.6147766113281, 0, 488, 263, 0, 0, 1, 0.4897541105747223, 0.5247148275375366, 0, 0, []],
				233,
				196,
				[
					[0],
					[0]
				],
				[
				[
					120,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-633.3013305664063, 474.61474609375, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				214,
				197,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-497.3013305664063, 474.61474609375, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				214,
				198,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-350.3013305664063, 476.61474609375, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				214,
				199,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[609.6986694335938, 480.61474609375, 0, 380.5722961425781, 239.1283111572266, 0, 0, 1, 0.5010846257209778, 0.5, 0, 0, []],
				229,
				201,
				[
					[0],
					[0]
				],
				[
				[
					180,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[523.6986694335938, 550.61474609375, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				223,
				202,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[691.6986694335938, 551.61474609375, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				223,
				203,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640.6986694335938, 360.6147766113281, 0, 35, 45, 0, 0, 1, 0.5142857432365418, 0.5111111402511597, 0, 0, []],
				73,
				204,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[842.6986694335938, 496.61474609375, 0, 140, 159, 0, 0, 1, 0.5, 0.5031446814537048, 0, 0, []],
				235,
				205,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[112.6986694335938, 673.61474609375, 0, 67.30976104736328, 68.07464599609375, 0, 0, 1, 0.5, 0.5056179761886597, 0, 0, []],
				202,
				209,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[270.6986694335938, 673.61474609375, 0, 67.30976104736328, 68.07464599609375, 0, 0, 1, 0.5, 0.5056179761886597, 0, 0, []],
				202,
				210,
				[
				],
				[
				[
					0,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[182.6986694335938, 608.61474609375, 0, 254.4014892578125, 177.1074371337891, 0, 0, 1, 0.5015197396278381, 0.5757575631141663, 0, 0, []],
				231,
				211,
				[
					[0],
					[0]
				],
				[
				[
					90,
					0,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[312.6986694335938, 546.61474609375, 0, 140, 159, 0, 0, 1, 0.5, 0.5031446814537048, 0, 0, []],
				158,
				212,
				[
				],
				[
				[
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[-187.3013305664063, 358.6147766113281, 0, 140, 159, 0, 0, 1, 0.5, 0.5031446814537048, 0, 0, []],
				236,
				261,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[1240.69873046875, 680.61474609375, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				126,
				259,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[41.69866943359375, 678.61474609375, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				127,
				260,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[631.6986694335938, -1383.385131835938, 0, 1909.411743164063, 747, 0, 0, 0.699999988079071, 0.550000011920929, 0.5, 0, 0, []],
				128,
				213,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[640.6986694335938, -434.38525390625, 0, 692, 1192, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				69,
				214,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[722.6986694335938, -630.38525390625, 0, 231, 139, 0, 0, 1, 0.2900432944297791, 0.5179855823516846, 0, 0, []],
				168,
				215,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[540.6986694335938, -632.38525390625, 0, 230, 139, 0, 0, 1, 0.5, 0.5035971403121948, 0, 0, []],
				162,
				216,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[770.6986694335938, -493.38525390625, 0, 231, 139, 0, 0, 1, 0.5021644830703735, 0.5035971403121948, 0, 0, []],
				222,
				217,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[540.6986694335938, -493.38525390625, 0, 230, 139, 0, 0, 1, 0.5, 0.5035971403121948, 0, 0, []],
				221,
				218,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[218.6986694335938, -242.38525390625, 0, 231, 139, 0, 0, 1, 0.2900432944297791, 0.5179855823516846, 0, 0, []],
				225,
				219,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768.6986694335938, -251.38525390625, 0, 230, 139, 0, 0, 1, 0.5, 0.5035971403121948, 0, 0, []],
				224,
				220,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1040.69873046875, -224.38525390625, 0, 231, 139, 0, 0, 1, 0.5021644830703735, 0.5035971403121948, 0, 0, []],
				227,
				221,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[498.6986694335938, -230.38525390625, 0, 230, 139, 0, 0, 1, 0.5, 0.5035971403121948, 0, 0, []],
				226,
				222,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[682.6986694335938, -614.38525390625, 0, 167, 134, 0, 0, 1, 0.5029940009117127, 0.5, 0, 0, []],
				199,
				223,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[515.6986694335938, -500.38525390625, 0, 97, 172, 0, 0, 1, 0.5051546096801758, 0.5, 0, 0, []],
				200,
				224,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[747.6986694335938, -480.38525390625, 0, 167, 133, 0, 0, 1, 0.5029940009117127, 0.5037593841552734, 0, 0, []],
				165,
				225,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[613.6986694335938, -504.38525390625, 0, 100, 166, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				201,
				226,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[799.6986694335938, -245.38525390625, 0, 167, 134, 0, 0, 1, 0.5029940009117127, 0.5, 0, 0, []],
				204,
				227,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[248.6986694335938, -218.38525390625, 0, 167, 133, 0, 0, 1, 0.5029940009117127, 0.5037593841552734, 0, 0, []],
				203,
				228,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1036.69873046875, -230.38525390625, 0, 100, 166, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				206,
				229,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[501.6986694335938, -234.38525390625, 0, 97, 172, 0, 0, 1, 0.5051546096801758, 0.5, 0, 0, []],
				205,
				230,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1057.69873046875, -256.38525390625, 0, 180, 90, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				198,
				231,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[517.6986694335938, -220.38525390625, 0, 180, 89, 0, 0, 1, 0.5, 0.5056179761886597, 0, 0, []],
				196,
				232,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[229.6986694335938, -251.38525390625, 0, 171, 131, 0, 0, 1, 0.5029239654541016, 0.5038167834281921, 0, 0, []],
				195,
				233,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[803.6986694335938, -229.38525390625, 0, 171, 131, 0, 0, 1, 0.5029239654541016, 0.5038167834281921, 0, 0, []],
				197,
				234,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[661.6986694335938, -669.38525390625, 0, 233, 88, 0, 0, 1, 0.5021459460258484, 0.5, 0, 0, []],
				164,
				235,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[661.6986694335938, -581.38525390625, 0, 233, 87, 0, 0, 1, 0.5021459460258484, 0.5057471394538879, 0, 0, []],
				170,
				236,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[661.6986694335938, -494.38525390625, 0, 233, 88, 0, 0, 1, 0.5021459460258484, 0.5, 0, 0, []],
				179,
				237,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[814.6986694335938, -534.38525390625, 0, 125, 168, 0, 0, 1, 0.5040000081062317, 0.5, 0, 0, []],
				180,
				238,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[257.6986694335938, -235.38525390625, 0, 233, 88, 0, 0, 1, 0.5021459460258484, 0.5, 0, 0, []],
				177,
				239,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[567.6986694335938, -236.38525390625, 0, 233, 87, 0, 0, 1, 0.5021459460258484, 0.5057471394538879, 0, 0, []],
				178,
				240,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[838.6986694335938, -214.38525390625, 0, 233, 88, 0, 0, 1, 0.5021459460258484, 0.5, 0, 0, []],
				181,
				241,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1105.69873046875, -238.38525390625, 0, 125, 168, 0, 0, 1, 0.5040000081062317, 0.5, 0, 0, []],
				182,
				242,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768.6986694335938, -642.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				166,
				243,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[525.6986694335938, -643.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				219,
				244,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768.6986694335938, -502.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				159,
				245,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[525.6986694335938, -502.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				220,
				246,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[245.6986694335938, -231.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				215,
				247,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[502.6986694335938, -229.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				216,
				248,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779.6986694335938, -226.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				217,
				249,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1045.69873046875, -230.38525390625, 0, 243, 141, 0, 0, 1, 0.5020576119422913, 0.5035461187362671, 0, 0, []],
				218,
				250,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[244.6986694335938, -227.38525390625, 0, 236, 131, 0, 0, 1, 0.5, 0.5038167834281921, 0, 0, []],
				210,
				251,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1057.69873046875, -235.38525390625, 0, 236, 131, 0, 0, 1, 0.5, 0.5038167834281921, 0, 0, []],
				211,
				252,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[776.6986694335938, -219.38525390625, 0, 236, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				212,
				253,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[513.6986694335938, -205.38525390625, 0, 236, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				213,
				254,
				[
					[0],
					[0],
					[0],
					[0]
				],
				[
				[
				],
				[
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[504.6986694335938, -633.38525390625, 0, 236, 131, 0, 0, 1, 0.5, 0.5038167834281921, 0, 0, []],
				160,
				255,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[739.6986694335938, -633.38525390625, 0, 236, 131, 0, 0, 1, 0.5, 0.5038167834281921, 0, 0, []],
				167,
				256,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[503.6986694335938, -503.38525390625, 0, 236, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				208,
				257,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[739.6986694335938, -503.38525390625, 0, 236, 130, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				209,
				258,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[599.6986694335938, -631.38525390625, 0, 171, 131, 0, 0, 1, 0.5029239654541016, 0.5038167834281921, 0, 0, []],
				163,
				262,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[741.6986694335938, -480.38525390625, 0, 180, 89, 0, 0, 1, 0.5, 0.5056179761886597, 0, 0, []],
				169,
				263,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[598.6986694335938, -501.38525390625, 0, 171, 131, 0, 0, 1, 0.5029239654541016, 0.5038167834281921, 0, 0, []],
				188,
				264,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[741.6986694335938, -570.38525390625, 0, 180, 90, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				189,
				265,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"library",
		1280,
		1024,
		false,
		"library",
		7830083838788966,
		[
		[
			"Layer 0",
			0,
			7571113668485766,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-234, 229, 0, 150, 54, 0, -1.570796489715576, 1, 0.5, 0.5, 0, 0, []],
				129,
				91,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					1,
					1
				],
				[
				],
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					25,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4, 222, 0, 291, 410, 0, 0, 1, 0.4914089441299439, 0.6902438998222351, 0, 0, []],
				148,
				92,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[430, 169, 0, 462, 276, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				144,
				93,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[20, 594, 0, 380, 326, 0, 0, 1, 0.623106062412262, 0.4979338943958283, 0, 0, []],
				150,
				94,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[422, 580, 0, 418.6109924316406, 254.5160064697266, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				146,
				95,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[890, 609, 0, 331, 351, 0, 0, 1, 0.4865424335002899, 0.505091667175293, 0, 0, []],
				151,
				96,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[906, 154, 0, 416, 270, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				147,
				97,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 370, 0, 200, 161, 0, 1.570796370506287, 1, 0.5, 0.4968944191932678, 0, 0, []],
				135,
				98,
				[
				],
				[
				[
					160,
					0,
					0,
					0,
					1,
					1
				],
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					15,
					0
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[592, 992, 0, 461, 278, 0, 0, 1, 0.5010846257209778, 0.5, 0, 0, []],
				132,
				99,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[11, 983, 0, 500, 309, 0, 0, 1, 0.5, 0.5016181468963623, 0, 0, []],
				154,
				100,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1126, 929, 0, 330, 267, 0, 0, 1, 0.5, 0.5018726587295532, 0, 0, []],
				153,
				101,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1365, 271, 0, 326, 267, 0, 0, 1, 0.5, 0.5018726587295532, 0, 0, []],
				152,
				102,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1304, 613, 0, 335, 268, 0, 0, 1, 0.5014925599098206, 0.5, 0, 0, []],
				155,
				103,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[685, 426, 0, 140, 159, 0, 0, 1, 0.5, 0.5031446814537048, 0, 0, []],
				158,
				104,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-303, 371, 0, 150, 54, 0, -1.570796489715576, 1, 1.440000057220459, 0.4259259402751923, 0, 0, []],
				130,
				105,
				[
				],
				[
				[
					140,
					0,
					0,
					0,
					1,
					1
				],
				[
				],
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					-40,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-380, 157, 0, 150, 54, 0, -1.570796489715576, 1, 1.226666688919067, 0.4814814925193787, 0, 0, []],
				131,
				106,
				[
				],
				[
				[
					120,
					0,
					0,
					0,
					1,
					1
				],
				[
				],
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					40,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-472, 252, 0, 161, 196, 0, 0, 1, 0.5031055808067322, 0.5, 0, 0, []],
				149,
				107,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1815, 913, 0, 472, 261, 0, 0, 1, 0.5, 0.5019156932830811, 0, 0, []],
				133,
				108,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-441, -421, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				137,
				109,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-17, -427, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				140,
				110,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[387, -437, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				143,
				111,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[742, -454, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				145,
				112,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-440, -692, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				157,
				113,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-45, -695, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				142,
				114,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[354, -681, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				156,
				115,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[764, -653, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				134,
				116,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1117, -658, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				138,
				117,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1470, -658, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				141,
				118,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1487, -429, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				139,
				119,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1121, -439, 0, 192, 340, 0, 1.570796370506287, 1, 0.5, 0.4989857971668243, 0, 0, []],
				136,
				120,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"ev_title",
		[
		[
			1,
			"touched_temp",
			0,
			0,
false,false,8911803448347126,false
		]
,		[
			2,
			"library",
			false
		]
,		[
			2,
			"check active",
			false
		]
,		[
			0,
			null,
			false,
			null,
			455868961061321,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3213514241293457,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				401280053669815,
				false
				,[
				[
					11,
					"scaleRatio"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.min
						,[
[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
						]
,[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
						]
						]
					]
				]
				]
			]
,			[
				43,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3275671055004308,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.layoutwidth
						]
						,[
							0,
							2
						]
					]
				]
,				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.layoutheight
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				43,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				338955658282866,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.windowwidth
						]
						,[
							23,
							"scaleRatio"
						]
					]
				]
,				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.windowheight
						]
						,[
							23,
							"scaleRatio"
						]
					]
				]
				]
			]
,			[
				44,
				cr.behaviors.Sin.prototype.acts.SetActive,
				"Sine",
				8169787798853185,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			[true, "active"],
			false,
			null,
			8367140132004112,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8367140132004112,
				false
				,[
				[
					1,
					[
						2,
						"active"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1382918455670354,
				[
				[
					3,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					3465512030133139,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					44,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					3491599918361826,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					0,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					7776750985967908,
					false
					,[
					[
						2,
						["00_next_page",false]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					4,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2288085940308717,
					false
					,[
					[
						1,
						[
							2,
							"checkactivefx"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2448212996208208,
					false
					,[
					[
						11,
						"touched_temp"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8759412060424763,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					544912662591923,
					false
					,[
					[
						11,
						"touched_temp"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3218238071580117,
					false
					,[
					[
						11,
						"Loading"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8357050067172299,
					false
					,[
					[
						11,
						"check_acitve_ok"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7553091490889104,
					false
					,[
					[
						0,
						[
							1,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					9347929304653588,
					false
					,[
					[
						6,
						"play"
					]
					]
				]
,				[
					44,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					1165135430198205,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8896046574543041,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLoadFinished,
					null,
					1,
					false,
					false,
					false,
					6193501086067935,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2765361265132387,
					false
					,[
					[
						11,
						"Loading"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ev_cover",
		[
		[
			1,
			"scaleRatio",
			0,
			0,
false,false,5115853473035495,false
		]
,		[
			1,
			"delaytime",
			0,
			0,
false,false,7844878211301848,false
		]
,		[
			1,
			"delta_S0",
			0,
			0,
false,false,11295,false
		]
,		[
			1,
			"delta_S",
			0,
			0,
false,false,11294,false
		]
,		[
			1,
			"touch_time",
			0,
			0,
false,false,11293,false
		]
,		[
			1,
			"deltaX",
			0,
			0,
false,false,11292,false
		]
,		[
			1,
			"FirstX",
			0,
			0,
false,false,11184,false
		]
,		[
			1,
			"Loading",
			0,
			0,
false,false,11034,false
		]
,		[
			1,
			"deltaX_touchX",
			0,
			0,
false,false,11003,false
		]
,		[
			1,
			"Touching",
			0,
			0,
false,false,10990,false
		]
,		[
			0,
			null,
			false,
			null,
			15,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				16,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				17,
				false
				,[
				[
					11,
					"scaleRatio"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.min
						,[
[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
						]
,[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
							,[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
						]
						]
					]
				]
				]
			]
,			[
				22,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				18,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.layoutwidth
						]
						,[
							0,
							2
						]
					]
				]
,				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.layoutheight
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				22,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				19,
				false
				,[
				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.windowwidth
						]
						,[
							23,
							"scaleRatio"
						]
					]
				]
,				[
					0,
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.windowheight
						]
						,[
							23,
							"scaleRatio"
						]
					]
				]
				]
			]
,			[
				0,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3327676243432673,
				false
				,[
				[
					2,
					["corver",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						-20
					]
				]
,				[
					1,
					[
						2,
						"cover"
					]
				]
				]
			]
,			[
				238,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin2",
				9306207316708979,
				false
				,[
				[
					4,
					15
				]
,				[
					3,
					0
				]
				]
			]
,			[
				24,
				cr.behaviors.Sin.prototype.acts.SetActive,
				"Sine",
				4921903336327075,
				false
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			16837,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutEnd,
				null,
				1,
				false,
				false,
				false,
				16838,
				false
			]
			],
			[
			[
				0,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				16839,
				false
				,[
				[
					1,
					[
						2,
						"cover"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9638257579009348,
			[
			[
				3,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				2762215653022366,
				false
				,[
				[
					4,
					24
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4256379196032846,
				false
				,[
				[
					11,
					"Loading"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3982858831305831,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				4774130660566235,
				false
				,[
				[
					6,
					"title"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3460168527687978,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLoadFinished,
				null,
				1,
				false,
				false,
				false,
				1182266445758109,
				false
			]
			],
			[
			[
				6,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2696255544276736,
				false
			]
,			[
				24,
				cr.behaviors.Sin.prototype.acts.SetActive,
				"Sine",
				4841319700703571,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				986430723139193,
				false
				,[
				[
					11,
					"Loading"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Keo_tha"],
			false,
			null,
			1591659994580081,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1591659994580081,
				false
				,[
				[
					1,
					[
						2,
						"Keo_tha"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				11296,
				[
				[
					3,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					11297,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11298,
					false
					,[
					[
						11,
						"FirstX"
					]
,					[
						7,
						[
							20,
							3,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11299,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11300,
					false
					,[
					[
						11,
						"deltaX_touchX"
					]
,					[
						7,
						[
							5,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
							,[
								20,
								15,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11301,
					false
					,[
					[
						11,
						"touch_time"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.time
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11302,
					false
					,[
					[
						11,
						"delta_S"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11303,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11304,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					15,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					11305,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
							,[
								23,
								"deltaX_touchX"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11306,
				[
				[
					3,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					11307,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11308,
					false
					,[
					[
						11,
						"deltaX"
					]
,					[
						7,
						[
							5,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
							,[
								23,
								"FirstX"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11309,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11310,
					false
					,[
					[
						11,
						"touch_time"
					]
,					[
						7,
						[
							5,
							[
								19,
								cr.system_object.prototype.exps.time
							]
							,[
								23,
								"touch_time"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					11311,
					false
					,[
					[
						11,
						"delta_S0"
					]
,					[
						7,
						[
							7,
							[
								23,
								"deltaX"
							]
							,[
								6,
								[
									0,
									15
								]
								,[
									23,
									"touch_time"
								]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11312,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11313,
					false
					,[
					[
						11,
						"deltaX"
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							-30
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11314,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					11315,
					[
					[
						15,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						11316,
						false
						,[
						[
							8,
							5
						]
,						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						11317,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"delta_S0"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						11318,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							7,
							[
								5,
								[
									23,
									"delta_S"
								]
								,[
									0,
									6
								]
							]
						]
						]
					]
,					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						11319,
						false
						,[
						[
							0,
							[
								5,
								[
									20,
									15,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									0,
									6
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					11320,
					[
					[
						15,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						11321,
						false
						,[
						[
							8,
							2
						]
,						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						11322,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								23,
								"delta_S0"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						11323,
						false
						,[
						[
							11,
							"Touching"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11324,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11325,
					false
					,[
					[
						11,
						"deltaX"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					11326,
					[
					[
						17,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						16835,
						false
						,[
						[
							8,
							2
						]
,						[
							0,
							[
								0,
								1024
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						11328,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								23,
								"delta_S0"
							]
						]
						]
					]
					],
					[
					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						11329,
						false
						,[
						[
							0,
							[
								4,
								[
									20,
									15,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									0,
									6
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						11330,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							7,
							[
								4,
								[
									23,
									"delta_S"
								]
								,[
									0,
									6
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					11331,
					[
					[
						15,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						11332,
						false
						,[
						[
							8,
							4
						]
,						[
							0,
							[
								0,
								440
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						11333,
						false
						,[
						[
							11,
							"delta_S"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								23,
								"delta_S0"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						11334,
						false
						,[
						[
							11,
							"Touching"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11335,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					11336,
					false
					,[
					[
						8,
						2
					]
,					[
						0,
						[
							0,
							1024
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11337,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					15,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					11338,
					false
					,[
					[
						0,
						[
							4,
							[
								20,
								15,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								6
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				11339,
				[
				[
					15,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					11340,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							380
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					11341,
					false
					,[
					[
						11,
						"Touching"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					15,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					11342,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								15,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								6
							]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ev_play",
		[
		[
			2,
			"library",
			false
		]
,		[
			1,
			"count",
			0,
			0,
false,false,7424483992565361,false
		]
,		[
			0,
			[true, "Scale layout"],
			false,
			null,
			6774146139178337,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6774146139178337,
				false
				,[
				[
					1,
					[
						2,
						"Scale layout"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4786228390541336,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2242491777675264,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2538490277337089,
					false
					,[
					[
						11,
						"scaleRatio"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.min
							,[
[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowwidth
								]
								,[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
							]
,[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowheight
								]
								,[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
							]
							]
						]
					]
					]
				]
,				[
					35,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					12,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					35,
					cr.plugins_.Sprite.prototype.acts.SetSize,
					null,
					13,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
							,[
								23,
								"scaleRatio"
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
							,[
								23,
								"scaleRatio"
							]
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					6257644232673369,
					false
					,[
					[
						2,
						["entry_bg",false]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							-8
						]
					]
,					[
						1,
						[
							2,
							"start_bg"
						]
					]
					]
				]
,				[
					39,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					2599725884373027,
					false
					,[
					[
						4,
						38
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					9411443044486935,
					false
					,[
					[
						1,
						[
							2,
							"On"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5801928309781369,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutEnd,
					null,
					1,
					false,
					false,
					false,
					5287106322496277,
					false
				]
				],
				[
				[
					28,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					3326016388304523,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần sử dụng chung"],
			false,
			null,
			6294832200210144,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6294832200210144,
				false
				,[
				[
					1,
					[
						2,
						"Phần sử dụng chung"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Hiện chữ - show text on white box"],
				false,
				null,
				3001551275664251,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3001551275664251,
					false
					,[
					[
						1,
						[
							2,
							"Hiện chữ - show text on white box"
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				[true, "Sang trang"],
				false,
				null,
				1803891461080838,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1803891461080838,
					false
					,[
					[
						1,
						[
							2,
							"Sang trang"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3801845867564433,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						7405167603704212,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7037945250348836,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						1591327809192123,
						false
						,[
						[
							2,
							["dgko",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						3934518105972468,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						7094641640488201,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2059786180988573,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg hang khong"
									]
								]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						2530890278668699,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6357960898998622,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						8227924982944528,
						false
						,[
						[
							4,
							33
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						1418475172643345,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						3336183922241845,
						false
						,[
						[
							2,
							["dgbo",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						5793716365049325,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						7545198603024893,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						1232368818752482,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6381620530899676,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg bo"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7955411023297966,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						4326076194024105,
						false
						,[
						[
							4,
							40
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						6302775200606289,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						9243202076253042,
						false
						,[
						[
							2,
							["dgthuy",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						1999315597428676,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2719530989607576,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						9297902792794929,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						944196228817968,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg thuy"
									]
								]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần riêng cho từng trang"],
			false,
			null,
			8490667463546621,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8490667463546621,
				false
				,[
				[
					1,
					[
						2,
						"Phần riêng cho từng trang"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "mảng"],
				false,
				null,
				3491962135555747,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3491962135555747,
					false
					,[
					[
						1,
						[
							2,
							"mảng"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					698,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						699,
						false
					]
					],
					[
					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						702,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								228
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						712,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								515
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						713,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								774
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						714,
						false
						,[
						[
							0,
							[
								0,
								3
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								1035
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						715,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								-235
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						716,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								-250
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						717,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								-240
							]
						]
						]
					]
,					[
						125,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						718,
						false
						,[
						[
							0,
							[
								0,
								3
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								-250
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "On"],
			false,
			null,
			1583570051432529,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1583570051432529,
				false
				,[
				[
					1,
					[
						2,
						"On"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4097976410324784,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8744884306071136,
					false
				]
				],
				[
				[
					26,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					9845478626326728,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					26,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine2",
					8106914311871224,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					29,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					5154655955908442,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					30,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					8939880756217686,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					31,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					8006867356628376,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					42,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					464195221953264,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					42,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine2",
					55684346956459,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					42,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine3",
					5058077324218035,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					36,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					3732215906896162,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					37,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					5125132023977647,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					40,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					6008617728971993,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					25,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					9888302877351282,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"library",
		[
		[
			1,
			"2swaiting",
			0,
			0,
false,false,9412592909169157,false
		]
,		[
			1,
			"show_dialog",
			0,
			0,
false,false,3262185421591955,false
		]
,		[
			1,
			"180s_free",
			0,
			0,
false,false,3307967786747449,false
		]
,		[
			0,
			[true, "General"],
			false,
			null,
			6461040353319595,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6461040353319595,
				false
				,[
				[
					1,
					[
						2,
						"General"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				35435709669817,
				[
				[
					4,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5322258321274939,
					false
					,[
					[
						1,
						[
							2,
							"gotopage"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					3992186387077207,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayoutByName,
					null,
					4704458278134068,
					false
					,[
					[
						1,
						[
							20,
							4,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								0
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5188427635169624,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2219838502757703,
				false
				,[
				[
					11,
					"180s_free"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				205369142482908,
				false
				,[
				[
					11,
					"show_dialog"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				180998329837363,
				false
				,[
				[
					1,
					[
						2,
						"Count_time"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Count_time"],
			false,
			null,
			4543891936094075,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4543891936094075,
				false
				,[
				[
					1,
					[
						2,
						"Count_time"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6683758089382597,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					4066883105485228,
					false
					,[
					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					7274561098223734,
					false
					,[
					[
						11,
						"180s_free"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7308800398923667,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					1841747630702451,
					false
				]
				],
				[
				[
					237,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					438186088570296,
					false
					,[
					[
						7,
						[
							23,
							"180s_free"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ev_dghangkhong",
		[
		[
			2,
			"library",
			false
		]
,		[
			1,
			"ondisplay",
			0,
			0,
false,false,1952097725000852,false
		]
,		[
			1,
			"on",
			0,
			0,
false,false,5880719280366815,false
		]
,		[
			0,
			[true, "Scale layout"],
			false,
			null,
			3384732257140417,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3384732257140417,
				false
				,[
				[
					1,
					[
						2,
						"Scale layout"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Scale_bg"],
				false,
				null,
				489620229782839,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					489620229782839,
					false
					,[
					[
						1,
						[
							2,
							"Scale_bg"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						10,
						false
					]
					],
					[
					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						7995917815938209,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										640
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										360
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						2085555376999156,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										1909
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										747
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2829878611673782,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						8329808468884515,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4151268844661489,
						false
						,[
						[
							11,
							"scaleRatio"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.min
								,[
[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								]
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2720778811848757,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						1896038989333752,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowwidth
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowheight
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
						]
					]
,					[
						72,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9535427890399162,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										640
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										571
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						72,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						3501053328647804,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										1282
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										201
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
,					[
						63,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2902760607392396,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										1107
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										522
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						63,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						5881908878149022,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										369
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										259
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						1482346792599751,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						65,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						7527390481799256,
						false
						,[
						[
							4,
							74
						]
,						[
							3,
							1
						]
						]
					]
,					[
						64,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						6669103572624016,
						false
						,[
						[
							4,
							74
						]
,						[
							3,
							1
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5964741812700008,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1724981955570091,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						6234877554976584,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9875521905900414,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7927553157608965,
						false
						,[
						[
							2,
							["s_bg_1",false]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								-10
							]
						]
,						[
							1,
							[
								2,
								"bg1"
							]
						]
						]
					]
,					[
						245,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						8205036528639192,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						1970420388785152,
						false
						,[
						[
							0,
							[
								1,
								1.5
							]
						]
						]
					]
,					[
						245,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						6913026465320413,
						false
						,[
						[
							1,
							[
								2,
								"a"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						273516569520098,
						false
						,[
						[
							11,
							"on"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7538105025626453,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5900830043417441,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						4447692628434109,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2274462422076896,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						5579675144643927,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							171016890669039,
							false
							,[
							[
								4,
								239
							]
							]
						]
						],
						[
						[
							239,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							6957567366877276,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3573591068424514,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							7304201131438151,
							false
							,[
							[
								4,
								240
							]
							]
						]
						],
						[
						[
							240,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							3724082587089855,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7988757079699141,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							5873804332839535,
							false
							,[
							[
								4,
								241
							]
							]
						]
						],
						[
						[
							241,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							9068994635014727,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8118700354767053,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutEnd,
						null,
						1,
						false,
						false,
						false,
						7845745766854883,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6197817271995649,
						false
						,[
						[
							11,
							"on"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						65,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						7165872414565486,
						false
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần sử dụng chung"],
			false,
			null,
			7657642022368994,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7657642022368994,
				false
				,[
				[
					1,
					[
						2,
						"Phần sử dụng chung"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Sang trang"],
				false,
				null,
				1803891461080838,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1803891461080838,
					false
					,[
					[
						1,
						[
							2,
							"Sang trang"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3801845867564433,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						7405167603704212,
						false
						,[
						[
							4,
							126
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7743429026461161,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7037945250348836,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						3934518105972468,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						8091604705155518,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2059786180988573,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg thuy"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6357960898998622,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						8227924982944528,
						false
						,[
						[
							4,
							127
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8673670816056653,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						1418475172643345,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						5793716365049325,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						5425274420153581,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6381620530899676,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"play"
									]
								]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần riêng cho từng trang"],
			false,
			null,
			1902687957821749,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1902687957821749,
				false
				,[
				[
					1,
					[
						2,
						"Phần riêng cho từng trang"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "hướng đi + keo-cuon frame"],
				false,
				null,
				4586398041913277,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4586398041913277,
					false
					,[
					[
						1,
						[
							2,
							"hướng đi + keo-cuon frame"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "huong di "],
					false,
					null,
					996,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						996,
						false
						,[
						[
							1,
							[
								2,
								"huong di "
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						676,
						[
						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							681,
							false
							,[
							[
								10,
								3
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							741,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								742,
								false
								,[
								[
									8,
									3
								]
,								[
									0,
									[
										0,
										1500
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								743,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								150,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								744,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								148,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								1323,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								73,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								745,
								false
								,[
								[
									0,
									[
										4,
										[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											0,
											10
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							682,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								683,
								false
								,[
								[
									8,
									4
								]
,								[
									0,
									[
										0,
										1500
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								684,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								686,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								150,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								1736,
								false
							]
,							[
								148,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								2196,
								false
							]
,							[
								148,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								5722450643864092,
								false
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								3113,
								false
								,[
								[
									11,
									"ondisplay"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3372,
							[
							[
								148,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3373,
								false
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3374,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								6015758950531586,
								false
								,[
								[
									10,
									6
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3375,
							[
							[
								150,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3376,
								false
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3377,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								5086490531456407,
								false
								,[
								[
									10,
									6
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						749,
						[
						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							750,
							false
							,[
							[
								10,
								3
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							751,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								752,
								false
								,[
								[
									8,
									5
								]
,								[
									0,
									[
										0,
										-300
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								753,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								144,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								764,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								73,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								755,
								false
								,[
								[
									0,
									[
										5,
										[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											0,
											10
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							756,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								757,
								false
								,[
								[
									8,
									2
								]
,								[
									0,
									[
										0,
										-300
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								758,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								760,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								144,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								2197,
								false
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								3114,
								false
								,[
								[
									11,
									"ondisplay"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								4,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								3629,
								false
								,[
								[
									1,
									[
										2,
										"des1"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3381,
							[
							[
								144,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3382,
								false
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3383,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								5107403409677982,
								false
								,[
								[
									10,
									6
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						689,
						[
						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							691,
							false
							,[
							[
								10,
								2
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						[
							73,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							693,
							false
							,[
							[
								0,
								[
									0,
									640
								]
							]
,							[
								0,
								[
									0,
									360
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							694,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3621,
						[
						[
							4,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							3622,
							false
							,[
							[
								1,
								[
									2,
									"des1"
								]
							]
							]
						]
						],
						[
						[
							137,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3626,
							false
						]
,						[
							136,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3627,
							false
						]
,						[
							134,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3628,
							false
						]
						]
					]
					]
				]
,				[
					0,
					[true, "keo + cuon frame"],
					false,
					null,
					2381,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2381,
						false
						,[
						[
							1,
							[
								2,
								"keo + cuon frame"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						345,
						[
						[
							3,
							cr.plugins_.Touch.prototype.cnds.OnTouchStart,
							null,
							1,
							false,
							false,
							false,
							346,
							false
						]
						],
						[
						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							347,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						348,
						[
						[
							3,
							cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
							null,
							1,
							false,
							false,
							false,
							349,
							false
						]
						],
						[
						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							350,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						170,
						[
						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							171,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							3619797729463285,
							false
							,[
							[
								10,
								6
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							69,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							490,
							false
							,[
							[
								3,
								1
							]
							]
						]
,						[
							128,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1921,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							172,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								9265791239088214,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									3
								]
,								[
									7,
									[
										7,
										[
											19,
											cr.system_object.prototype.exps.windowheight
										]
										,[
											0,
											2
										]
									]
								]
								]
							]
							],
							[
							[
								69,
								cr.plugins_.Sprite.prototype.acts.MoveForward,
								null,
								174,
								false
								,[
								[
									0,
									[
										6,
										[
											0,
											800
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						175,
						[
						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							176,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						[
							4,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8513433929307176,
							false
							,[
							[
								1,
								[
									2,
									"des1"
								]
							]
,							[
								13,
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							177,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								178,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										0,
										-435
									]
								]
								]
							]
							],
							[
							[
								69,
								cr.plugins_.Sprite.prototype.acts.MoveForward,
								null,
								179,
								false
								,[
								[
									0,
									[
										6,
										[
											0,
											-800
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							180,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								181,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										0,
										-435
									]
								]
								]
							]
							],
							[
							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								183,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								491,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								128,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								1922,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Start_Play"],
				false,
				null,
				938656152588478,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					938656152588478,
					false
					,[
					[
						1,
						[
							2,
							"Start_Play"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1771,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1772,
						false
						,[
						[
							4,
							74
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1773,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1774,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3272,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3408,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						240,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1775,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						244,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1776,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1778,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1779,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2029,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2030,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					453,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						454,
						false
						,[
						[
							4,
							68
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						455,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						586,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3273,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3409,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						239,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						992,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						243,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						993,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						588,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2028,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						456,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2031,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1201,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1202,
						false
						,[
						[
							4,
							62
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1203,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1204,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3274,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3410,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						242,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1205,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						241,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1206,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2027,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1208,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1209,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2032,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ghép hình"],
				false,
				null,
				3297423173776338,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3297423173776338,
					false
					,[
					[
						1,
						[
							2,
							"ghép hình"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "ghep mbtt"],
					false,
					null,
					340,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						340,
						false
						,[
						[
							1,
							[
								2,
								"ghep mbtt"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep mb1"],
						false,
						null,
						341,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							341,
							false
							,[
							[
								1,
								[
									2,
									"ghep mb1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									79
								]
								]
							]
							],
							[
							[
								79,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								79,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								79,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3683,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									79,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									79,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											79,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									79,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									215,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											79,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									79,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								79,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									79,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									79,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										75
									]
									]
								]
								],
								[
								[
									79,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										75
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									79,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3677,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									79,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									227,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									79,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									228,
									false
									,[
									[
										4,
										75
									]
									]
								]
,								[
									79,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									79,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											79,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											79,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep mb2"],
						false,
						null,
						342,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							342,
							false
							,[
							[
								1,
								[
									2,
									"ghep mb2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							196,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								197,
								false
								,[
								[
									4,
									80
								]
								]
							]
							],
							[
							[
								80,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								205,
								false
							]
,							[
								80,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								320,
								false
							]
,							[
								80,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								235,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3682,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								248,
								[
								[
									80,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									249,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									80,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									266,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											80,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									80,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									317,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											80,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									80,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									252,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							253,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								254,
								false
							]
							],
							[
							[
								80,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								255,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								256,
								[
								[
									80,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									257,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									80,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									258,
									false
									,[
									[
										4,
										76
									]
									]
								]
								],
								[
								[
									80,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									259,
									false
									,[
									[
										4,
										76
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									80,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									600,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3676,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								261,
								[
								[
									80,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									318,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									80,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									319,
									false
									,[
									[
										4,
										76
									]
									]
								]
,								[
									80,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									264,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									80,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									265,
									false
									,[
									[
										0,
										[
											21,
											80,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											80,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep mb3"],
						false,
						null,
						343,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							343,
							false
							,[
							[
								1,
								[
									2,
									"ghep mb3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							198,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								199,
								false
								,[
								[
									4,
									81
								]
								]
							]
							],
							[
							[
								81,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								206,
								false
							]
,							[
								81,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								237,
								false
							]
,							[
								81,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								238,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3681,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								269,
								[
								[
									81,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									270,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									81,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									271,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											81,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									81,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									305,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											81,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									81,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									273,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							274,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								275,
								false
							]
							],
							[
							[
								81,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								276,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								277,
								[
								[
									81,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									278,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									81,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									279,
									false
									,[
									[
										4,
										77
									]
									]
								]
								],
								[
								[
									81,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									280,
									false
									,[
									[
										4,
										77
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									81,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									281,
									false
									,[
									[
										3,
										0
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								282,
								[
								[
									81,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									306,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									81,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									307,
									false
									,[
									[
										4,
										77
									]
									]
								]
,								[
									81,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									285,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
,								[
									61,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									351,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									81,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									286,
									false
									,[
									[
										0,
										[
											21,
											81,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											81,
											false,
											null
											,2
										]
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3678,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep mb4"],
						false,
						null,
						344,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							344,
							false
							,[
							[
								1,
								[
									2,
									"ghep mb4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							200,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								201,
								false
								,[
								[
									4,
									82
								]
								]
							]
							],
							[
							[
								82,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								207,
								false
							]
,							[
								82,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								240,
								false
							]
,							[
								82,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								242,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3680,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								287,
								[
								[
									82,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									288,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									82,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									289,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											82,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									82,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									290,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											82,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									82,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									291,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							292,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								293,
								false
							]
							],
							[
							[
								82,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								294,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								295,
								[
								[
									82,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									296,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									82,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									297,
									false
									,[
									[
										4,
										78
									]
									]
								]
								],
								[
								[
									82,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									298,
									false
									,[
									[
										4,
										78
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									82,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									299,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3679,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								300,
								[
								[
									82,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									308,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									82,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									309,
									false
									,[
									[
										4,
										78
									]
									]
								]
,								[
									82,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									303,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									82,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									304,
									false
									,[
									[
										0,
										[
											21,
											82,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											82,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						353,
						[
						[
							79,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							354,
							false
							,[
							[
								4,
								75
							]
							]
						]
,						[
							80,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							355,
							false
							,[
							[
								4,
								76
							]
							]
						]
,						[
							81,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							356,
							false
							,[
							[
								4,
								77
							]
							]
						]
,						[
							82,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							357,
							false
							,[
							[
								4,
								78
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							358,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							359,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							244,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1390,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							680,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							74,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							8065236986031056,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							64,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6255549542930378,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							65,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							1517965314086228,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1391,
							[
							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1405,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								240,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								570,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2035,
								false
								,[
								[
									4,
									150
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								150,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2036,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1406,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2493,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3115,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								65,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3129,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								64,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3130,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3271,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3575,
								false
								,[
								[
									4,
									137
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								137,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3576,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3559,
							[
							[
								74,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3560,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3561,
								false
								,[
								[
									2,
									["mbtt",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										"mbtt"
									]
								]
								]
							]
,							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3562,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "ghep may bay"],
					false,
					null,
					447,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						447,
						false
						,[
						[
							1,
							[
								2,
								"ghep may bay"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep maybay1"],
						false,
						null,
						448,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							448,
							false
							,[
							[
								1,
								[
									2,
									"ghep maybay1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									49
								]
								]
							]
							],
							[
							[
								49,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								49,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								49,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								496,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3667,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									49,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									49,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											49,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									49,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									531,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											49,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									49,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									533,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								49,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									49,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									49,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										45
									]
									]
								]
								],
								[
								[
									49,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										45
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									49,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3674,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									49,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									535,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									49,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									536,
									false
									,[
									[
										4,
										45
									]
									]
								]
,								[
									49,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									49,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											49,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											51,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep maybay2"],
						false,
						null,
						541,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							541,
							false
							,[
							[
								1,
								[
									2,
									"ghep maybay2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									51
								]
								]
							]
							],
							[
							[
								51,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								51,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								51,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								496,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3668,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									51,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									51,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											51,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									51,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									542,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											51,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									51,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									533,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								51,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									51,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									51,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										46
									]
									]
								]
								],
								[
								[
									51,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										46
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									51,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3673,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									51,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									543,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									51,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									544,
									false
									,[
									[
										4,
										46
									]
									]
								]
,								[
									51,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									51,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											51,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											51,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep maybay3"],
						false,
						null,
						545,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							545,
							false
							,[
							[
								1,
								[
									2,
									"ghep maybay3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									50
								]
								]
							]
							],
							[
							[
								50,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								50,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								50,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								496,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3669,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									50,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											50,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									542,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											50,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									533,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								50,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								549,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									50,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									50,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										47
									]
									]
								]
								],
								[
								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										47
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									50,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3672,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									50,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									550,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									50,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									551,
									false
									,[
									[
										4,
										47
									]
									]
								]
,								[
									50,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											50,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											50,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep maybay4"],
						false,
						null,
						546,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							546,
							false
							,[
							[
								1,
								[
									2,
									"ghep maybay4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									52
								]
								]
							]
							],
							[
							[
								52,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								52,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								52,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								496,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3670,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									52,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									52,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											52,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									52,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									552,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											52,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									52,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									533,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								52,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									52,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									52,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										48
									]
									]
								]
								],
								[
								[
									52,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										48
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									52,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3671,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									52,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									553,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									52,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									554,
									false
									,[
									[
										4,
										48
									]
									]
								]
,								[
									52,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									52,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											52,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											52,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						555,
						[
						[
							49,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							566,
							false
							,[
							[
								4,
								45
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							567,
							false
							,[
							[
								4,
								46
							]
							]
						]
,						[
							50,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							568,
							false
							,[
							[
								4,
								47
							]
							]
						]
,						[
							52,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							569,
							false
							,[
							[
								4,
								48
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							560,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							561,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
							]
						]
,						[
							243,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1418,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							763,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							68,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							7636555846180876,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1413,
							[
							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1414,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								239,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								2012,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1416,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								46,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2037,
								false
								,[
								[
									4,
									144
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								144,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2038,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								68,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2494,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								68,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3116,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								68,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3270,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3571,
								false
								,[
								[
									4,
									136
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								136,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3572,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3563,
							[
							[
								68,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3564,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3565,
								false
								,[
								[
									2,
									["maybay1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										"maybay"
									]
								]
								]
							]
,							[
								68,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3566,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "ghep kkc"],
					false,
					null,
					1152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						1152,
						false
						,[
						[
							1,
							[
								2,
								"ghep kkc"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep 1mkkc"],
						false,
						null,
						448,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							448,
							false
							,[
							[
								1,
								[
									2,
									"ghep 1mkkc"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									57
								]
								]
							]
							],
							[
							[
								57,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								57,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								57,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								1177,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3666,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									57,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									57,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											57,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									57,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1178,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											57,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									57,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1179,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								57,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									57,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									57,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										53
									]
									]
								]
								],
								[
								[
									57,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										53
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									57,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3659,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									57,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1180,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									57,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1181,
									false
									,[
									[
										4,
										53
									]
									]
								]
,								[
									57,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									57,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											57,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											57,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep 1mkkc2"],
						false,
						null,
						1182,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1182,
							false
							,[
							[
								1,
								[
									2,
									"ghep 1mkkc2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									58
								]
								]
							]
							],
							[
							[
								58,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								58,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								58,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								1177,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3665,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									58,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									58,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											58,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									58,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1185,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											58,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									58,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1186,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								58,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									58,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									58,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										54
									]
									]
								]
								],
								[
								[
									58,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										54
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									58,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3660,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									58,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1187,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									58,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1188,
									false
									,[
									[
										4,
										54
									]
									]
								]
,								[
									58,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									58,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											58,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											58,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep 1mkkc3"],
						false,
						null,
						1183,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1183,
							false
							,[
							[
								1,
								[
									2,
									"ghep 1mkkc3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									59
								]
								]
							]
							],
							[
							[
								59,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								59,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								1177,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3664,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									59,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											59,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1189,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											59,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1179,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										55
									]
									]
								]
								],
								[
								[
									59,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										55
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									59,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									1191,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3661,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1192,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1193,
									false
									,[
									[
										4,
										55
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									59,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											59,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											59,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep 1mkkc4"],
						false,
						null,
						1184,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1184,
							false
							,[
							[
								1,
								[
									2,
									"ghep 1mkkc4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							492,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								493,
								false
								,[
								[
									4,
									60
								]
								]
							]
							],
							[
							[
								60,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								494,
								false
							]
,							[
								60,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								495,
								false
							]
,							[
								60,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								1177,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3663,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								497,
								[
								[
									60,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									498,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									60,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									499,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											60,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									60,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1194,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											60,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									60,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1179,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							502,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								503,
								false
							]
							],
							[
							[
								60,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								534,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								505,
								[
								[
									60,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									506,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									60,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									507,
									false
									,[
									[
										4,
										56
									]
									]
								]
								],
								[
								[
									60,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									508,
									false
									,[
									[
										4,
										56
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									60,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									509,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3662,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								510,
								[
								[
									60,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1195,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									60,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1196,
									false
									,[
									[
										4,
										56
									]
									]
								]
,								[
									60,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									513,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									60,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									514,
									false
									,[
									[
										0,
										[
											21,
											60,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											60,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						555,
						[
						[
							57,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1197,
							false
							,[
							[
								4,
								53
							]
							]
						]
,						[
							58,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1198,
							false
							,[
							[
								4,
								54
							]
							]
						]
,						[
							59,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1199,
							false
							,[
							[
								4,
								55
							]
							]
						]
,						[
							60,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1200,
							false
							,[
							[
								4,
								56
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							560,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							561,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							242,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1305,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							61,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							763,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							62,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							404230358046061,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1387,
							[
							[
								61,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1407,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								241,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								1324,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								61,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1408,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								54,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2033,
								false
								,[
								[
									4,
									148
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								148,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2034,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								62,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2495,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								62,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3118,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								62,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3269,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3573,
								false
								,[
								[
									4,
									134
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								134,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3574,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3567,
							[
							[
								62,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3568,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3569,
								false
								,[
								[
									2,
									["khingkhicau",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										"kkc"
									]
								]
								]
							]
,							[
								62,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3570,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ghep xong => play hoat hinh"],
				false,
				null,
				4610698623792757,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4610698623792757,
					false
					,[
					[
						1,
						[
							2,
							"ghep xong => play hoat hinh"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2496,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2497,
						false
						,[
						[
							4,
							68
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2501,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3122,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3125,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2522,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						2527,
						false
						,[
						[
							4,
							135
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2705,
						false
						,[
						[
							2,
							["plane_sound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2503,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2504,
						false
						,[
						[
							4,
							74
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2505,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3120,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3124,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2523,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						2539,
						false
						,[
						[
							4,
							149
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2507,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2508,
						false
						,[
						[
							4,
							62
						]
						]
					]
,					[
						62,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2509,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3121,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						74,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3123,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						61,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2517,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						2524,
						false
						,[
						[
							4,
							129
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								3,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "On"],
			false,
			null,
			4601120063073037,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4601120063073037,
				false
				,[
				[
					1,
					[
						2,
						"On"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5553816354654797,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					9720522299405627,
					false
				]
				],
				[
				[
					62,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					2704126062138089,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					62,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine2",
					8034907734510258,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					68,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					9188798883537502,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					74,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					1398487458642687,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					66,
					cr.behaviors.Bullet.prototype.acts.SetEnabled,
					"Bullet",
					6740323212663125,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					67,
					cr.behaviors.Bullet.prototype.acts.SetEnabled,
					"Bullet",
					1584686958031589,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					70,
					cr.behaviors.Sin.prototype.acts.SetActive,
					"Sine",
					4513822862759315,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					71,
					cr.behaviors.Bullet.prototype.acts.SetEnabled,
					"Bullet",
					579225929766045,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					64,
					cr.behaviors.Rotate.prototype.acts.SetSpeed,
					"Rotate",
					5434893253559554,
					false
					,[
					[
						0,
						[
							0,
							250
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ev_dgthuy",
		[
		[
			2,
			"library",
			false
		]
,		[
			0,
			[true, "Scale layout"],
			false,
			null,
			8142276163192064,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8142276163192064,
				false
				,[
				[
					1,
					[
						2,
						"Scale layout"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Scale_bg"],
				false,
				null,
				489620229782839,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					489620229782839,
					false
					,[
					[
						1,
						[
							2,
							"Scale_bg"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						10,
						false
					]
					],
					[
					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						7995917815938209,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										640
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										360
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						2085555376999156,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										1909
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										747
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2829878611673782,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						8329808468884515,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4151268844661489,
						false
						,[
						[
							11,
							"scaleRatio"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.min
								,[
[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								]
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2720778811848757,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						1896038989333752,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowwidth
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowheight
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						9438269732384948,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						116,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						141676745402093,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						109,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1293347584320721,
						false
						,[
						[
							4,
							115
						]
,						[
							3,
							1
						]
						]
					]
,					[
						110,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						7131306305057461,
						false
						,[
						[
							4,
							115
						]
,						[
							3,
							1
						]
						]
					]
,					[
						117,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						8209223487412249,
						false
						,[
						[
							4,
							113
						]
,						[
							3,
							1
						]
						]
					]
,					[
						108,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2336024125922866,
						false
						,[
						[
							4,
							113
						]
,						[
							3,
							1
						]
						]
					]
,					[
						113,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						6386056589618544,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						114,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9722620378793268,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						115,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1643214130116471,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7258842057378593,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						3524072022402114,
						false
						,[
						[
							2,
							["s_bg_2",false]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								-10
							]
						]
,						[
							1,
							[
								2,
								"bg2"
							]
						]
						]
					]
,					[
						245,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1233873608329148,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						5408623032597152,
						false
						,[
						[
							0,
							[
								1,
								1.5
							]
						]
						]
					]
,					[
						245,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1508650148682177,
						false
						,[
						[
							1,
							[
								2,
								"a"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2538712276842251,
						false
						,[
						[
							11,
							"on"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						113,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						4453196649420789,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						114,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1021263874632874,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						115,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						345110244733546,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6874596594960906,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9705762245631503,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutEnd,
						null,
						1,
						false,
						false,
						false,
						4655491069635062,
						false
					]
					],
					[
					[
						109,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						3019007147414577,
						false
					]
,					[
						110,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						7695172938688612,
						false
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						5845586670377053,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần sử dụng chung"],
			false,
			null,
			6286683210960973,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6286683210960973,
				false
				,[
				[
					1,
					[
						2,
						"Phần sử dụng chung"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Sang trang"],
				false,
				null,
				1803891461080838,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1803891461080838,
					false
					,[
					[
						1,
						[
							2,
							"Sang trang"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3801845867564433,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						7405167603704212,
						false
						,[
						[
							4,
							126
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8525106137804357,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7037945250348836,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						3934518105972468,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						8091604705155518,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2059786180988573,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg bo"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6357960898998622,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						8227924982944528,
						false
						,[
						[
							4,
							127
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6777042308657849,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						1418475172643345,
						false
						,[
						[
							2,
							["00_next_page",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						5793716365049325,
						false
						,[
						[
							11,
							"count"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						5425274420153581,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6381620530899676,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg hang khong"
									]
								]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần riêng cho từng trang"],
			false,
			null,
			7766199303691092,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7766199303691092,
				false
				,[
				[
					1,
					[
						2,
						"Phần riêng cho từng trang"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "hướng đi + keo-cuon frame"],
				false,
				null,
				7799681973908675,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7799681973908675,
					false
					,[
					[
						1,
						[
							2,
							"hướng đi + keo-cuon frame"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "keo + cuon frame"],
					false,
					null,
					1471,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						1471,
						false
						,[
						[
							1,
							[
								2,
								"keo + cuon frame"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						835,
						[
						[
							3,
							cr.plugins_.Touch.prototype.cnds.OnTouchStart,
							null,
							1,
							false,
							false,
							false,
							836,
							false
						]
						],
						[
						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							837,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						838,
						[
						[
							3,
							cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
							null,
							1,
							false,
							false,
							false,
							839,
							false
						]
						],
						[
						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							840,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						841,
						[
						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							842,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							69,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							843,
							false
							,[
							[
								3,
								1
							]
							]
						]
,						[
							128,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2206,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							844,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8018024539376243,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									3
								]
,								[
									7,
									[
										7,
										[
											19,
											cr.system_object.prototype.exps.windowheight
										]
										,[
											0,
											2
										]
									]
								]
								]
							]
							],
							[
							[
								69,
								cr.plugins_.Sprite.prototype.acts.MoveForward,
								null,
								1473,
								false
								,[
								[
									0,
									[
										6,
										[
											0,
											800
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						847,
						[
						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							848,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							849,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								850,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										0,
										-415
									]
								]
								]
							]
							],
							[
							[
								69,
								cr.plugins_.Sprite.prototype.acts.MoveForward,
								null,
								1472,
								false
								,[
								[
									0,
									[
										6,
										[
											0,
											-800
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							852,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								853,
								false
								,[
								[
									7,
									[
										20,
										69,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										0,
										-415
									]
								]
								]
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								854,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								855,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								128,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								2207,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "huong di "],
					false,
					null,
					996,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						996,
						false
						,[
						[
							1,
							[
								2,
								"huong di "
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						676,
						[
						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							681,
							false
							,[
							[
								10,
								3
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							741,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								742,
								false
								,[
								[
									8,
									3
								]
,								[
									0,
									[
										0,
										1500
									]
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								743,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								146,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								1513,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								73,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								745,
								false
								,[
								[
									0,
									[
										4,
										[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											0,
											10
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							682,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								683,
								false
								,[
								[
									8,
									4
								]
,								[
									0,
									[
										0,
										1500
									]
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								684,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								686,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								146,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								2193,
								false
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								3103,
								false
								,[
								[
									11,
									"ondisplay"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								4,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								3614,
								false
								,[
								[
									1,
									[
										2,
										"des1"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3437,
							[
							[
								146,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3438,
								false
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3439,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						749,
						[
						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							750,
							false
							,[
							[
								10,
								3
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							751,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								752,
								false
								,[
								[
									8,
									5
								]
,								[
									0,
									[
										0,
										-300
									]
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								753,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								151,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								1594,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								147,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								1668,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								73,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								755,
								false
								,[
								[
									0,
									[
										5,
										[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											0,
											10
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							756,
							[
							[
								73,
								cr.plugins_.Sprite.prototype.cnds.CompareX,
								null,
								0,
								false,
								false,
								false,
								757,
								false
								,[
								[
									8,
									2
								]
,								[
									0,
									[
										0,
										-300
									]
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								758,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								760,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
,							[
								151,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								2194,
								false
							]
,							[
								147,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								2195,
								false
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								3104,
								false
								,[
								[
									11,
									"ondisplay"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								4,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								3615,
								false
								,[
								[
									1,
									[
										2,
										"des1"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3440,
							[
							[
								151,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3441,
								false
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3442,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3443,
							[
							[
								147,
								cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
								null,
								1,
								false,
								false,
								false,
								3444,
								false
							]
							],
							[
							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3445,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						689,
						[
						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							691,
							false
							,[
							[
								10,
								2
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						[
							73,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							693,
							false
							,[
							[
								0,
								[
									0,
									640
								]
							]
,							[
								0,
								[
									0,
									360
								]
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							694,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3616,
						[
						[
							4,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							3617,
							false
							,[
							[
								1,
								[
									2,
									"des1"
								]
							]
							]
						]
						],
						[
						[
							140,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3618,
							false
						]
,						[
							141,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3619,
							false
						]
,						[
							139,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							3620,
							false
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Start_Play"],
				false,
				null,
				1294550434987478,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1294550434987478,
					false
					,[
					[
						1,
						[
							2,
							"Start_Play"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					190,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						191,
						false
						,[
						[
							4,
							114
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						192,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						585,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						114,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3258,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3446,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						249,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						601,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						248,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						602,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1519,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						587,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2026,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2052,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					453,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						454,
						false
						,[
						[
							4,
							115
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						455,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						586,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						115,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3264,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3447,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						247,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						604,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						246,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1620,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						862,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2025,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						588,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2053,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1489,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						3090,
						false
						,[
						[
							4,
							113
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1491,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1492,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						113,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3265,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3448,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						251,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1496,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						250,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1582,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1520,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1497,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1493,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2054,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Ghép hình"],
				false,
				null,
				8102780878964411,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8102780878964411,
					false
					,[
					[
						1,
						[
							2,
							"Ghép hình"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "ghep tauthuy"],
					false,
					null,
					883,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						883,
						false
						,[
						[
							1,
							[
								2,
								"ghep tauthuy"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep tauthuy1"],
						false,
						null,
						341,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							341,
							false
							,[
							[
								1,
								[
									2,
									"ghep tauthuy1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									95
								]
								]
							]
							],
							[
							[
								95,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								95,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								95,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3635,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									95,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									95,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											95,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									95,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									900,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											95,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									95,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								95,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									95,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									95,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										91
									]
									]
								]
								],
								[
								[
									95,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										91
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									95,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3642,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									95,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									901,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									95,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									902,
									false
									,[
									[
										4,
										91
									]
									]
								]
,								[
									95,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									95,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											95,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											95,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep tauthuy2"],
						false,
						null,
						1524,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1524,
							false
							,[
							[
								1,
								[
									2,
									"ghep tauthuy2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									96
								]
								]
							]
							],
							[
							[
								96,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								96,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								96,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								1537,
								false
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3636,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									96,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									96,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											96,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									96,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1526,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											96,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									96,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								96,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									96,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									96,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										92
									]
									]
								]
								],
								[
								[
									96,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										92
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3641,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									96,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1535,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									96,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1536,
									false
									,[
									[
										4,
										92
									]
									]
								]
,								[
									96,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									96,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											96,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											96,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep tauthuy3"],
						false,
						null,
						1525,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1525,
							false
							,[
							[
								1,
								[
									2,
									"ghep tauthuy3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									97
								]
								]
							]
							],
							[
							[
								97,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								97,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								97,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3637,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									97,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									97,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											97,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									97,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									900,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											97,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									97,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								97,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									97,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									97,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										93
									]
									]
								]
								],
								[
								[
									97,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										93
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									97,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3639,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									97,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									901,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									97,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									902,
									false
									,[
									[
										4,
										93
									]
									]
								]
,								[
									97,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									97,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											97,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											97,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep tauthuy4"],
						false,
						null,
						905,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							905,
							false
							,[
							[
								1,
								[
									2,
									"ghep tauthuy4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									98
								]
								]
							]
							],
							[
							[
								98,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								98,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								98,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3638,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									98,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									98,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											98,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									98,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									916,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											98,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									98,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								98,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									98,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									98,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										94
									]
									]
								]
								],
								[
								[
									98,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										94
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									98,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3640,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									98,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									917,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									98,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									918,
									false
									,[
									[
										4,
										94
									]
									]
								]
,								[
									98,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									98,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											98,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											98,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						353,
						[
						[
							95,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							919,
							false
							,[
							[
								4,
								91
							]
							]
						]
,						[
							96,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2119,
							false
							,[
							[
								4,
								92
							]
							]
						]
,						[
							97,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							921,
							false
							,[
							[
								4,
								93
							]
							]
						]
,						[
							98,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							922,
							false
							,[
							[
								4,
								94
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							358,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							359,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							249,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1504,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							248,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							570,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							680,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							114,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6339971102433115,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1500,
							[
							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1501,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								93,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								1512,
								false
								,[
								[
									4,
									146
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								146,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3105,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									1
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1503,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								114,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2573,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								114,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3112,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								114,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3259,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3537,
								false
								,[
								[
									4,
									140
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								140,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3538,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3543,
							[
							[
								114,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3544,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3545,
								false
								,[
								[
									2,
									["tauthuy",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								114,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3546,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "ghep thuyen buom"],
					false,
					null,
					1617,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						1617,
						false
						,[
						[
							1,
							[
								2,
								"ghep thuyen buom"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep thuyenbuom1"],
						false,
						null,
						1540,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1540,
							false
							,[
							[
								1,
								[
									2,
									"ghep thuyenbuom1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									99
								]
								]
							]
							],
							[
							[
								99,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								99,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								99,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								1591,
								false
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3650,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									99,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									99,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											99,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									99,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1561,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											99,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									99,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								99,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									99,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									99,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										103
									]
									]
								]
								],
								[
								[
									99,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										103
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3643,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									99,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1589,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									99,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1590,
									false
									,[
									[
										4,
										103
									]
									]
								]
,								[
									99,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									99,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											99,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											99,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep thuyenbuom2"],
						false,
						null,
						1565,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1565,
							false
							,[
							[
								1,
								[
									2,
									"ghep thuyenbuom2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									100
								]
								]
							]
							],
							[
							[
								100,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								100,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								100,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3649,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									100,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									100,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											100,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									100,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1568,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											100,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									100,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								100,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									100,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									100,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										104
									]
									]
								]
								],
								[
								[
									100,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										104
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									100,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3644,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									100,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									917,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									100,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1569,
									false
									,[
									[
										4,
										104
									]
									]
								]
,								[
									100,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									100,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											100,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											100,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep thuyenbuom3"],
						false,
						null,
						1566,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1566,
							false
							,[
							[
								1,
								[
									2,
									"ghep thuyenbuom3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									101
								]
								]
							]
							],
							[
							[
								101,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								101,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								101,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3648,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									101,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											101,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1570,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											101,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								101,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									101,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										105
									]
									]
								]
								],
								[
								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										105
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									101,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3645,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									101,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1571,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1572,
									false
									,[
									[
										4,
										105
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											101,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											101,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep thuyenbuom4"],
						false,
						null,
						1567,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1567,
							false
							,[
							[
								1,
								[
									2,
									"ghep thuyenbuom4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									102
								]
								]
							]
							],
							[
							[
								102,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								102,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								102,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3647,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									102,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									102,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											102,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									102,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1573,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											102,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									102,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								102,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									102,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									102,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										106
									]
									]
								]
								],
								[
								[
									102,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										106
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									102,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3646,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									102,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1574,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									102,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1575,
									false
									,[
									[
										4,
										106
									]
									]
								]
,								[
									102,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									102,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											102,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											102,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1541,
						[
						[
							99,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1619,
							false
							,[
							[
								4,
								103
							]
							]
						]
,						[
							100,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1577,
							false
							,[
							[
								4,
								104
							]
							]
						]
,						[
							101,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1578,
							false
							,[
							[
								4,
								105
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1579,
							false
							,[
							[
								4,
								106
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							1545,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							1546,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							250,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1580,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							251,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1547,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1550,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							113,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							7605504262310156,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							117,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							2205385699248882,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							108,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6760087749647689,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1552,
							[
							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1553,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								104,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								1581,
								false
								,[
								[
									4,
									151
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								151,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3089,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1555,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								113,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2574,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								113,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3100,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								108,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3101,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								117,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3102,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								113,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3262,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3539,
								false
								,[
								[
									4,
									141
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								141,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3540,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3547,
							[
							[
								113,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3548,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3549,
								false
								,[
								[
									2,
									["thuyenbuom",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								113,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3550,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "ghep tam ngam"],
					false,
					null,
					1616,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						1616,
						false
						,[
						[
							1,
							[
								2,
								"ghep tam ngam"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep taungam1"],
						false,
						null,
						1567,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1567,
							false
							,[
							[
								1,
								[
									2,
									"ghep taungam1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									88
								]
								]
							]
							],
							[
							[
								88,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								88,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								88,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3651,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									88,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									88,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											88,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									88,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1647,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											88,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									88,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								88,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									88,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									88,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										83
									]
									]
								]
								],
								[
								[
									88,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										83
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									88,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3658,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									88,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1648,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									88,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1649,
									false
									,[
									[
										4,
										83
									]
									]
								]
,								[
									88,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									88,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											88,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											88,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep taungam2"],
						false,
						null,
						1650,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1650,
							false
							,[
							[
								1,
								[
									2,
									"ghep taungam2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									87
								]
								]
							]
							],
							[
							[
								87,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								87,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								87,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3652,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									87,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									87,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											87,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									87,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1653,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											87,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									87,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								87,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									87,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									87,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										84
									]
									]
								]
								],
								[
								[
									87,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										84
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									87,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3657,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									87,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1654,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									87,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1655,
									false
									,[
									[
										4,
										84
									]
									]
								]
,								[
									87,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									87,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											87,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											87,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep taungam3"],
						false,
						null,
						1652,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1652,
							false
							,[
							[
								1,
								[
									2,
									"ghep taungam3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									89
								]
								]
							]
							],
							[
							[
								89,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								89,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								89,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3653,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									89,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									89,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											89,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									89,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1659,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											89,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									89,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								89,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									89,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									89,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										85
									]
									]
								]
								],
								[
								[
									89,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										85
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									89,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3656,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									89,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1648,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									89,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1649,
									false
									,[
									[
										4,
										85
									]
									]
								]
,								[
									89,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									89,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											89,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											89,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep taungam4"],
						false,
						null,
						1661,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1661,
							false
							,[
							[
								1,
								[
									2,
									"ghep taungam4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									90
								]
								]
							]
							],
							[
							[
								90,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								90,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								90,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									1
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3654,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									90,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									90,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											20,
											90,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									90,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1656,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											90,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									90,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									216,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								90,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								219,
								false
								,[
								[
									10,
									1
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									90,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										1
									]
									]
								]
,								[
									90,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										86
									]
									]
								]
								],
								[
								[
									90,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										86
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									90,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3655,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									90,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									1657,
									false
									,[
									[
										10,
										1
									]
									]
								]
,								[
									90,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									1671,
									false
									,[
									[
										4,
										86
									]
									]
								]
,								[
									90,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									90,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											90,
											false,
											null
											,0
										]
									]
,									[
										0,
										[
											21,
											90,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1541,
						[
						[
							88,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1662,
							false
							,[
							[
								4,
								83
							]
							]
						]
,						[
							87,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1663,
							false
							,[
							[
								4,
								84
							]
							]
						]
,						[
							89,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1664,
							false
							,[
							[
								4,
								85
							]
							]
						]
,						[
							90,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							1665,
							false
							,[
							[
								4,
								86
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							1545,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							1546,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							246,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1580,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							247,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1547,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1550,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							115,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6448335443470822,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							110,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							5283262992248435,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1552,
							[
							[
								107,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1553,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								85,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								1673,
								false
								,[
								[
									4,
									147
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								147,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2039,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								107,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								1555,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								115,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2575,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								115,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3098,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								110,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3099,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								115,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3263,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3541,
								false
								,[
								[
									4,
									139
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								139,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3542,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3551,
							[
							[
								115,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3552,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3553,
								false
								,[
								[
									2,
									["taungam",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								115,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3554,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ghep xong => play hoat hinh"],
				false,
				null,
				7449544553246706,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7449544553246706,
					false
					,[
					[
						1,
						[
							2,
							"ghep xong => play hoat hinh"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2496,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2497,
						false
						,[
						[
							4,
							114
						]
						]
					]
,					[
						114,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2501,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						115,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2743,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						113,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2744,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2522,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						116,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2846,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						114,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine3",
						2572,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2702,
						false
						,[
						[
							2,
							["shipsound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2503,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2504,
						false
						,[
						[
							4,
							115
						]
						]
					]
,					[
						115,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2505,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						114,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2745,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						113,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2746,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						107,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2569,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						109,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2576,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[false, "On"],
				false,
				null,
				2752196977078102,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2752196977078102,
					false
					,[
					[
						1,
						[
							2,
							"On"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1382100682302675,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						918642100364993,
						false
					]
					],
					[
					[
						114,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine",
						4665645135482415,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						114,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine2",
						5880375583836808,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						115,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine",
						2303144294771988,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						115,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine2",
						2318464995694281,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						108,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						6754874947568712,
						false
						,[
						[
							0,
							[
								0,
								180
							]
						]
						]
					]
,					[
						113,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine",
						1794354410935218,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						113,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine2",
						8763810884297188,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						113,
						cr.behaviors.Sin.prototype.acts.SetActive,
						"Sine3",
						7903264937332416,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						111,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						1893926319276879,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						112,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						9446106469766576,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						66,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						6660195392119115,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						67,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						4703599263206106,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ev_dgbo",
		[
		[
			2,
			"library",
			false
		]
,		[
			0,
			[true, "Phần sử dụng chung"],
			false,
			null,
			3696391596959151,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3696391596959151,
				false
				,[
				[
					1,
					[
						2,
						"Phần sử dụng chung"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Sang trang"],
				false,
				null,
				1803891461080838,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1803891461080838,
					false
					,[
					[
						1,
						[
							2,
							"Sang trang"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5158564818351655,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						8942529517349465,
						false
						,[
						[
							4,
							126
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7430028349292069,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						760725878369374,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"play"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9002330533165792,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						9195914474655755,
						false
						,[
						[
							4,
							127
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6419638537026406,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						8303694521291394,
						false
						,[
						[
							1,
							[
								2,
								"gotopage"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"dg thuy"
									]
								]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Phần riêng cho từng trang"],
			false,
			null,
			6609068649256711,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6609068649256711,
				false
				,[
				[
					1,
					[
						2,
						"Phần riêng cho từng trang"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Scale_bg"],
				false,
				null,
				2603610614840248,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2603610614840248,
					false
					,[
					[
						1,
						[
							2,
							"Scale_bg"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					252635862591758,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						5168603854651611,
						false
					]
					],
					[
					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						1137842191255422,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						5194908586019304,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowwidth
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowheight
								]
								,[
									23,
									"scaleRatio"
								]
							]
						]
						]
					]
,					[
						161,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						1158148590918257,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										641
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										245
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						161,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						8376911824209762,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										1280
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										354
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3163906597867165,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						8261312771828799,
						false
					]
					],
					[
					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2000992389843467,
						false
						,[
						[
							0,
							[
								4,
								[
									6,
									[
										0,
										640
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutwidth
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									6,
									[
										0,
										360
									]
									,[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
									]
								]
								,[
									7,
									[
										5,
										[
											19,
											cr.system_object.prototype.exps.layoutheight
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												23,
												"scaleRatio"
											]
										]
									]
									,[
										0,
										2
									]
								]
							]
						]
						]
					]
,					[
						128,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						5313859377389531,
						false
						,[
						[
							0,
							[
								6,
								[
									7,
									[
										0,
										1909
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutwidth
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
,						[
							0,
							[
								6,
								[
									7,
									[
										0,
										747
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutheight
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowheight
									]
									,[
										23,
										"scaleRatio"
									]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Start_Run"],
				false,
				null,
				7481251728471644,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7481251728471644,
					false
					,[
					[
						1,
						[
							2,
							"Start_Run"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1229,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						1230,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						1370736611022418,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2640,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3361,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1685,
						false
						,[
						[
							1,
							[
								2,
								"pin_4banh"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						4,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1718,
						false
						,[
						[
							1,
							[
								2,
								"pin_2.3banh"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2728,
						false
						,[
						[
							2,
							["entry_bg",false]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								-10
							]
						]
,						[
							1,
							[
								2,
								"start_bg"
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3322,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3323,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3324,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3325,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3326,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3327,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3328,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3329,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3330,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3331,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3332,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3333,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						268,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						2784789990662437,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						3237,
						false
						,[
						[
							0,
							[
								1,
								1.5
							]
						]
						]
					]
,					[
						268,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						7129916118445725,
						false
						,[
						[
							1,
							[
								2,
								"a"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2191,
						false
						,[
						[
							11,
							"on"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2408,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							2409,
							false
							,[
							[
								4,
								257
							]
							]
						]
						],
						[
						[
							257,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							2410,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2411,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							2412,
							false
							,[
							[
								4,
								259
							]
							]
						]
						],
						[
						[
							259,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							2413,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2414,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							2415,
							false
							,[
							[
								4,
								263
							]
							]
						]
						],
						[
						[
							263,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							2416,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2417,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							2418,
							false
							,[
							[
								4,
								255
							]
							]
						]
						],
						[
						[
							255,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							2419,
							false
							,[
							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										0
									]
									]
								]
							]
,							[
								0,
								[
									20,
									125,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										19,
										cr.system_object.prototype.exps.loopindex
									]
,[
										0,
										1
									]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2729,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutEnd,
						null,
						1,
						false,
						false,
						false,
						2730,
						false
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.StopAll,
						null,
						2731,
						false
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3473,
						false
						,[
						[
							11,
							"on"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						235,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						2184711716176101,
						false
					]
,					[
						158,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						8586065222675489,
						false
					]
,					[
						236,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						3928538751733387,
						false
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						7149452774799509,
						false
						,[
						[
							1,
							[
								2,
								"On"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3741,
					[
					[
						265,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						3742,
						false
						,[
						[
							8,
							3
						]
,						[
							0,
							[
								0,
								-700
							]
						]
						]
					]
					],
					[
					[
						265,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						3743,
						false
						,[
						[
							0,
							[
								0,
								1600
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3744,
					[
					[
						264,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						3745,
						false
						,[
						[
							8,
							4
						]
,						[
							0,
							[
								0,
								1600
							]
						]
						]
					]
					],
					[
					[
						264,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						3746,
						false
						,[
						[
							0,
							[
								0,
								-700
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Pin object"],
					false,
					null,
					2629,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2629,
						false
						,[
						[
							1,
							[
								2,
								"Pin object"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3185,
						[
						[
							4,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							3186,
							false
							,[
							[
								1,
								[
									2,
									"pin_4banh"
								]
							]
							]
						]
						],
						[
						[
							214,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							3187,
							false
							,[
							[
								4,
								233
							]
,							[
								3,
								1
							]
							]
						]
,						[
							207,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							3188,
							false
							,[
							[
								4,
								234
							]
,							[
								3,
								1
							]
							]
						]
,						[
							223,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							3189,
							false
							,[
							[
								4,
								229
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1695,
						[
						[
							4,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							1696,
							false
							,[
							[
								1,
								[
									2,
									"pin_2.3banh"
								]
							]
							]
						]
						],
						[
						[
							202,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1699,
							false
							,[
							[
								4,
								231
							]
,							[
								3,
								1
							]
							]
						]
,						[
							194,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1700,
							false
							,[
							[
								4,
								230
							]
,							[
								3,
								1
							]
							]
						]
,						[
							187,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1702,
							false
							,[
							[
								4,
								232
							]
,							[
								3,
								1
							]
							]
						]
,						[
							266,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin2",
							1724,
							false
							,[
							[
								4,
								230
							]
,							[
								3,
								1
							]
							]
						]
,						[
							267,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin2",
							1725,
							false
							,[
							[
								4,
								232
							]
,							[
								3,
								1
							]
							]
						]
,						[
							190,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2857,
							false
							,[
							[
								4,
								191
							]
,							[
								3,
								1
							]
							]
						]
,						[
							193,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							8506803225280003,
							false
							,[
							[
								4,
								192
							]
,							[
								3,
								1
							]
							]
						]
,						[
							183,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2859,
							false
							,[
							[
								4,
								184
							]
,							[
								3,
								1
							]
							]
						]
,						[
							186,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin2",
							1184178104899055,
							false
							,[
							[
								4,
								185
							]
,							[
								3,
								1
							]
							]
						]
,						[
							158,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2861,
							false
							,[
							[
								4,
								231
							]
,							[
								3,
								1
							]
							]
						]
,						[
							235,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2862,
							false
							,[
							[
								4,
								229
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "hướng đi +keo-cuon frame"],
					false,
					null,
					1470,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						1470,
						false
						,[
						[
							1,
							[
								2,
								"hướng đi +keo-cuon frame"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "keo + cuon frame"],
						false,
						null,
						1471,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1471,
							false
							,[
							[
								1,
								[
									2,
									"keo + cuon frame"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							835,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchStart,
								null,
								1,
								false,
								false,
								false,
								836,
								false
							]
							],
							[
							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								837,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							838,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								839,
								false
							]
							],
							[
							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								840,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							841,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								842,
								false
								,[
								[
									10,
									0
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								69,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								843,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								128,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								2209,
								false
								,[
								[
									3,
									1
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								844,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									845,
									false
									,[
									[
										7,
										[
											20,
											69,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
,									[
										8,
										3
									]
,									[
										7,
										[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												0,
												2
											]
										]
									]
									]
								]
								],
								[
								[
									69,
									cr.plugins_.Sprite.prototype.acts.MoveForward,
									null,
									1473,
									false
									,[
									[
										0,
										[
											6,
											[
												0,
												800
											]
											,[
												19,
												cr.system_object.prototype.exps.dt
											]
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							847,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								848,
								false
								,[
								[
									10,
									0
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								849,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									850,
									false
									,[
									[
										7,
										[
											20,
											69,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
,									[
										8,
										5
									]
,									[
										7,
										[
											0,
											-435
										]
									]
									]
								]
								],
								[
								[
									69,
									cr.plugins_.Sprite.prototype.acts.MoveForward,
									null,
									1472,
									false
									,[
									[
										0,
										[
											6,
											[
												0,
												-800
											]
											,[
												19,
												cr.system_object.prototype.exps.dt
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								852,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									853,
									false
									,[
									[
										7,
										[
											20,
											69,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
,									[
										8,
										2
									]
,									[
										7,
										[
											0,
											-435
										]
									]
									]
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									854,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									69,
									cr.plugins_.Sprite.prototype.acts.SetVisible,
									null,
									855,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									128,
									cr.plugins_.Sprite.prototype.acts.SetVisible,
									null,
									2210,
									false
									,[
									[
										3,
										0
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "huong di "],
						false,
						null,
						996,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							996,
							false
							,[
							[
								1,
								[
									2,
									"huong di "
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							676,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								681,
								false
								,[
								[
									10,
									3
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								741,
								[
								[
									73,
									cr.plugins_.Sprite.prototype.cnds.CompareX,
									null,
									0,
									false,
									false,
									false,
									742,
									false
									,[
									[
										8,
										3
									]
,									[
										0,
										[
											0,
											1500
										]
									]
									]
								]
,								[
									228,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									743,
									false
									,[
									[
										10,
										2
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									132,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									2201,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									153,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									2202,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									154,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									3024,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									73,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									745,
									false
									,[
									[
										0,
										[
											4,
											[
												20,
												73,
												cr.plugins_.Sprite.prototype.exps.X,
												false,
												null
											]
											,[
												0,
												10
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								682,
								[
								[
									73,
									cr.plugins_.Sprite.prototype.cnds.CompareX,
									null,
									0,
									false,
									false,
									false,
									683,
									false
									,[
									[
										8,
										4
									]
,									[
										0,
										[
											0,
											1500
										]
									]
									]
								]
,								[
									228,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2198,
									false
									,[
									[
										10,
										2
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									686,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
,								[
									132,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									2203,
									false
								]
,								[
									153,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									2204,
									false
								]
,								[
									154,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									3080,
									false
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									3184,
									false
									,[
									[
										11,
										"ondisplay"
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									4,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									3613,
									false
									,[
									[
										1,
										[
											2,
											"des1"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3474,
								[
								[
									132,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3475,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3476,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3477,
								[
								[
									153,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3478,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3479,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3480,
								[
								[
									154,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3481,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3482,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							749,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								750,
								false
								,[
								[
									10,
									3
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								751,
								[
								[
									73,
									cr.plugins_.Sprite.prototype.cnds.CompareX,
									null,
									0,
									false,
									false,
									false,
									752,
									false
									,[
									[
										8,
										5
									]
,									[
										0,
										[
											0,
											-300
										]
									]
									]
								]
,								[
									228,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									753,
									false
									,[
									[
										10,
										2
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									155,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									2369,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									152,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									2332,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									133,
									cr.behaviors.Pin.prototype.acts.Pin,
									"Pin",
									3082,
									false
									,[
									[
										4,
										73
									]
,									[
										3,
										0
									]
									]
								]
,								[
									73,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									755,
									false
									,[
									[
										0,
										[
											5,
											[
												20,
												73,
												cr.plugins_.Sprite.prototype.exps.X,
												false,
												null
											]
											,[
												0,
												10
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								756,
								[
								[
									73,
									cr.plugins_.Sprite.prototype.cnds.CompareX,
									null,
									0,
									false,
									false,
									false,
									757,
									false
									,[
									[
										8,
										2
									]
,									[
										0,
										[
											0,
											-300
										]
									]
									]
								]
,								[
									228,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2199,
									false
									,[
									[
										10,
										2
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									760,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
,								[
									152,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									2333,
									false
								]
,								[
									155,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									2370,
									false
								]
,								[
									133,
									cr.plugins_.Sprite.prototype.acts.Destroy,
									null,
									3083,
									false
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									3183,
									false
									,[
									[
										11,
										"ondisplay"
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									4,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									3612,
									false
									,[
									[
										1,
										[
											2,
											"des1"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3483,
								[
								[
									155,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3484,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3485,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3486,
								[
								[
									152,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3487,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3488,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								3489,
								[
								[
									133,
									cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
									null,
									1,
									false,
									false,
									false,
									3490,
									false
								]
								],
								[
								[
									228,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3491,
									false
									,[
									[
										10,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							689,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								691,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							],
							[
							[
								73,
								cr.plugins_.Sprite.prototype.acts.SetPos,
								null,
								693,
								false
								,[
								[
									0,
									[
										0,
										640
									]
								]
,								[
									0,
									[
										0,
										360
									]
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								694,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3604,
							[
							[
								4,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								3605,
								false
								,[
								[
									1,
									[
										2,
										"des1"
									]
								]
								]
							]
							],
							[
							[
								143,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3606,
								false
							]
,							[
								145,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3607,
								false
							]
,							[
								157,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3608,
								false
							]
,							[
								142,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3609,
								false
							]
,							[
								156,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3610,
								false
							]
,							[
								138,
								cr.plugins_.Sprite.prototype.acts.Destroy,
								null,
								3611,
								false
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Start_Play"],
				false,
				null,
				3138656766930687,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3138656766930687,
					false
					,[
					[
						1,
						[
							2,
							"Start_Play"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					190,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						191,
						false
						,[
						[
							4,
							229
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						192,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						585,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3281,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3492,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						254,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						601,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						255,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						602,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1519,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						587,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2186,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1475,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					453,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						454,
						false
						,[
						[
							4,
							231
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						455,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						586,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3282,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3493,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						258,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						604,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						259,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1620,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2187,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						588,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2188,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2189,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1489,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1490,
						false
						,[
						[
							4,
							230
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1491,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1492,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3283,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3494,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						256,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1496,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						257,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						1582,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2182,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1493,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2190,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2183,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2371,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2372,
						false
						,[
						[
							4,
							232
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2373,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2374,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3284,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3495,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						262,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2375,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						263,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2376,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2377,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2378,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2379,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2380,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2918,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2919,
						false
						,[
						[
							4,
							233
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2920,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2921,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3285,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3496,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						260,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2922,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						261,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2923,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2924,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2925,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2926,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2927,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2944,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2945,
						false
						,[
						[
							4,
							234
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2946,
						false
						,[
						[
							11,
							"on"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2947,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3286,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3497,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						252,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2948,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						253,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						2949,
						false
						,[
						[
							4,
							69
						]
,						[
							3,
							1
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2950,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2951,
						false
						,[
						[
							11,
							"ondisplay"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2952,
						false
						,[
						[
							10,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2953,
						false
						,[
						[
							10,
							3
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Ghep_hinh"],
				false,
				null,
				3800944968156505,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3800944968156505,
					false
					,[
					[
						1,
						[
							2,
							"Ghep_hinh"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "Ghep oto"],
					false,
					null,
					2083,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2083,
						false
						,[
						[
							1,
							[
								2,
								"Ghep oto"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep oto1"],
						false,
						null,
						2061,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2061,
							false
							,[
							[
								1,
								[
									2,
									"ghep oto1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									224
								]
								]
							]
							],
							[
							[
								224,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								224,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								224,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3687,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									224,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									224,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											224,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									224,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2105,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											224,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									224,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								224,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									224,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									224,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										162
									]
									]
								]
								],
								[
								[
									224,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										162
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									224,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3696,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									224,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2108,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									224,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2109,
									false
									,[
									[
										4,
										162
									]
									]
								]
,								[
									224,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									224,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											224,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											224,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep oto2"],
						false,
						null,
						2110,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2110,
							false
							,[
							[
								1,
								[
									2,
									"ghep oto2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									225
								]
								]
							]
							],
							[
							[
								225,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								225,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								225,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3689,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									225,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									225,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											225,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									225,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2113,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											225,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									225,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								225,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2114,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									225,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									225,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										168
									]
									]
								]
								],
								[
								[
									225,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										168
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									225,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3695,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									225,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2115,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									225,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2116,
									false
									,[
									[
										4,
										168
									]
									]
								]
,								[
									225,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									225,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											225,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											225,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep oto3"],
						false,
						null,
						2111,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2111,
							false
							,[
							[
								1,
								[
									2,
									"ghep oto3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									226
								]
								]
							]
							],
							[
							[
								226,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								226,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								226,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3690,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									226,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									226,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											226,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									226,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2105,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											226,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									226,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								226,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									226,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									226,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										221
									]
									]
								]
								],
								[
								[
									226,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										221
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									226,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3693,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									226,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2121,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									226,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2122,
									false
									,[
									[
										4,
										221
									]
									]
								]
,								[
									226,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									226,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											226,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											226,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep oto4"],
						false,
						null,
						2112,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2112,
							false
							,[
							[
								1,
								[
									2,
									"ghep oto4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									227
								]
								]
							]
							],
							[
							[
								227,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								227,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								227,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3691,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									227,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									227,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											227,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									227,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2124,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											227,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									227,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								227,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									227,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									227,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										222
									]
									]
								]
								],
								[
								[
									227,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										222
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									227,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3692,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									227,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2125,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									227,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2126,
									false
									,[
									[
										4,
										222
									]
									]
								]
,								[
									227,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									227,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											227,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											227,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2062,
						[
						[
							224,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2117,
							false
							,[
							[
								4,
								162
							]
							]
						]
,						[
							225,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2118,
							false
							,[
							[
								4,
								168
							]
							]
						]
,						[
							226,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2123,
							false
							,[
							[
								4,
								221
							]
							]
						]
,						[
							227,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2127,
							false
							,[
							[
								4,
								222
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							2066,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2067,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							254,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2068,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							255,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2069,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2070,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							229,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							4167746063989704,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							223,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							8633851876212966,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2076,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								2077,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								162,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2192,
								false
								,[
								[
									4,
									132
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								132,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2079,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2074,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								229,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2609,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								229,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3172,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								223,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3174,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								229,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3287,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3584,
								false
								,[
								[
									4,
									138
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								138,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3585,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3579,
							[
							[
								229,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3580,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3581,
								false
								,[
								[
									2,
									["oto",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								229,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3582,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Ghep xe may"],
					false,
					null,
					2128,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2128,
						false
						,[
						[
							1,
							[
								2,
								"Ghep xe may"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep xm1"],
						false,
						null,
						2112,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2112,
							false
							,[
							[
								1,
								[
									2,
									"ghep xm1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									203
								]
								]
							]
							],
							[
							[
								203,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								203,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								203,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3704,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									203,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									203,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											203,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									203,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2150,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											203,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									203,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								203,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									203,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									203,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										165
									]
									]
								]
								],
								[
								[
									203,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										165
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									203,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3697,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									203,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2151,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									203,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2152,
									false
									,[
									[
										4,
										165
									]
									]
								]
,								[
									203,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									203,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											203,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											203,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xm2"],
						false,
						null,
						2163,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2163,
							false
							,[
							[
								1,
								[
									2,
									"ghep xm2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									204
								]
								]
							]
							],
							[
							[
								204,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								204,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								204,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3703,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									204,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									204,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											204,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									204,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2166,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											204,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									204,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								204,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2167,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									204,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									204,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										199
									]
									]
								]
								],
								[
								[
									204,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										199
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									204,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3698,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									204,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2151,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									204,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2168,
									false
									,[
									[
										4,
										199
									]
									]
								]
,								[
									204,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									204,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											204,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											204,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xm3"],
						false,
						null,
						2164,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2164,
							false
							,[
							[
								1,
								[
									2,
									"ghep xm3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									205
								]
								]
							]
							],
							[
							[
								205,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								205,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								205,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3702,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									205,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									205,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											205,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									205,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2171,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											205,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									205,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								205,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									205,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									205,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										200
									]
									]
								]
								],
								[
								[
									205,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										200
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									205,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3699,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									205,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2172,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									205,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2173,
									false
									,[
									[
										4,
										200
									]
									]
								]
,								[
									205,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									205,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											205,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											205,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xm4"],
						false,
						null,
						2165,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2165,
							false
							,[
							[
								1,
								[
									2,
									"ghep xm4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									206
								]
								]
							]
							],
							[
							[
								206,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								206,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								206,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3701,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									206,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									206,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											206,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									206,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2175,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											206,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									206,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								206,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									206,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									206,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										201
									]
									]
								]
								],
								[
								[
									206,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										201
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									206,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3700,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									206,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2178,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									206,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2180,
									false
									,[
									[
										4,
										201
									]
									]
								]
,								[
									206,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									206,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											206,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											206,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2062,
						[
						[
							203,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2169,
							false
							,[
							[
								4,
								165
							]
							]
						]
,						[
							204,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2170,
							false
							,[
							[
								4,
								199
							]
							]
						]
,						[
							205,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2174,
							false
							,[
							[
								4,
								200
							]
							]
						]
,						[
							206,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2181,
							false
							,[
							[
								4,
								201
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							2066,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2067,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							258,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2068,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							259,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2069,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2070,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							231,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							1818707759057809,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							202,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							8099645120300468,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2076,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								2077,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								201,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2200,
								false
								,[
								[
									4,
									153
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								153,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2079,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2184,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								231,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2615,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								231,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3170,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								202,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3171,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								231,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3289,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3586,
								false
								,[
								[
									4,
									145
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								145,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3587,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3588,
							[
							[
								231,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3589,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3590,
								false
								,[
								[
									2,
									["xm",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								231,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3591,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Ghep xe tai"],
					false,
					null,
					2230,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2230,
						false
						,[
						[
							1,
							[
								2,
								"Ghep xe tai"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep xt1"],
						false,
						null,
						2954,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2954,
							false
							,[
							[
								1,
								[
									2,
									"ghep xt1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									215
								]
								]
							]
							],
							[
							[
								215,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								215,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								215,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3705,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									215,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									215,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											215,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									215,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3005,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											215,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									215,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								215,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									215,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									215,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										166
									]
									]
								]
								],
								[
								[
									215,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										166
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									215,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3712,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									215,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3006,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									215,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3007,
									false
									,[
									[
										4,
										166
									]
									]
								]
,								[
									215,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									215,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											215,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											215,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xt2"],
						false,
						null,
						3008,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3008,
							false
							,[
							[
								1,
								[
									2,
									"ghep xt2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									216
								]
								]
							]
							],
							[
							[
								216,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								216,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								216,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3706,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									216,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									216,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											216,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									216,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3005,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											216,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									216,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								216,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									216,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									216,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										219
									]
									]
								]
								],
								[
								[
									216,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										219
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									216,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3711,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									216,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3011,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									216,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3012,
									false
									,[
									[
										4,
										219
									]
									]
								]
,								[
									216,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									216,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											216,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											216,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xt3"],
						false,
						null,
						3009,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3009,
							false
							,[
							[
								1,
								[
									2,
									"ghep xt3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									217
								]
								]
							]
							],
							[
							[
								217,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								217,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								217,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3707,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									217,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									217,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											217,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									217,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3013,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											217,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									217,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								217,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									217,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									217,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										159
									]
									]
								]
								],
								[
								[
									217,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										159
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									217,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3710,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									217,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3014,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									217,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3015,
									false
									,[
									[
										4,
										159
									]
									]
								]
,								[
									217,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									217,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											217,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											217,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xt4"],
						false,
						null,
						3050,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3050,
							false
							,[
							[
								1,
								[
									2,
									"ghep xt4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									218
								]
								]
							]
							],
							[
							[
								218,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								218,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								218,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3708,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									218,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									218,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											218,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									218,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3069,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											218,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									218,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								218,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									218,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									218,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										220
									]
									]
								]
								],
								[
								[
									218,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										220
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									218,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3709,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									218,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3070,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									218,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3071,
									false
									,[
									[
										4,
										220
									]
									]
								]
,								[
									218,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									218,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											218,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											218,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3051,
						[
						[
							215,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3075,
							false
							,[
							[
								4,
								166
							]
							]
						]
,						[
							216,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3076,
							false
							,[
							[
								4,
								219
							]
							]
						]
,						[
							217,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3073,
							false
							,[
							[
								4,
								159
							]
							]
						]
,						[
							218,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3074,
							false
							,[
							[
								4,
								220
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							3056,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							3057,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							260,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3058,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							261,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3059,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3060,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							233,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6951367235574487,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							214,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							1430483441658447,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							3062,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3063,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								219,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3064,
								false
								,[
								[
									4,
									154
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								154,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3065,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3066,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								233,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3068,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								233,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3165,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								214,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3166,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								233,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3290,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3592,
								false
								,[
								[
									4,
									156
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								156,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3593,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3594,
							[
							[
								233,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3595,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3596,
								false
								,[
								[
									2,
									["xetai",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								233,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3597,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Ghep xe bus"],
					false,
					null,
					2231,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2231,
						false
						,[
						[
							1,
							[
								2,
								"Ghep xe bus"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep bus1"],
						false,
						null,
						3010,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3010,
							false
							,[
							[
								1,
								[
									2,
									"ghep bus1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									210
								]
								]
							]
							],
							[
							[
								210,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								210,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								210,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3720,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									210,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									210,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											210,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									210,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3031,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											210,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									210,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								210,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									210,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									210,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										160
									]
									]
								]
								],
								[
								[
									210,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										160
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									210,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3713,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									210,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3032,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									210,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3033,
									false
									,[
									[
										4,
										160
									]
									]
								]
,								[
									210,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									210,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											210,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											210,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep bus2"],
						false,
						null,
						3034,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3034,
							false
							,[
							[
								1,
								[
									2,
									"ghep bus2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									211
								]
								]
							]
							],
							[
							[
								211,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								211,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								211,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3719,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									211,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									211,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3038,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											211,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									211,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3039,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											211,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									211,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								211,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									211,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									211,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										167
									]
									]
								]
								],
								[
								[
									211,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										167
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									211,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3714,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									211,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3032,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									211,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3040,
									false
									,[
									[
										4,
										167
									]
									]
								]
,								[
									211,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									211,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											211,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											211,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep bus3"],
						false,
						null,
						3035,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3035,
							false
							,[
							[
								1,
								[
									2,
									"ghep bus3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									212
								]
								]
							]
							],
							[
							[
								212,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								212,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								212,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3718,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									212,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									212,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											212,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									212,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3031,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											212,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									212,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								212,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									212,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									212,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										208
									]
									]
								]
								],
								[
								[
									212,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										208
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									212,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3715,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									212,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3041,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									212,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3042,
									false
									,[
									[
										4,
										208
									]
									]
								]
,								[
									212,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									212,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											212,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											212,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep bus4"],
						false,
						null,
						3036,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3036,
							false
							,[
							[
								1,
								[
									2,
									"ghep bus4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									213
								]
								]
							]
							],
							[
							[
								213,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								213,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								213,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3717,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									213,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									213,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											213,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									213,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									3043,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											213,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									213,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3716,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								213,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									213,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									213,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										209
									]
									]
								]
								],
								[
								[
									213,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										209
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									213,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									213,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									3044,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									213,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									3045,
									false
									,[
									[
										4,
										209
									]
									]
								]
,								[
									213,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									213,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											213,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											213,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2955,
						[
						[
							210,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3048,
							false
							,[
							[
								4,
								160
							]
							]
						]
,						[
							211,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3049,
							false
							,[
							[
								4,
								167
							]
							]
						]
,						[
							212,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3046,
							false
							,[
							[
								4,
								208
							]
							]
						]
,						[
							213,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							3047,
							false
							,[
							[
								4,
								209
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							2960,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2961,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							252,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2962,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							253,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2963,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2964,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							234,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							9052577059915793,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							207,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							5556034504095526,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2966,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								2967,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								160,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3077,
								false
								,[
								[
									4,
									133
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								133,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3084,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2970,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								234,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2972,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								234,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3163,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								207,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3164,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								234,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3291,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3598,
								false
								,[
								[
									4,
									142
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								142,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3599,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3600,
							[
							[
								234,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3601,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3602,
								false
								,[
								[
									2,
									["xebus",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								234,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3603,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Ghep xe dap"],
					false,
					null,
					2232,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2232,
						false
						,[
						[
							1,
							[
								2,
								"Ghep xe dap"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep xd1"],
						false,
						null,
						2165,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2165,
							false
							,[
							[
								1,
								[
									2,
									"ghep xd1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									195
								]
								]
							]
							],
							[
							[
								195,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								195,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								195,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3721,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									195,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									195,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											195,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									195,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2267,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											195,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									195,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								195,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2107,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									195,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									195,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										163
									]
									]
								]
								],
								[
								[
									195,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										163
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									195,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3728,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									195,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2178,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									195,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2268,
									false
									,[
									[
										4,
										163
									]
									]
								]
,								[
									195,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									195,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											195,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											195,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xd2"],
						false,
						null,
						2269,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2269,
							false
							,[
							[
								1,
								[
									2,
									"ghep xd2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									196
								]
								]
							]
							],
							[
							[
								196,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								196,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								196,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3722,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									196,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									196,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											196,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									196,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2267,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											196,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									196,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2106,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								196,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2272,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									196,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									196,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										169
									]
									]
								]
								],
								[
								[
									196,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										169
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									196,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3727,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									196,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2273,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									196,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2274,
									false
									,[
									[
										4,
										169
									]
									]
								]
,								[
									196,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									196,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											196,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											196,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xd3"],
						false,
						null,
						2270,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2270,
							false
							,[
							[
								1,
								[
									2,
									"ghep xd3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							2299,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								2300,
								false
								,[
								[
									4,
									197
								]
								]
							]
							],
							[
							[
								197,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								2301,
								false
							]
,							[
								197,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								2302,
								false
							]
,							[
								197,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2303,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3723,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								2304,
								[
								[
									197,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2305,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									197,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2306,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											197,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									197,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2307,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											197,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									197,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2308,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2309,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								2310,
								false
							]
							],
							[
							[
								197,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2311,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								2312,
								[
								[
									197,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2313,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									197,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									2314,
									false
									,[
									[
										4,
										188
									]
									]
								]
								],
								[
								[
									197,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									2315,
									false
									,[
									[
										4,
										188
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									197,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									2316,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3726,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2317,
								[
								[
									197,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2322,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									197,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2323,
									false
									,[
									[
										4,
										188
									]
									]
								]
,								[
									197,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2320,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									197,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									2321,
									false
									,[
									[
										0,
										[
											21,
											197,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											197,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep xd4"],
						false,
						null,
						2271,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2271,
							false
							,[
							[
								1,
								[
									2,
									"ghep xd4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							2276,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								2277,
								false
								,[
								[
									4,
									198
								]
								]
							]
							],
							[
							[
								198,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								2278,
								false
							]
,							[
								198,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								2279,
								false
							]
,							[
								198,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2280,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3724,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								2281,
								[
								[
									198,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2282,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									198,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2283,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											198,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									198,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2284,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											198,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									198,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2285,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2286,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								2287,
								false
							]
							],
							[
							[
								198,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2324,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								2289,
								[
								[
									198,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2290,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									198,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									2291,
									false
									,[
									[
										4,
										189
									]
									]
								]
								],
								[
								[
									198,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									2292,
									false
									,[
									[
										4,
										189
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									198,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									2293,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3725,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2294,
								[
								[
									198,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2325,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									198,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2326,
									false
									,[
									[
										4,
										189
									]
									]
								]
,								[
									198,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2297,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									198,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									2298,
									false
									,[
									[
										0,
										[
											21,
											198,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											198,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2062,
						[
						[
							195,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2327,
							false
							,[
							[
								4,
								163
							]
							]
						]
,						[
							196,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2328,
							false
							,[
							[
								4,
								169
							]
							]
						]
,						[
							197,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2329,
							false
							,[
							[
								4,
								188
							]
							]
						]
,						[
							198,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2330,
							false
							,[
							[
								4,
								189
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							2066,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2067,
							false
							,[
							[
								0,
								[
									1,
									1.5
								]
							]
							]
						]
,						[
							256,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2068,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							257,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2069,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2070,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							230,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							6721314694963982,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							194,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							2065499925825625,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							190,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							4110503139175235,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							191,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							1353032629704201,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							192,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							9972325600563612,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							193,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							7204027908518957,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2076,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								2077,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								189,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2331,
								false
								,[
								[
									4,
									152
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								152,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2079,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2184,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								194,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3764,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								230,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3299,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								230,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3300,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3747,
								false
								,[
								[
									4,
									143
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								143,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3748,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3749,
							[
							[
								230,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3750,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3751,
								false
								,[
								[
									2,
									["xedap",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								230,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3752,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Ghep xich lo"],
					false,
					null,
					2233,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2233,
						false
						,[
						[
							1,
							[
								2,
								"Ghep xich lo"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "ghep x1"],
						false,
						null,
						2212,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2212,
							false
							,[
							[
								1,
								[
									2,
									"ghep x1"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									177
								]
								]
							]
							],
							[
							[
								177,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								177,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								177,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3737,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									177,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									177,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											177,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									177,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2339,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											177,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									177,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2340,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								177,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2341,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									177,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									177,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										164
									]
									]
								]
								],
								[
								[
									177,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										164
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									177,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3730,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									177,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2342,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									177,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2343,
									false
									,[
									[
										4,
										164
									]
									]
								]
,								[
									177,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									177,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											177,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											177,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep x2"],
						false,
						null,
						2344,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2344,
							false
							,[
							[
								1,
								[
									2,
									"ghep x2"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									178
								]
								]
							]
							],
							[
							[
								178,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								178,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								178,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3736,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									178,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									178,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											178,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									178,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2348,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											178,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									178,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2340,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								178,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2349,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									178,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									178,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										170
									]
									]
								]
								],
								[
								[
									178,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										170
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									178,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3731,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									178,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2350,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									178,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2351,
									false
									,[
									[
										4,
										170
									]
									]
								]
,								[
									178,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									178,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											178,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											178,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep x3"],
						false,
						null,
						2345,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2345,
							false
							,[
							[
								1,
								[
									2,
									"ghep x3"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									181
								]
								]
							]
							],
							[
							[
								181,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								181,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								181,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3735,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									182,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									181,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											181,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									181,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2360,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											181,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									181,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2340,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								181,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2361,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									181,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									181,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										179
									]
									]
								]
								],
								[
								[
									181,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										179
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									181,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3732,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									181,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2362,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									181,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2363,
									false
									,[
									[
										4,
										179
									]
									]
								]
,								[
									181,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									181,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											181,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											181,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "ghep x4"],
						false,
						null,
						2346,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							2346,
							false
							,[
							[
								1,
								[
									2,
									"ghep x4"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							194,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchObject,
								null,
								1,
								false,
								false,
								false,
								195,
								false
								,[
								[
									4,
									182
								]
								]
							]
							],
							[
							[
								182,
								cr.plugins_.Sprite.prototype.acts.MoveToTop,
								null,
								208,
								false
							]
,							[
								182,
								cr.behaviors.Pin.prototype.acts.Unpin,
								"Pin",
								211,
								false
							]
,							[
								182,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								212,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									1
								]
								]
							]
,							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3734,
								false
								,[
								[
									2,
									["box_jump1",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								209,
								[
								[
									182,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									210,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									182,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									214,
									false
									,[
									[
										10,
										1
									]
,									[
										7,
										[
											20,
											182,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									182,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2356,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											182,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									182,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									2340,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							217,
							[
							[
								3,
								cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
								null,
								1,
								false,
								false,
								false,
								218,
								false
							]
							],
							[
							[
								182,
								cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
								null,
								2357,
								false
								,[
								[
									10,
									0
								]
,								[
									3,
									0
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								220,
								[
								[
									182,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									223,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									182,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									false,
									false,
									221,
									false
									,[
									[
										4,
										180
									]
									]
								]
								],
								[
								[
									182,
									cr.plugins_.Sprite.prototype.acts.SetPosToObject,
									null,
									224,
									false
									,[
									[
										4,
										180
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									182,
									cr.behaviors.DragnDrop.prototype.acts.SetEnabled,
									"DragDrop",
									225,
									false
									,[
									[
										3,
										0
									]
									]
								]
,								[
									0,
									cr.plugins_.Audio.prototype.acts.Play,
									null,
									3733,
									false
									,[
									[
										2,
										["sound_right",false]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											""
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								226,
								[
								[
									182,
									cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
									null,
									0,
									false,
									true,
									false,
									2358,
									false
									,[
									[
										10,
										0
									]
									]
								]
,								[
									182,
									cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
									null,
									0,
									false,
									true,
									false,
									2359,
									false
									,[
									[
										4,
										180
									]
									]
								]
,								[
									182,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									231,
									false
									,[
									[
										10,
										3
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									182,
									cr.plugins_.Sprite.prototype.acts.SetPos,
									null,
									232,
									false
									,[
									[
										0,
										[
											21,
											182,
											false,
											null
											,1
										]
									]
,									[
										0,
										[
											21,
											182,
											false,
											null
											,2
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2213,
						[
						[
							177,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2366,
							false
							,[
							[
								4,
								164
							]
							]
						]
,						[
							178,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2367,
							false
							,[
							[
								4,
								170
							]
							]
						]
,						[
							181,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2364,
							false
							,[
							[
								4,
								179
							]
							]
						]
,						[
							182,
							cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
							null,
							0,
							false,
							false,
							false,
							2365,
							false
							,[
							[
								4,
								180
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							2218,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2219,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							262,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2220,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							263,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2221,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							228,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2222,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							232,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							9575504107027779,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							187,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							2373498181380824,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							183,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							5753143255255179,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							184,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							5967589462481921,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							185,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							3588362987285585,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							186,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							8502731852794912,
							false
							,[
							[
								1,
								[
									2,
									"Default"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2224,
							[
							[
								228,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								2225,
								false
								,[
								[
									10,
									4
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								170,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								2368,
								false
								,[
								[
									4,
									155
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								155,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								2227,
								false
								,[
								[
									4,
									73
								]
,								[
									3,
									0
								]
								]
							]
,							[
								228,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2228,
								false
								,[
								[
									10,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								232,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								2665,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								187,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3761,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								232,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3292,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								69,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								3753,
								false
								,[
								[
									4,
									157
								]
,								[
									5,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								157,
								cr.behaviors.Pin.prototype.acts.Pin,
								"Pin",
								3754,
								false
								,[
								[
									4,
									69
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3755,
							[
							[
								232,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3756,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Audio.prototype.acts.Play,
								null,
								3757,
								false
								,[
								[
									2,
									["xichlo",false]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										""
									]
								]
								]
							]
,							[
								232,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								3758,
								false
								,[
								[
									10,
									1
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ghep xong => play hoat hinh"],
				false,
				null,
				8770833013894649,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8770833013894649,
					false
					,[
					[
						1,
						[
							2,
							"ghep xong => play hoat hinh"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2671,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2672,
						false
						,[
						[
							4,
							234
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3085,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3132,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3133,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3134,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3135,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3136,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2720,
						false
						,[
						[
							2,
							["bussound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3365,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2721,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2722,
						false
						,[
						[
							4,
							232
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3131,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3137,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3138,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3139,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3140,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3141,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2723,
						false
						,[
						[
							2,
							["bikerunningsound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								500
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3364,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						3498,
						false
						,[
						[
							2,
							["bikesound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2713,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2714,
						false
						,[
						[
							4,
							230
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3086,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3142,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3143,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3144,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3145,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3146,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3363,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2715,
						false
						,[
						[
							2,
							["bikerunningsound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								500
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2719,
						false
						,[
						[
							2,
							["bikesound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2716,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2717,
						false
						,[
						[
							4,
							233
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3087,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3147,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3148,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3149,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3150,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3151,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3362,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2718,
						false
						,[
						[
							2,
							["trucksound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
,					[
						236,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3499,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2707,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2708,
						false
						,[
						[
							4,
							229
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2709,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3152,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3153,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3154,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3155,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3156,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2710,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						235,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2711,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2712,
						false
						,[
						[
							2,
							["carsound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2675,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2676,
						false
						,[
						[
							4,
							231
						]
						]
					]
,					[
						231,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2677,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						229,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3157,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						233,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3158,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						230,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3159,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						232,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3160,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						234,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3161,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						228,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2678,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						158,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2679,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						0,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						2696,
						false
						,[
						[
							2,
							["motorcyclesound",false]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[false, "On"],
				false,
				null,
				9874527849250046,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					9874527849250046,
					false
					,[
					[
						1,
						[
							2,
							"On"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2435498300850666,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						3437403516400021,
						false
					]
					],
					[
					[
						234,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						8931907336259889,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						229,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						6563228977313101,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						230,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						8536090712368946,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						231,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						7953784209728938,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						233,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						6658906806631737,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						232,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						2338099788992581,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						207,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						1728206341490145,
						false
						,[
						[
							0,
							[
								0,
								-250
							]
						]
						]
					]
,					[
						223,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						9978643370903437,
						false
						,[
						[
							0,
							[
								0,
								250
							]
						]
						]
					]
,					[
						194,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						1563946011990084,
						false
						,[
						[
							0,
							[
								0,
								-120
							]
						]
						]
					]
,					[
						202,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						6470402829653977,
						false
						,[
						[
							0,
							[
								0,
								250
							]
						]
						]
					]
,					[
						187,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						8453090978274322,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						214,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						4335612527274887,
						false
						,[
						[
							0,
							[
								0,
								250
							]
						]
						]
					]
,					[
						191,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						2354490404798309,
						false
						,[
						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
,					[
						192,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						9835479401098836,
						false
						,[
						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
,					[
						184,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						4440535841556273,
						false
						,[
						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
,					[
						185,
						cr.behaviors.Rotate.prototype.acts.SetSpeed,
						"Rotate",
						2525821321805121,
						false
						,[
						[
							0,
							[
								0,
								-80
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"check active",
		[
		[
			1,
			"getTime",
			1,
			"",
false,false,1990761772365586,false
		]
,		[
			1,
			"verify",
			0,
			0,
false,false,8908505173849089,false
		]
,		[
			1,
			"data",
			1,
			"",
false,false,1304148444518694,false
		]
,		[
			1,
			"lastdata",
			1,
			"",
false,false,15421089411732,false
		]
,		[
			1,
			"username",
			1,
			"",
false,false,8421569660032958,false
		]
,		[
			1,
			"start_check_acitve",
			0,
			0,
false,false,3192841576963325,false
		]
,		[
			1,
			"check_acitve_ok",
			0,
			0,
false,false,2378779820812635,false
		]
,		[
			1,
			"onlinestatus",
			0,
			0,
false,false,993496905531404,false
		]
,		[
			1,
			"timeTB",
			0,
			1,
false,false,7064212684275289,false
		]
,		[
			1,
			"serverTime",
			0,
			1,
false,false,5075287282758724,false
		]
,		[
			1,
			"loaderlayoutcomplete",
			0,
			0,
false,false,6053615683845227,false
		]
,		[
			1,
			"errorcode",
			0,
			0,
false,false,6162285334568565,false
		]
,		[
			1,
			"gotopage",
			0,
			0,
false,false,6909375068442721,false
		]
,		[
			1,
			"checktime",
			0,
			0,
false,false,1498694560858773,false
		]
,		[
			1,
			"press_start_button",
			0,
			0,
false,false,7633026262975888,false
		]
,		[
			1,
			"run_at_start",
			0,
			0,
false,false,4923644929026839,false
		]
,		[
			0,
			[true, "Phần chung cho tất cả - check game activation"],
			false,
			null,
			1819828641501289,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1819828641501289,
				false
				,[
				[
					1,
					[
						2,
						"Phần chung cho tất cả - check game activation"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1536872958085278,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					9228229712299827,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6838135227048689,
					false
					,[
					[
						11,
						"scaleRatio"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.min
							,[
[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowwidth
								]
								,[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
							]
,[
								7,
								[
									19,
									cr.system_object.prototype.exps.windowheight
								]
								,[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
							]
							]
						]
					]
					]
				]
,				[
					173,
					cr.plugins_.Sprite.prototype.acts.SetSize,
					null,
					4642359188229667,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
							,[
								23,
								"scaleRatio"
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
							,[
								23,
								"scaleRatio"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8484192790901681,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLoadFinished,
					null,
					1,
					false,
					false,
					false,
					5331777381878908,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7414921858244199,
					false
					,[
					[
						11,
						"loaderlayoutcomplete"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9329857927214556,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5266194849364813,
					false
					,[
					[
						11,
						"errorcode"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6451342047408449,
					false
					,[
					[
						11,
						"loaderlayoutcomplete"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					774824197399981,
					false
					,[
					[
						11,
						"show_dialog"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7597030633487996,
					false
					,[
					[
						11,
						"errorcode"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					173,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					2509106689334962,
					false
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1242161637413714,
					false
					,[
					[
						11,
						"2swaiting"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.time
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8542488781067724,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7640997022996061,
					false
					,[
					[
						11,
						"errorcode"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9791614499483594,
					false
					,[
					[
						11,
						"loaderlayoutcomplete"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4534710277582864,
					false
					,[
					[
						11,
						"show_dialog"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9446356682994527,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7485867794702392,
						false
						,[
						[
							11,
							"2swaiting"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps.time
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2092788034322781,
						false
						,[
						[
							11,
							"errorcode"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "dialog"],
				false,
				null,
				8146602470610744,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8146602470610744,
					false
					,[
					[
						1,
						[
							2,
							"dialog"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2248468083040731,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						2169749290823647,
						false
					]
					],
					[
					[
						172,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						212241619552095,
						false
						,[
						[
							4,
							173
						]
,						[
							3,
							0
						]
						]
					]
,					[
						174,
						cr.behaviors.Pin.prototype.acts.Pin,
						"Pin",
						5304317095254919,
						false
						,[
						[
							4,
							173
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7136908915721629,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1084761134177418,
						false
						,[
						[
							4,
							174
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6165872889094408,
						false
						,[
						[
							11,
							"errorcode"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						173,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						6223158359764718,
						false
						,[
						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								0,
								-600
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9768643047521688,
					[
					[
						3,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						4721605054790704,
						false
						,[
						[
							4,
							172
						]
						]
					]
					],
					[
					[
						1,
						cr.plugins_.Browser.prototype.acts.Close,
						null,
						7826016208406445,
						false
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Bước 1 "],
				false,
				null,
				5532988759208232,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5532988759208232,
					false
					,[
					[
						1,
						[
							2,
							"Bước 1 "
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7411670721710308,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						1023623017333559,
						false
					]
					],
					[
					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						8648829061591498,
						false
						,[
						[
							1,
							[
								2,
								"checkinternet()"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					244137355971993,
					[
					[
						4,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						9313871158663499,
						false
						,[
						[
							1,
							[
								2,
								"checkactivefx"
							]
						]
						]
					]
					],
					[
					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						4274038646666225,
						false
						,[
						[
							1,
							[
								2,
								"gettimestamp()"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8148784573783754,
						false
						,[
						[
							11,
							"getTime"
						]
,						[
							7,
							[
								20,
								176,
								cr.plugins_.cjs.prototype.exps.ReadExecutionReturn,
								true,
								null
							]
						]
						]
					]
,					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						2528617546314541,
						false
						,[
						[
							1,
							[
								2,
								"checklocationstorage()"
							]
						]
						]
					]
,					[
						171,
						cr.plugins_.AJAX.prototype.acts.Request,
						null,
						6996552674540495,
						false
						,[
						[
							1,
							[
								2,
								"checkdatafile"
							]
						]
,						[
							1,
							[
								2,
								"file:///sdcard/Android/data/com.gvtechcom.gameportal/files/data.isa"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					548871868035264,
					[
					[
						171,
						cr.plugins_.AJAX.prototype.cnds.OnError,
						null,
						1,
						false,
						false,
						false,
						4994425871845679,
						false
						,[
						[
							1,
							[
								2,
								"checkdatafile"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3410171255139271,
						false
						,[
						[
							11,
							"errorcode"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9526225981377839,
					[
					[
						171,
						cr.plugins_.AJAX.prototype.cnds.OnComplete,
						null,
						1,
						false,
						false,
						false,
						1399409388731389,
						false
						,[
						[
							1,
							[
								2,
								"checkdatafile"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1121140375203679,
						false
						,[
						[
							11,
							"data"
						]
,						[
							7,
							[
								20,
								171,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4425415394802356,
						false
						,[
						[
							11,
							"lastdata"
						]
,						[
							7,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"Lastdatavalue"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						8480144179430051,
						false
						,[
						[
							1,
							[
								2,
								"Bước 2"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[false, "Bước 2"],
				false,
				null,
				2338401441799423,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2338401441799423,
					false
					,[
					[
						1,
						[
							2,
							"Bước 2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7404078508068096,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						82093169283919,
						false
						,[
						[
							11,
							"data"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"lastdata"
							]
						]
						]
					]
					],
					[
					[
						175,
						cr.plugins_.Dictionary.prototype.acts.JSONLoad,
						null,
						8929340056140849,
						false
						,[
						[
							1,
							[
								23,
								"data"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5325335992663564,
						false
						,[
						[
							11,
							"username"
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"key1"
								]
								]
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7484367501599735,
						false
						,[
						[
							1,
							[
								2,
								"idArray"
							]
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"key2"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1049861578833369,
						false
						,[
						[
							11,
							"start_check_acitve"
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						2131743747985997,
						false
						,[
						[
							1,
							[
								2,
								"Bước 2"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4574143778893007,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4383594930364659,
						false
						,[
						[
							11,
							"data"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								23,
								"lastdata"
							]
						]
						]
					]
					],
					[
					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						1206636234031781,
						false
						,[
						[
							1,
							[
								2,
								"checkinternet()"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6602959763165488,
						false
						,[
						[
							11,
							"onlinestatus"
						]
,						[
							7,
							[
								20,
								176,
								cr.plugins_.cjs.prototype.exps.ReadExecutionReturn,
								true,
								null
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						5876658656693933,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							4658397743842545,
							false
							,[
							[
								11,
								"onlinestatus"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1873931722125967,
							false
							,[
							[
								11,
								"start_check_acitve"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							4572511462226303,
							false
							,[
							[
								1,
								[
									2,
									"Bước 2"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7163184194691832,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5496279611935288,
							false
							,[
							[
								11,
								"onlinestatus"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9261403867905431,
							false
							,[
							[
								11,
								"errorcode"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							2106875452018482,
							false
							,[
							[
								1,
								[
									2,
									"Bước 2"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Bước 3.0"],
				false,
				null,
				8308728359357486,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8308728359357486,
					false
					,[
					[
						1,
						[
							2,
							"Bước 3.0"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4869866591184593,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4486457481048224,
						false
						,[
						[
							11,
							"start_check_acitve"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9016861203927489,
						false
						,[
						[
							11,
							"start_check_acitve"
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						5017335141125663,
						false
						,[
						[
							1,
							[
								2,
								"checklocationstorage()"
							]
						]
						]
					]
,					[
						175,
						cr.plugins_.Dictionary.prototype.acts.JSONLoad,
						null,
						7831618491227461,
						false
						,[
						[
							1,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"dataLogin"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4277593475532345,
						false
						,[
						[
							11,
							"timeTB"
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"data02"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9123251069033128,
						false
						,[
						[
							11,
							"verify"
						]
,						[
							7,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"dbstore"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						9841456583693294,
						false
						,[
						[
							1,
							[
								2,
								"Bước 4"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Bước 3.1"],
				false,
				null,
				6591151695882918,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					6591151695882918,
					false
					,[
					[
						1,
						[
							2,
							"Bước 3.1"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8510718883334626,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6641712353733087,
						false
						,[
						[
							11,
							"start_check_acitve"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5747460638679502,
						false
						,[
						[
							11,
							"start_check_acitve"
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
,					[
						175,
						cr.plugins_.Dictionary.prototype.acts.JSONLoad,
						null,
						8929340056140849,
						false
						,[
						[
							1,
							[
								23,
								"data"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5325335992663564,
						false
						,[
						[
							11,
							"username"
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"key1"
								]
								]
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7484367501599735,
						false
						,[
						[
							1,
							[
								2,
								"idArray"
							]
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"key2"
								]
								]
							]
						]
						]
					]
,					[
						171,
						cr.plugins_.AJAX.prototype.acts.Request,
						null,
						3499270380533381,
						false
						,[
						[
							1,
							[
								2,
								"checkLogin"
							]
						]
,						[
							1,
							[
								10,
								[
									2,
									"http://api.babybean.vn/checktimelogin?data="
								]
								,[
									23,
									"username"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5736335018491914,
					[
					[
						171,
						cr.plugins_.AJAX.prototype.cnds.OnComplete,
						null,
						1,
						false,
						false,
						false,
						7859476774885707,
						false
						,[
						[
							1,
							[
								2,
								"checkLogin"
							]
						]
						]
					]
					],
					[
					[
						176,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						9965927453867427,
						false
						,[
						[
							1,
							[
								2,
								"checklocationstorage()"
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						5149560950245227,
						false
						,[
						[
							1,
							[
								2,
								"dataLogin"
							]
						]
,						[
							7,
							[
								20,
								171,
								cr.plugins_.AJAX.prototype.exps.LastData,
								true,
								null
							]
						]
						]
					]
,					[
						175,
						cr.plugins_.Dictionary.prototype.acts.JSONLoad,
						null,
						9838154068910979,
						false
						,[
						[
							1,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"dataLogin"
								]
								]
							]
						]
						]
					]
,					[
						121,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						8062553164955823,
						false
						,[
						[
							7,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"dataLogin"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5162478068669494,
						false
						,[
						[
							11,
							"timeTB"
						]
,						[
							7,
							[
								20,
								175,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									2,
									"data02"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4927018025101699,
						false
						,[
						[
							11,
							"verify"
						]
,						[
							7,
							[
								20,
								2,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									2,
									"dbstore"
								]
								]
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						9720206446040915,
						false
						,[
						[
							1,
							[
								2,
								"Lastdatavalue"
							]
						]
,						[
							7,
							[
								23,
								"data"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						2367341928664922,
						false
						,[
						[
							1,
							[
								2,
								"Bước 4"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[false, "Bước 4"],
				false,
				null,
				1235166966779531,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1235166966779531,
					false
					,[
					[
						1,
						[
							2,
							"Bước 4"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					4514463509286086,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1788136313954937,
						false
						,[
						[
							11,
							"verify"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								201
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4246840466202077,
						false
						,[
						[
							11,
							"getTime"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								23,
								"timeTB"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2752239219499348,
						false
						,[
						[
							11,
							"errorcode"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						519200922631247,
						false
						,[
						[
							1,
							[
								2,
								"Bước 4"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3892919416221686,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8479214186650404,
						false
						,[
						[
							11,
							"verify"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								200
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2131797716860462,
						false
						,[
						[
							11,
							"getTime"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								23,
								"timeTB"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3813675530274791,
						false
						,[
						[
							11,
							"check_acitve_ok"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						1350734142802273,
						false
						,[
						[
							1,
							[
								2,
								"Bước 4"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
	],
	"media/",
	true,
	1280,
	720,
	3,
	true,
	true,
	false,
	"1.0",
	true,
	false,
	2,
	2,
	624,
	false,
	true,
	[
	]
];};
